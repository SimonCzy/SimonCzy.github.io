<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>The First Thing You Should Know</title>
    <url>/2023/02/15/Others/User-Manual/</url>
    <content><![CDATA[<p>ü•≥ Welcome to Mind Game!!!</p>
<p>üìë As the first post on my personal website, it can show you the way my thought hidden behind all my posts. Please take your time and enjoy your trip! </p>
<span id="more"></span>

<h2 id="My-Game"><a href="#My-Game" class="headerlink" title="My Game"></a>My Game</h2><h3 id="1-Categories"><a href="#1-Categories" class="headerlink" title="1. Categories:"></a>1. Categories:</h3><p>Sort by alphabetical order.</p>
<ul>
<li><strong><u>Draft</u></strong> </li>
<li><strong><u>Make</u></strong>: Practical operation<ul>
<li><strong><u>Bot</u></strong><ul>
<li><strong><u>Telegram</u></strong></li>
<li><strong><u>Discord</u></strong></li>
<li><strong><u>Rocket.Chat</u></strong></li>
</ul>
</li>
<li><u><strong>Docker</strong></u></li>
<li><u><strong>Linux</strong></u></li>
<li><u><strong>Odoo</strong></u></li>
</ul>
</li>
<li><strong><u>Mind</u></strong>: Personal interests and hobbies</li>
<li><strong><u>Undefined</u></strong></li>
</ul>
<h3 id="2-Tag"><a href="#2-Tag" class="headerlink" title="2. Tag"></a>2. Tag</h3><p>Sort by alphabetical order.</p>
<ul>
<li>Related to specific fields<ul>
<li><strong><u>BIOS</u></strong></li>
<li><strong><u>Bot</u></strong></li>
<li><strong><u>DevOps</u></strong></li>
<li><strong><u>Linux</u></strong></li>
<li><strong><u>MacOS</u></strong></li>
<li><strong><u>Odoo</u></strong></li>
<li><strong><u>Python</u></strong></li>
<li><strong><u>SSH</u></strong></li>
</ul>
</li>
<li>Related to the purpose of posts<ul>
<li><strong><u>Env&#x2F;Config</u></strong>: To set up a new environment or make it easier to use.</li>
<li><u><strong>Introduction</strong></u>: The first thing you need to know about the new field or new shit (such as this postü§î).</li>
<li><strong><u>Quick Check</u></strong>: Mainly consists of commands, scripts, or code with a simple or no explanation.</li>
<li><strong><u>Troubleshoot</u></strong>: The way to deal with unseen mistakes. It does more focus on the way I thought üí≠ than the technology I used.</li>
</ul>
</li>
</ul>
<h3 id="1-Other"><a href="#1-Other" class="headerlink" title="-1. Other"></a>-1. Other</h3><ul>
<li>All blog content may be modified at some point in the future for some reason. (I will try to keep my change log, but human beings are lazy).</li>
</ul>
]]></content>
      <categories>
        <category>Undefined</category>
      </categories>
      <tags>
        <tag>Introduction</tag>
      </tags>
  </entry>
  <entry>
    <title>Help AIDS Event</title>
    <url>/2023/05/27/Help-AIDS-Event/</url>
    <content><![CDATA[<p>We are organizing an AIDS support event on 26th May, with a strong emphasis on caring for individuals affected by HIV&#x2F;AIDS. We invite you to purchase tickets and join us in raising awareness and support for those living with this condition.</p>
<p>Here is the coming <a href="https://tectal-dev-ed.develop.my.salesforce-sites.com/AAkPay__EventsUpcoming">event</a></p>
]]></content>
  </entry>
  <entry>
    <title>Help AIDS</title>
    <url>/2023/05/27/Help-AIDS/</url>
    <content><![CDATA[<p>Dear friends, we have the power to make a difference in the lives of those affected by HIV&#x2F;AIDS. Today, I urge you to join me in supporting AHL, an incredible organization dedicated to combating this global epidemic. By contributing to AHL, we can provide critical resources, raise awareness, and offer hope to individuals living with HIV&#x2F;AIDS. Together, let‚Äôs make a profound impact on the lives of those affected and work towards a world free from the burden of this disease.</p>
<p>Here is the donation <a href="https://tectal-dev-ed.develop.my.salesforce-sites.com/AAkPay__CheckoutM">link</a></p>
]]></content>
  </entry>
  <entry>
    <title>Steam Needs to Be Online to Update</title>
    <url>/2023/05/22/Steam-Needs-to-Be-Online-to-Update/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Reactivate Ubuntu Software Store</title>
    <url>/2023/05/21/Reactivate-Ubuntu-Software-Store/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Python Public Util Code</title>
    <url>/2023/05/21/Python-Public-Util-Code/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Set Up V2ray Environment On Oracle Free Tier</title>
    <url>/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Learn to use oracle cloud platform</li>
<li>Set up a v2ray environment on linux</li>
</ul>
<span id="more"></span>

<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Apply-for-an-Oracle-Free-Tier"><a href="#1-Apply-for-an-Oracle-Free-Tier" class="headerlink" title="1. Apply for an Oracle Free Tier"></a>1. Apply for an Oracle Free Tier</h3><p>Go to <a href="https://www.oracle.com/au/cloud/free/">the official website</a> to apply for your free cloud server.</p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/1.png"></p>
<p>In order to successfully apply for the free cloud server, you should have your credit card, billing address and your real IP location with you.</p>
<h3 id="2-Create-your-instance"><a href="#2-Create-your-instance" class="headerlink" title="2. Create your instance"></a>2. Create your instance</h3><p>Now you have already successfully applied for an free account and log in to the Oracle cloud interface.</p>
<h4 id="2-1-Click-the-instance"><a href="#2-1-Click-the-instance" class="headerlink" title="2.1 Click the instance"></a>2.1 Click the instance</h4><p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/2.png"></p>
<h4 id="2-2-Create-Instance"><a href="#2-2-Create-Instance" class="headerlink" title="2.2 Create Instance"></a>2.2 Create Instance</h4><p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/3.png"></p>
<p>After you create your instances, you can see them in this page.</p>
<h4 id="2-3-Custom-Initialization"><a href="#2-3-Custom-Initialization" class="headerlink" title="2.3 Custom Initialization"></a>2.3 Custom Initialization</h4><p>You should customize four things in this page.</p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/4.png"></p>
<h5 id="2-3-1-Image-and-shape"><a href="#2-3-1-Image-and-shape" class="headerlink" title="2.3.1 Image and shape"></a>2.3.1 Image and shape</h5><p>Set it as CentOS 7 image</p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/5.png"></p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/6.png"></p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/7.png"></p>
<h5 id="2-3-2-Networking"><a href="#2-3-2-Networking" class="headerlink" title="2.3.2 Networking"></a>2.3.2 Networking</h5><p>It should be your first time to create a network. So just create a new network.</p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/8.png"></p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/9.png"></p>
<h5 id="2-3-3-Add-SSH-keys"><a href="#2-3-3-Add-SSH-keys" class="headerlink" title="2.3.3 Add SSH keys"></a>2.3.3 Add SSH keys</h5><p>Save your private key, which you will use to login your machin by ssh.</p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/10.png"></p>
<p>You can check <a href="https://simonczy.github.io/2023/03/27/Guidance/Turn-On-SSH-Service-On-Ubuntu/#8-B-Use-private-key-to-ssh-A">here</a> to learn how to ssh a machine by private key.</p>
<h5 id="2-3-4-Boot-volume"><a href="#2-3-4-Boot-volume" class="headerlink" title="2.3.4 Boot volume"></a>2.3.4 Boot volume</h5><p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/11.png"></p>
<p>After completing the four steps above, you can now create your machine.</p>
<h3 id="3-Machine-detail"><a href="#3-Machine-detail" class="headerlink" title="3. Machine detail"></a>3. Machine detail</h3><p>When your machine is running, you should be able to get its public ip address and user name, which you will use to ssh your cloud server. </p>
<p>And then, you should click the subnet.</p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/12.png"></p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/13.png"></p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/14.png"></p>
<p><img data-src="/2023/04/17/Guidance/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/15.png"></p>
<p>And now, you already create your ingress rules.</p>
<h3 id="4-Build-up-your-v2ray-configuration-on-server"><a href="#4-Build-up-your-v2ray-configuration-on-server" class="headerlink" title="4. Build up your v2ray configuration on server"></a>4. Build up your v2ray configuration on server</h3><h4 id="4-1-SSH-your-machine"><a href="#4-1-SSH-your-machine" class="headerlink" title="4.1 SSH your machine"></a>4.1 SSH your machine</h4><h4 id="4-2-Switch-to-root"><a href="#4-2-Switch-to-root" class="headerlink" title="4.2 Switch to root"></a>4.2 Switch to root</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure>

<h3 id="4-3-Configure-v2ray"><a href="#4-3-Configure-v2ray" class="headerlink" title="4.3 Configure v2ray"></a>4.3 Configure v2ray</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure>

<p>Chooes 1 at the first question, and then keep pressing ‚ÄúEnter‚Äù.</p>
<h4 id="4-4-Stop-firewall"><a href="#4-4-Stop-firewall" class="headerlink" title="4.4 Stop firewall"></a>4.4 Stop firewall</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>

<h4 id="4-5-Get-the-link"><a href="#4-5-Get-the-link" class="headerlink" title="4.5 Get the link"></a>4.5 Get the link</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for url</span></span><br><span class="line">v2ray url</span><br><span class="line"></span><br><span class="line"><span class="comment"># or for qr code</span></span><br><span class="line">v2ray qr</span><br></pre></td></tr></table></figure>

<p>Now, you have already finish your work on server.</p>
<h3 id="5-Client"><a href="#5-Client" class="headerlink" title="5. Client"></a>5. Client</h3><p>You should install different clients based on different systems and use the link from <strong><u>4.5</u></strong> you just obtained to use the v2ray service.</p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Env/Config</tag>
      </tags>
  </entry>
  <entry>
    <title>Create Your Own Discord Bot</title>
    <url>/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Create a discord bot</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>To set up a assisting robots to help me obtain information.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="0-Preparation"><a href="#0-Preparation" class="headerlink" title="0. Preparation"></a>0. Preparation</h3><p>You should:</p>
<ul>
<li>have a discord accound</li>
<li>have a python environment</li>
</ul>
<h3 id="1-Create-a-discord-bot"><a href="#1-Create-a-discord-bot" class="headerlink" title="1. Create a discord bot"></a>1. Create a discord bot</h3><h4 id="1-1-Enter-discord-application-page"><a href="#1-1-Enter-discord-application-page" class="headerlink" title="1.1 Enter discord application page"></a>1.1 Enter <a href="https://discord.com/developers/applications">discord application page</a></h4><h4 id="1-2-Click-‚ÄúNew-Application‚Äù"><a href="#1-2-Click-‚ÄúNew-Application‚Äù" class="headerlink" title="1.2 Click ‚ÄúNew Application‚Äù"></a>1.2 Click ‚ÄúNew Application‚Äù</h4><p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/1.png"></p>
<h4 id="1-3-Give-it-a-new-name"><a href="#1-3-Give-it-a-new-name" class="headerlink" title="1.3 Give it a new name"></a>1.3 Give it a new name</h4><p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/2.png"></p>
<h4 id="1-4-Get-your-discord-bot-token"><a href="#1-4-Get-your-discord-bot-token" class="headerlink" title="1.4 Get your discord bot token"></a>1.4 Get your discord bot token</h4><p>Enter Bot page</p>
<p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/4.png"></p>
<p>At the beginning, you need to click the ‚ÄúReset Token‚Äù button to gain your first token. You should safely store it because anyone who owns this token can control its corresponding bot. We will use it in <strong><u>Step 4 Make the first move</u></strong>.</p>
<p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/3.png"></p>
<p>If you feel unncomfortable, you can reset your token at any time.</p>
<h3 id="2-Add-you-discord-server"><a href="#2-Add-you-discord-server" class="headerlink" title="2. Add you discord server"></a>2. Add you discord server</h3><p>This server is the place that you can put your dicord bot in.</p>
<h3 id="3-Add-your-bot-into-your-server"><a href="#3-Add-your-bot-into-your-server" class="headerlink" title="3. Add your bot into your server"></a>3. Add your bot into your server</h3><p>Set your application as a bot.</p>
<p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/5.png"></p>
<p>Assign it corresponding permissions. And copy the link.</p>
<p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/6.png"></p>
<p>Go to the link, select your server and authorize it.</p>
<p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/7.png"></p>
<p>Now you have your offline server bot.</p>
<p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/8.png"></p>
<h3 id="4-Make-the-first-move"><a href="#4-Make-the-first-move" class="headerlink" title="4. Make the first move"></a>4. Make the first move</h3><p>Your have already created a bot and assign it into your server. And you have your bot token saved in <strong><u>step 2</u></strong>. Now you can teach your bot to make the first move.</p>
<p>Create this python file and run it.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> discord</span><br><span class="line"></span><br><span class="line">client = discord.Client(intents=discord.Intents.default())</span><br><span class="line"></span><br><span class="line"><span class="meta">@client.event</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_ready</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;We have logged in as &#123;0.user&#125;&#x27;</span>.<span class="built_in">format</span>(client))</span><br><span class="line"></span><br><span class="line"><span class="meta">@client.event</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_message</span>(<span class="params">message</span>):</span><br><span class="line">    <span class="keyword">if</span> message.author == client.user:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> message.content.startswith(<span class="string">&#x27;$hello&#x27;</span>):</span><br><span class="line">        <span class="keyword">await</span> message.channel.send(<span class="string">&#x27;Hello!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Assume your token is &quot;abc456DEF&quot;.</span></span><br><span class="line">token = <span class="string">&quot;abc456DEF&quot;</span></span><br><span class="line"></span><br><span class="line">client.run(token)</span><br></pre></td></tr></table></figure>

<p>And now Jarvis is online.</p>
<p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/9.png"></p>
<p>Then the bot will reply you ‚ÄúHello!‚Äù when you say ‚Äú$hello‚Äù to it.</p>
<p><img data-src="/2023/04/17/Guidance/Create-Your-Own-Discord-Bot/10.png"></p>
<h3 id="5-Improvement"><a href="#5-Improvement" class="headerlink" title="5. Improvement"></a>5. Improvement</h3><p>Now, you have create your bot. What you can do next is to create a new world!</p>
<p>For more information, you can check the <a href="https://discordpy.readthedocs.io/en/latest/index.html">discord official doc</a>.</p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Bot</category>
        <category>Discord</category>
      </categories>
      <tags>
        <tag>Introduction</tag>
        <tag>Bot</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Compose Command</title>
    <url>/2023/04/15/Quick-Check/Docker/Docker-Compose-Command/</url>
    <content><![CDATA[<p>Frequently used docker compose commands</p>
<span id="more"></span>

<h2 id="Docker-Compose-Start"><a href="#Docker-Compose-Start" class="headerlink" title="Docker Compose Start"></a>Docker Compose Start</h2><h3 id="Start-compose"><a href="#Start-compose" class="headerlink" title="Start compose"></a>Start compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure>

<h3 id="End-compose"><a href="#End-compose" class="headerlink" title="End compose"></a>End compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose down</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Make</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Docker On Ubuntu</title>
    <url>/2023/04/15/Quick-Check/Docker/Install-Docker-On-Ubuntu/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Install docker  on your ubuntu</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>OS: Ubuntu 20.04</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Install-docker-and-docker-compose"><a href="#Install-docker-and-docker-compose" class="headerlink" title="Install docker and docker-compose"></a>Install <a href="https://docs.docker.com/get-docker/">docker</a> and <a href="https://docs.docker.com/compose/install/">docker-compose</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.docker.com | sh</span><br></pre></td></tr></table></figure>

<h3 id="Add-current-user-to-docker-group"><a href="#Add-current-user-to-docker-group" class="headerlink" title="Add current user to docker group"></a>Add current user to docker group</h3><p>and you will not need to add sudo when you use docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://docs.rocket.chat/deploy/prepare-for-your-deployment/rapid-deployment-methods/docker-and-docker-compose">Docker &amp; Docker Compose</a></p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Virtual Environment On Ubuntu</title>
    <url>/2023/04/07/Quick-Check/Python/Python-Virtual-Environment-On-Ubuntu/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Python Virtual Environment</li>
</ul>
<span id="more"></span>

<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Install-virtualenv"><a href="#Install-virtualenv" class="headerlink" title="Install virtualenv"></a>Install virtualenv</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-virtualenv</span><br></pre></td></tr></table></figure>

<h3 id="Intialize-the-virtual-environment"><a href="#Intialize-the-virtual-environment" class="headerlink" title="Intialize the virtual environment"></a>Intialize the virtual environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> a_folder</span><br><span class="line"></span><br><span class="line"><span class="comment"># it will create a folder named &quot;venv&quot; which stores virtual environment</span></span><br><span class="line">virtual venv</span><br></pre></td></tr></table></figure>

<h3 id="Activate-the-virtual-environment"><a href="#Activate-the-virtual-environment" class="headerlink" title="Activate the virtual environment"></a>Activate the virtual environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ven/bin/activate</span><br></pre></td></tr></table></figure>

<h3 id="Deactivate-the-virtual-environment"><a href="#Deactivate-the-virtual-environment" class="headerlink" title="Deactivate the virtual environment"></a>Deactivate the virtual environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Undefined</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Command</title>
    <url>/2023/03/28/Quick-Check/Git-Command/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/m0_50861902/article/details/119181470">https://blog.csdn.net/m0_50861902/article/details/119181470</a></p>
<p>Frequently used git commands</p>
<span id="more"></span>

<h2 id="Git-Quick-Start"><a href="#Git-Quick-Start" class="headerlink" title="Git Quick Start"></a>Git Quick Start</h2><h3 id="version-fallback"><a href="#version-fallback" class="headerlink" title="version fallback"></a>version fallback</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># you need to be in the branch you want to fall back</span></span><br><span class="line"><span class="comment"># input &quot;q&quot; to quit</span></span><br><span class="line"><span class="comment"># write down the commit number, let us assume it it aa11bb22cc33dd44</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># you can fallback to the specific commit you want</span></span><br><span class="line"><span class="comment"># please remember to save your original or it will be erased</span></span><br><span class="line">git reset --hard aa11bb22cc33dd44</span><br></pre></td></tr></table></figure>

<h3 id="display-branch"><a href="#display-branch" class="headerlink" title="display branch"></a>display branch</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># output shown as following</span></span><br><span class="line"><span class="comment"># WI325-Simon-0413</span></span><br><span class="line"><span class="comment"># *develop (current branch with &quot;*&quot;)</span></span><br></pre></td></tr></table></figure>

<h3 id="delete-branch"><a href="#delete-branch" class="headerlink" title="delete branch"></a>delete branch</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d WI325-Simon-0413</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Draft</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Develop Your Addon Based On Odoo 12</title>
    <url>/2023/03/27/Guidance/Odoo/Develop-Your-Addon-Based-On-Odoo-12/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Odoo Addon Customization</li>
<li>Develop Odoo Addon</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>I have already installed odoo 12 successfully on my Ubuntu  20.04, so the next step is to develop my personal addon module.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h3><p><a href="https://simonczy.github.io/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/">Install-Odoo12-On-Ubuntu20-04</a></p>
<h3 id="Clone-your-code-or-create-your-develop-folder"><a href="#Clone-your-code-or-create-your-develop-folder" class="headerlink" title="Clone your code or create your develop folder"></a>Clone your code or create your develop folder</h3><h3 id="Update-your-odoorc-file"><a href="#Update-your-odoorc-file" class="headerlink" title="Update your .odoorc file"></a>Update your .odoorc file</h3><p>Add your code folder into odoo configuration location and use ‚Äú,‚Äù as separator.</p>
<p><img data-src="/2023/03/27/Guidance/Odoo/Develop-Your-Addon-Based-On-Odoo-12/1.png"></p>
<p>If you check the link from Preparation carefully, you will know where .odoorc is.</p>
<p>If you decide to <strong>write your addon from scratch</strong>, you <strong>don‚Äôt need to</strong> follow the rest of this post. You can just write your code on the folder you just created.</p>
<p>The rest of this post is for the people who want to <strong>use their previous code as foundation</strong>.</p>
<h3 id="Add-your-database-Optional"><a href="#Add-your-database-Optional" class="headerlink" title="Add your database (Optional)"></a>Add your database (Optional)</h3><p>If you already developed your addon before and had your database, you should move it from your original computer to your new compute.</p>
<h4 id="Go-to-the-odoo-database-manager"><a href="#Go-to-the-odoo-database-manager" class="headerlink" title="Go to the odoo database manager"></a>Go to the odoo database manager</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">http://localhost:8069/web/database/manager</span><br></pre></td></tr></table></figure>

<h4 id="Export-your-database"><a href="#Export-your-database" class="headerlink" title="Export your database"></a>Export your database</h4><p>Backup your database and save the .zip file.</p>
<p><img data-src="/2023/03/27/Guidance/Odoo/Develop-Your-Addon-Based-On-Odoo-12/2.png"></p>
<h4 id="Import-your-database"><a href="#Import-your-database" class="headerlink" title="Import your database"></a>Import your database</h4><p>Restore your database from downloaded .zip file</p>
<p><img data-src="/2023/03/27/Guidance/Odoo/Develop-Your-Addon-Based-On-Odoo-12/3.png"></p>
<p>Input the master password you set up before, chooes the .zip file and set up a new name.</p>
<p><img data-src="/2023/03/27/Guidance/Odoo/Develop-Your-Addon-Based-On-Odoo-12/4.png"></p>
<p>When it finishes, you may not find the database you just imported.</p>
<p><img data-src="/2023/03/27/Guidance/Odoo/Develop-Your-Addon-Based-On-Odoo-12/6.png"></p>
<p>Do not need to be panic, if you import again, it will show up this alert.</p>
<p><img data-src="/2023/03/27/Guidance/Odoo/Develop-Your-Addon-Based-On-Odoo-12/5.png"></p>
<h3 id="Update-your-odoorc-file-Optional"><a href="#Update-your-odoorc-file-Optional" class="headerlink" title="Update your .odoorc file (Optional)"></a>Update your .odoorc file (Optional)</h3><p>What you need to do is to update your database name in odoo configuration file.</p>
<p><img data-src="/2023/03/27/Guidance/Odoo/Develop-Your-Addon-Based-On-Odoo-12/7.png"></p>
<h3 id="Initialize-your-database-Optional"><a href="#Initialize-your-database-Optional" class="headerlink" title="Initialize your database (Optional)"></a>Initialize your database (Optional)</h3><p>In this time, when you run odoo, it may ask you to initial your database. You can run this command to initialize your database.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./odoo-bin -i base</span><br></pre></td></tr></table></figure>

<h3 id="Update-all-the-addon-module-Optional"><a href="#Update-all-the-addon-module-Optional" class="headerlink" title="Update all the addon module (Optional)"></a>Update all the addon module (Optional)</h3><p>Run the following code to update all your addon module, it may take a while.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./odoo-bin -u all</span><br></pre></td></tr></table></figure>

<h3 id="Enjoy-your-addon"><a href="#Enjoy-your-addon" class="headerlink" title="Enjoy your addon"></a>Enjoy your addon</h3>]]></content>
      <categories>
        <category>Make</category>
        <category>Odoo</category>
      </categories>
      <tags>
        <tag>Env/Config</tag>
        <tag>Odoo</tag>
      </tags>
  </entry>
  <entry>
    <title>Turn On SSH Service On Ubuntu</title>
    <url>/2023/03/27/Guidance/Turn-On-SSH-Service-On-Ubuntu/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Turn On Ubuntu SSL Service</li>
<li>Connect Ubuntu From Public Network</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>I would like to control my server even I am not in my home. Let set target server is A, and the laptop is B.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Get-the-local-IP-of-A"><a href="#1-Get-the-local-IP-of-A" class="headerlink" title="1. Get the local IP of A"></a>1. Get the local IP of A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run on A</span></span><br><span class="line">ifconfig</span><br><span class="line"><span class="comment"># let assume this IP is 192.168.1.1</span></span><br></pre></td></tr></table></figure>

<h3 id="2-SSH-from-B-in-the-same-WI-FI-Fail"><a href="#2-SSH-from-B-in-the-same-WI-FI-Fail" class="headerlink" title="2. SSH from B in the same WI-FI  - Fail"></a>2. SSH from B in the same WI-FI  - Fail</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run on B</span></span><br><span class="line">ssh user@192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh: connect to host user@192.168.1.1 port 22: Connection refused</span></span><br></pre></td></tr></table></figure>

<h3 id="3-Install-OpenSSH-in-A"><a href="#3-Install-OpenSSH-in-A" class="headerlink" title="3. Install OpenSSH  in A"></a>3. Install OpenSSH  in A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y openssh-server</span><br></pre></td></tr></table></figure>

<h3 id="4-SSH-from-B-in-the-same-WI-FI-Success"><a href="#4-SSH-from-B-in-the-same-WI-FI-Success" class="headerlink" title="4. SSH from B in the same WI-FI - Success"></a>4. SSH from B in the same WI-FI - Success</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run on B</span></span><br><span class="line">ssh user@192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># connect successfully</span></span><br><span class="line"><span class="comment"># but not secure enough</span></span><br></pre></td></tr></table></figure>

<h3 id="5-Generate-key-in-A"><a href="#5-Generate-key-in-A" class="headerlink" title="5. Generate key in A"></a>5. Generate key in A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># keep clicking enter</span></span><br><span class="line">ssh-keygen</span><br><span class="line"></span><br><span class="line"><span class="comment"># enter ssh folder to see public key and private key</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy the private key to B</span></span><br></pre></td></tr></table></figure>

<h3 id="6-Change-SSH-configuration-in-A"><a href="#6-Change-SSH-configuration-in-A" class="headerlink" title="6. Change SSH configuration in A"></a>6. Change SSH configuration in A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable:</span></span><br><span class="line"><span class="comment"># use public key to login</span></span><br><span class="line"><span class="comment">#     &quot;PubkeyAuthentication yes&quot;</span></span><br><span class="line"><span class="comment"># people can not use password to login</span></span><br><span class="line"><span class="comment">#     &quot;PasswordAuthentication no&quot;</span></span><br><span class="line"><span class="comment"># change SSL port:</span></span><br><span class="line"><span class="comment">#     &quot;Port 33333&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="7-Restart-SSH-service-in-A"><a href="#7-Restart-SSH-service-in-A" class="headerlink" title="7. Restart SSH service in A"></a>7. Restart SSH service in A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>

<h3 id="8-B-Use-private-key-to-ssh-A"><a href="#8-B-Use-private-key-to-ssh-A" class="headerlink" title="8. B Use private key to ssh A"></a>8. B Use private key to ssh A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh user@192.168.1.1 -p 33333</span><br><span class="line"><span class="comment"># user@192.168.1.1: Permission denied (publickey).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># enter the folder that contains private key</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="comment"># id_rsa</span></span><br><span class="line"><span class="built_in">chmod</span> 0600 id_rsa</span><br><span class="line"></span><br><span class="line">ssh user@192.168.1.1 -p 33333 -i id_rsa</span><br><span class="line"><span class="comment"># login successfully</span></span><br></pre></td></tr></table></figure>

<h3 id="9-Add-private-into-system-in-B"><a href="#9-Add-private-into-system-in-B" class="headerlink" title="9. Add private into system in B"></a>9. Add private into system in B</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># login successfully now even without linking private key, however, it needs to run this command every time you poweroff B</span></span><br><span class="line">ssh-add -K id_rsa</span><br><span class="line">ssh user@192.168.1.1 -p 33333</span><br><span class="line"></span><br><span class="line"><span class="comment"># or you can set up the ssh configuration on B, which is macOS system</span></span><br><span class="line">vim ~/.ssh/config</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/27/Guidance/Turn-On-SSH-Service-On-Ubuntu/3.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># and you can ssh A like that now, without setting username, port and identify file</span></span><br><span class="line">ssh ubuntu</span><br></pre></td></tr></table></figure>

<h3 id="10-Connect-to-A-from-public-IP"><a href="#10-Connect-to-A-from-public-IP" class="headerlink" title="10. Connect to A from public IP"></a>10. Connect to A from public IP</h3><p>You need to enter your router to configure NAT Forwarding.</p>
<p><img data-src="/2023/03/27/Guidance/Turn-On-SSH-Service-On-Ubuntu/1.png"></p>
<p><img data-src="/2023/03/27/Guidance/Turn-On-SSH-Service-On-Ubuntu/2.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># you can now ssh to your server in outside by public IP address just like you did in your local network</span></span><br><span class="line">ssh user@142.251.165.100 -p 33333 -i id_rsa</span><br></pre></td></tr></table></figure>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://simonczy.github.io/2023/03/09/Quick-Check/Mac-SSH-Amazon-Using-Pem/">Mac SSH Amazon Using Pem</a></p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Common Code</title>
    <url>/2023/03/26/Quick-Check/Python/Python-Common-Code/</url>
    <content><![CDATA[<p>Frequently used python code</p>
<span id="more"></span>

<h2 id="Python-Quick-Start"><a href="#Python-Quick-Start" class="headerlink" title="Python Quick Start"></a>Python Quick Start</h2><h3 id="Ternary-operator"><a href="#Ternary-operator" class="headerlink" title="Ternary operator"></a>Ternary operator</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p_max_count = <span class="built_in">len</span>(i[<span class="string">&#x27;prompt&#x27;</span>]) <span class="keyword">if</span> p_max_count &lt; <span class="built_in">len</span>(i[<span class="string">&#x27;prompt&#x27;</span>]) <span class="keyword">else</span> p_max_count</span><br></pre></td></tr></table></figure>

<h3 id="Calculate-time-spent"><a href="#Calculate-time-spent" class="headerlink" title="Calculate time spent"></a>Calculate time spent</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">start_time = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line"><span class="comment"># target function</span></span><br><span class="line"></span><br><span class="line">end_time = datetime.datetime.now()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;it takes &#123;&#125; seconds&quot;</span>.<span class="built_in">format</span>((end_time - start_time).seconds))</span><br></pre></td></tr></table></figure>

<h3 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h3><h4 id="Int"><a href="#Int" class="headerlink" title="Int"></a>Int</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate integer from 1 to 20</span></span><br><span class="line"><span class="built_in">print</span> (random.randint(<span class="number">1</span>, <span class="number">20</span>))</span><br></pre></td></tr></table></figure>

<h3 id="Sort"><a href="#Sort" class="headerlink" title="Sort"></a>Sort</h3><h4 id="Sort-2D-list"><a href="#Sort-2D-list" class="headerlink" title="Sort 2D list"></a>Sort 2D list</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">employees = [[<span class="number">10</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">1997</span>], [<span class="number">3</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">1998</span>], [<span class="number">8</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="number">2001</span>]]</span><br><span class="line"></span><br><span class="line">sorted_e_a = <span class="built_in">sorted</span>(employees, key=(<span class="keyword">lambda</span> x:x[<span class="number">0</span>]))</span><br><span class="line">sorted_e_b = <span class="built_in">sorted</span>(employees, key=(<span class="keyword">lambda</span> x:[x[<span class="number">2</span>], x[<span class="number">1</span>]]), reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(employees)</span><br><span class="line"><span class="built_in">print</span>(sorted_e_a)</span><br><span class="line"><span class="built_in">print</span>(sorted_e_b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="comment"># [[10, &#x27;Jack&#x27;, 1997], [3, &#x27;Jack&#x27;, 1998], [8, &#x27;Smith&#x27;, 2001]]</span></span><br><span class="line"><span class="comment"># [[3, &#x27;Jack&#x27;, 1998], [8, &#x27;Smith&#x27;, 2001], [10, &#x27;Jack&#x27;, 1997]]</span></span><br><span class="line"><span class="comment"># [[8, &#x27;Smith&#x27;, 2001], [3, &#x27;Jack&#x27;, 1998], [10, &#x27;Jack&#x27;, 1997]]</span></span><br></pre></td></tr></table></figure>

<h4 id="Sort-dictionary"><a href="#Sort-dictionary" class="headerlink" title="Sort dictionary"></a>Sort dictionary</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic = &#123;<span class="number">2</span>: <span class="number">56</span>, <span class="number">1</span>: <span class="number">2</span>, <span class="number">7</span>: <span class="number">12</span>, <span class="number">4</span>: <span class="number">24</span>, <span class="number">5</span>: <span class="number">12</span>, <span class="number">3</span>: <span class="number">323</span>&#125;</span><br><span class="line">sorted_dict_1 = <span class="built_in">sorted</span>(dic.items(), key = <span class="keyword">lambda</span> kv:(kv[<span class="number">0</span>]))</span><br><span class="line">sorted_dict_2 = <span class="built_in">sorted</span>(dic.items(), key = <span class="keyword">lambda</span> kv:(kv[<span class="number">1</span>]))</span><br><span class="line">sorted_dict_3 = <span class="built_in">sorted</span>(dic.items(), key = <span class="keyword">lambda</span> kv:(kv[<span class="number">1</span>], kv[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(sorted_dict_1)</span><br><span class="line"><span class="built_in">print</span>(sorted_dict_2)</span><br><span class="line"><span class="built_in">print</span>(sorted_dict_3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [(1, 2), (2, 56), (3, 323), (4, 24), (5, 12), (7, 12)]</span></span><br><span class="line"><span class="comment"># [(1, 2), (7, 12), (5, 12), (4, 24), (2, 56), (3, 323)]</span></span><br><span class="line"><span class="comment"># [(1, 2), (5, 12), (7, 12), (4, 24), (2, 56), (3, 323)]</span></span><br></pre></td></tr></table></figure>

<h4 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&quot;54321&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a[::-<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 12345</span></span><br></pre></td></tr></table></figure>

<h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><h4 id="List-generator"><a href="#List-generator" class="headerlink" title="List generator"></a>List generator</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">b = [i+<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> a]</span><br><span class="line"><span class="comment"># b = [2, 3, 4, 5, 6, 7]</span></span><br><span class="line"></span><br><span class="line">c = [i+<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> a <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line"><span class="comment"># c = [3, 5, 7]</span></span><br></pre></td></tr></table></figure>

<h3 id="For"><a href="#For" class="headerlink" title="For"></a>For</h3><h4 id="For-Else"><a href="#For-Else" class="headerlink" title="For-Else"></a>For-Else</h4><p>The only way that the code would run to ‚Äúelse‚Äù, is that there is no break in the for-loop.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> container:</span><br><span class="line">    <span class="keyword">if</span> search_something(item):</span><br><span class="line">        <span class="comment"># Found it!</span></span><br><span class="line">        process(item)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># Didn&#x27;t find anything..</span></span><br><span class="line">    not_found_in_container()</span><br></pre></td></tr></table></figure>

<h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><h4 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&quot;String&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a.lower())</span><br><span class="line"><span class="built_in">print</span>(a.upper())</span><br><span class="line"></span><br><span class="line"><span class="comment"># string</span></span><br><span class="line"><span class="comment"># STRING</span></span><br></pre></td></tr></table></figure>

<h4 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&quot;123asJIjg&quot;</span></span><br><span class="line">b = <span class="string">&quot;123&quot;</span></span><br><span class="line">c = <span class="string">&quot;asJIjg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a.isdigit(), a.isalpha(), a.isalnum())</span><br><span class="line"><span class="built_in">print</span>(b.isdigit(), b.isalpha(), b.isalnum())</span><br><span class="line"><span class="built_in">print</span>(c.isdigit(), c.isalpha(), c.isalnum())</span><br><span class="line"></span><br><span class="line"><span class="comment"># False False True</span></span><br><span class="line"><span class="comment"># True False True</span></span><br><span class="line"><span class="comment"># False True True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># isdigit(): if totally made of number</span></span><br><span class="line"><span class="comment"># isalpha(): if totally made of alpha</span></span><br><span class="line"><span class="comment"># isalnum(): if totally made of number or alpha</span></span><br></pre></td></tr></table></figure>

<h3 id="Initilization"><a href="#Initilization" class="headerlink" title="Initilization"></a>Initilization</h3><h4 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">dict</span>.fromkeys([<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>], <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(x)        </span><br><span class="line"><span class="comment"># &#123;&#x27;A&#x27;: 0, &#x27;B&#x27;: 0, &#x27;C&#x27;: 0&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Simplify"><a href="#Simplify" class="headerlink" title="Simplify"></a>Simplify</h3><h4 id="Dictionary-Count"><a href="#Dictionary-Count" class="headerlink" title="Dictionary Count"></a>Dictionary Count</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> char <span class="keyword">not</span> <span class="keyword">in</span> unigram_counts:</span><br><span class="line">    unigram_counts[char] = <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    unigram_counts[char] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># can be replace by    </span></span><br><span class="line">unigram_counts[char] = unigram_counts.get(char, <span class="number">0</span>) + <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="Visualization"><a href="#Visualization" class="headerlink" title="Visualization"></a>Visualization</h3><h4 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br></pre></td></tr></table></figure>

<h5 id="Draw-by-one-list"><a href="#Draw-by-one-list" class="headerlink" title="Draw by one list"></a>Draw by one list</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">a = [<span class="number">17</span>, <span class="number">15</span>, <span class="number">1479</span>, <span class="number">76</span>, <span class="number">1485</span>, <span class="number">68</span>, <span class="number">1493</span>, <span class="number">10</span>, <span class="number">1500</span>, <span class="number">1492</span>, <span class="number">1478</span>, <span class="number">86</span>, <span class="number">1515</span>, <span class="number">1518</span>, <span class="number">1520</span>, <span class="number">1502</span>, <span class="number">1519</span>, <span class="number">1497</span>, <span class="number">1525</span>, <span class="number">87</span>]</span><br><span class="line">plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.plot(a)</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/26/Quick-Check/Python/Python-Common-Code/1.png"></p>
<h5 id="Draw-by-two-list"><a href="#Draw-by-two-list" class="headerlink" title="Draw by two list"></a>Draw by two list</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">a = [<span class="number">17</span>, <span class="number">15</span>, <span class="number">1479</span>, <span class="number">76</span>, <span class="number">1485</span>, <span class="number">68</span>, <span class="number">1493</span>, <span class="number">10</span>, <span class="number">1500</span>, <span class="number">1492</span>, <span class="number">1478</span>, <span class="number">86</span>, <span class="number">1515</span>, <span class="number">1518</span>, <span class="number">1520</span>, <span class="number">1502</span>, <span class="number">1519</span>, <span class="number">1497</span>, <span class="number">1525</span>, <span class="number">87</span>]</span><br><span class="line">b = a[::-<span class="number">1</span>]</span><br><span class="line">plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.plot(a, color=<span class="string">&quot;r&quot;</span>, marker=<span class="string">&quot;*&quot;</span>)</span><br><span class="line">plt.plot(b, color=<span class="string">&quot;b&quot;</span>, marker=<span class="string">&quot;o&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/26/Quick-Check/Python/Python-Common-Code/2.png"></p>
]]></content>
      <categories>
        <category>Undefined</category>
      </categories>
      <tags>
        <tag>Quick Check</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Set Up A Odoo 12 Development Docker Image From Ubuntu 20.04 Docker Image</title>
    <url>/2023/03/23/Guidance/Odoo/Set-Up-A-Odoo-12-Development-Docker-Image-From-Ubuntu-20-04-Docker-Image/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Odoo Installation</li>
<li>Non-Interactive Timezone Configuration</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>To avoid Odoo corrupting my noble macOS ü§´, I‚Äôve decided to install Odoo on Ubuntu.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h3><p>Of course, you need to have Ubuntu which is <strong>20.04</strong> and it need to be able to connect the Internet.</p>
<p>And I will use X86 (amd64) in this post because I am not a masochist.</p>
<h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># you may need to add &quot;sudo&quot; in front of the sentence if you don&#x27;t have the permission</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y git</span><br></pre></td></tr></table></figure>

<h3 id="Timezone-Configuration-Optional"><a href="#Timezone-Configuration-Optional" class="headerlink" title="Timezone Configuration (Optional)"></a>Timezone Configuration (Optional)</h3><p>Who can Skip this step</p>
<ul>
<li>Already configure the timezone information (like GUI version)</li>
<li>Can configure timezone infomation manually (which will appear in Step 4)</li>
</ul>
<p>Who cannoy skip this step (or you will be stuck in the interactive interface in Step 4)</p>
<ul>
<li>Automated management</li>
<li>Create a docker image</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># use default setting firstly</span></span><br><span class="line"><span class="built_in">export</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line">apt-get install tzdata</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set local time to Australia/Sydney time</span></span><br><span class="line"><span class="built_in">ln</span> -fs /usr/share/zoneinfo/Australia/Sydney /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># activate the new time configuration</span></span><br><span class="line">dpkg-reconfigure -f noninteractive tzdata</span><br></pre></td></tr></table></figure>

<h3 id="Install-PostgreSQL"><a href="#Install-PostgreSQL" class="headerlink" title="Install PostgreSQL"></a>Install PostgreSQL</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># the version I downloaded is postgresql12</span></span><br><span class="line">apt-get install -y postgresql</span><br></pre></td></tr></table></figure>

<p><font color='red'><u><em>not finished yet</em></u></font></p>
]]></content>
      <categories>
        <category>Draft</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
        <tag>Odoo</tag>
      </tags>
  </entry>
  <entry>
    <title>Install FTP Service On Ubuntu 20.04</title>
    <url>/2023/03/23/Guidance/Install-FTP-Service-On-Ubuntu-20-04/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>FTP</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>To set up a local FTP server.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Install-FTP"><a href="#1-Install-FTP" class="headerlink" title="1. Install FTP"></a>1. Install FTP</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="2-Configure-FTP"><a href="#2-Configure-FTP" class="headerlink" title="2. Configure FTP"></a>2. Configure FTP</h3><p>Keep a good habit: backup every file that you may destory</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/vsftpd.conf /etc/vsftpd.conf.bak</span><br></pre></td></tr></table></figure>

<p>Edit FTP configuration</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/vsftpd.conf</span><br></pre></td></tr></table></figure>

<p>Here is my configuration</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Example config file /etc/vsftpd.conf</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The default compiled in settings are fairly paranoid. This sample file</span></span><br><span class="line"><span class="comment"># loosens things up a bit, to make the ftp daemon more usable.</span></span><br><span class="line"><span class="comment"># Please see vsftpd.conf.5 for all compiled in defaults.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</span></span><br><span class="line"><span class="comment"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd&#x27;s</span></span><br><span class="line"><span class="comment"># capabilities.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Run standalone?  vsftpd can run either from an inetd or as a standalone</span></span><br><span class="line"><span class="comment"># daemon started from an initscript.</span></span><br><span class="line">listen=NO</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This directive enables listening on IPv6 sockets. By default, listening</span></span><br><span class="line"><span class="comment"># on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6</span></span><br><span class="line"><span class="comment"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span></span><br><span class="line"><span class="comment"># sockets. If you want that (perhaps because you want to listen on specific</span></span><br><span class="line"><span class="comment"># addresses) then you must run two copies of vsftpd with two configuration</span></span><br><span class="line"><span class="comment"># files.</span></span><br><span class="line">listen_ipv6=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Allow anonymous FTP? (Disabled by default).</span></span><br><span class="line">anonymous_enable=NO</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this to allow local users to log in.</span></span><br><span class="line">local_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this to enable any form of FTP write command.</span></span><br><span class="line">write_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Default umask for local users is 077. You may wish to change this to 022,</span></span><br><span class="line"><span class="comment"># if your users expect that (022 is used by most other ftpd&#x27;s)</span></span><br><span class="line">local_umask=022</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this to allow the anonymous FTP user to upload files. This only</span></span><br><span class="line"><span class="comment"># has an effect if the above global write enable is activated. Also, you will</span></span><br><span class="line"><span class="comment"># obviously need to create a directory writable by the FTP user.</span></span><br><span class="line"><span class="comment">#anon_upload_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this if you want the anonymous FTP user to be able to create</span></span><br><span class="line"><span class="comment"># new directories.</span></span><br><span class="line"><span class="comment">#anon_mkdir_write_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Activate directory messages - messages given to remote users when they</span></span><br><span class="line"><span class="comment"># go into a certain directory.</span></span><br><span class="line">dirmessage_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If enabled, vsftpd will display directory listings with the time</span></span><br><span class="line"><span class="comment"># in  your  local  time  zone.  The default is to display GMT. The</span></span><br><span class="line"><span class="comment"># times returned by the MDTM FTP command are also affected by this</span></span><br><span class="line"><span class="comment"># option.</span></span><br><span class="line">use_localtime=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Activate logging of uploads/downloads.</span></span><br><span class="line">xferlog_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Make sure PORT transfer connections originate from port 20 (ftp-data).</span></span><br><span class="line">connect_from_port_20=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you want, you can arrange for uploaded anonymous files to be owned by</span></span><br><span class="line"><span class="comment"># a different user. Note! Using &quot;root&quot; for uploaded files is not</span></span><br><span class="line"><span class="comment"># recommended!</span></span><br><span class="line"><span class="comment">#chown_uploads=YES</span></span><br><span class="line"><span class="comment">#chown_username=whoever</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may override where the log file goes if you like. The default is shown</span></span><br><span class="line"><span class="comment"># below.</span></span><br><span class="line">xferlog_file=/var/log/vsftpd.log</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you want, you can have your log file in standard ftpd xferlog format.</span></span><br><span class="line"><span class="comment"># Note that the default log file location is /var/log/xferlog in this case.</span></span><br><span class="line">xferlog_std_format=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may change the default value for timing out an idle session.</span></span><br><span class="line"><span class="comment">#idle_session_timeout=600</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may change the default value for timing out a data connection.</span></span><br><span class="line"><span class="comment">#data_connection_timeout=120</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is recommended that you define on your system a unique user which the</span></span><br><span class="line"><span class="comment"># ftp server can use as a totally isolated and unprivileged user.</span></span><br><span class="line"><span class="comment">#nopriv_user=ftpsecure</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Enable this and the server will recognise asynchronous ABOR requests. Not</span></span><br><span class="line"><span class="comment"># recommended for security (the code is non-trivial). Not enabling it,</span></span><br><span class="line"><span class="comment"># however, may confuse older FTP clients.</span></span><br><span class="line"><span class="comment">#async_abor_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default the server will pretend to allow ASCII mode but in fact ignore</span></span><br><span class="line"><span class="comment"># the request. Turn on the below options to have the server actually do ASCII</span></span><br><span class="line"><span class="comment"># mangling on files when in ASCII mode.</span></span><br><span class="line"><span class="comment"># Beware that on some FTP servers, ASCII support allows a denial of service</span></span><br><span class="line"><span class="comment"># attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd</span></span><br><span class="line"><span class="comment"># predicted this attack and has always been safe, reporting the size of the</span></span><br><span class="line"><span class="comment"># raw file.</span></span><br><span class="line"><span class="comment"># ASCII mangling is a horrible feature of the protocol.</span></span><br><span class="line"><span class="comment">#ascii_upload_enable=YES</span></span><br><span class="line"><span class="comment">#ascii_download_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may fully customise the login banner string:</span></span><br><span class="line">ftpd_banner=Welcome to Simon Ubuntu FTP service.</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</span></span><br><span class="line"><span class="comment"># useful for combatting certain DoS attacks.</span></span><br><span class="line"><span class="comment">#deny_email_enable=YES</span></span><br><span class="line"><span class="comment"># (default follows)</span></span><br><span class="line"><span class="comment">#banned_email_file=/etc/vsftpd.banned_emails</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may restrict local users to their home directories.  See the FAQ for</span></span><br><span class="line"><span class="comment"># the possible risks in this before using chroot_local_user or</span></span><br><span class="line"><span class="comment"># chroot_list_enable below.</span></span><br><span class="line"><span class="comment">#chroot_local_user=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may specify an explicit list of local users to chroot() to their home</span></span><br><span class="line"><span class="comment"># directory. If chroot_local_user is YES, then this list becomes a list of</span></span><br><span class="line"><span class="comment"># users to NOT chroot().</span></span><br><span class="line"><span class="comment"># (Warning! chroot&#x27;ing can be very dangerous. If using chroot, make sure that</span></span><br><span class="line"><span class="comment"># the user does not have write access to the top level directory within the</span></span><br><span class="line"><span class="comment"># chroot)</span></span><br><span class="line"><span class="comment"># chroot_local_user=YES</span></span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"><span class="comment"># (default follows)</span></span><br><span class="line">chroot_list_file=/etc/vsftpd.chroot_list</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by</span></span><br><span class="line"><span class="comment"># default to avoid remote users being able to cause excessive I/O on large</span></span><br><span class="line"><span class="comment"># sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume</span></span><br><span class="line"><span class="comment"># the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.</span></span><br><span class="line"><span class="comment">#ls_recurse_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Customization</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Some of vsftpd&#x27;s settings don&#x27;t fit the filesystem layout by</span></span><br><span class="line"><span class="comment"># default.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This option should be the name of a directory which is empty.  Also, the</span></span><br><span class="line"><span class="comment"># directory should not be writable by the ftp user. This directory is used</span></span><br><span class="line"><span class="comment"># as a secure chroot() jail at times vsftpd does not require filesystem</span></span><br><span class="line"><span class="comment"># access.</span></span><br><span class="line">secure_chroot_dir=/var/run/vsftpd/empty</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This string is the name of the PAM service vsftpd will use.</span></span><br><span class="line">pam_service_name=ftp</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This option specifies the location of the RSA certificate to use for SSL</span></span><br><span class="line"><span class="comment"># encrypted connections.</span></span><br><span class="line">rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem</span><br><span class="line">rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key</span><br><span class="line">ssl_enable=NO</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this to indicate that vsftpd use a utf8 filesystem.</span></span><br><span class="line">utf8_filesystem=YES</span><br><span class="line">userlist_enable=YES</span><br><span class="line">userlist_deny=NO</span><br><span class="line">userlist_file=/etc/vsftpd.user_list</span><br><span class="line">allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure>

<h3 id="3-Add-FTP-login-user"><a href="#3-Add-FTP-login-user" class="headerlink" title="3. Add FTP login user"></a>3. Add FTP login user</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add ftp folder</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> /home/ftpdir</span><br><span class="line"></span><br><span class="line"><span class="comment"># add ftp user (to bind user folder and login way)</span></span><br><span class="line">sudo useradd -d /home/ftpdir -s /bin/bash ftpuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># set user password</span></span><br><span class="line">sudo passwd ftpuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># set ftp folder user group</span></span><br><span class="line">sudo <span class="built_in">chown</span> ftpuser:ftpuser /home/ftpdir</span><br><span class="line"></span><br><span class="line"><span class="comment"># add ftpuser into user list</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ftpuser&quot;</span> &gt;&gt; /etc/vsftpd.user_list</span><br><span class="line"></span><br><span class="line"><span class="comment"># add ftpuser into chroot list</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ftpuser&quot;</span> &gt;&gt; /etc/vsftpd.chroot_list</span><br></pre></td></tr></table></figure>

<h3 id="4-Restart-FTP-server"><a href="#4-Restart-FTP-server" class="headerlink" title="4. Restart FTP server"></a>4. Restart FTP server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service vsftpd restart</span><br></pre></td></tr></table></figure>

<h3 id="5-Test-if-FTP-service-available"><a href="#5-Test-if-FTP-service-available" class="headerlink" title="5. Test if FTP service available"></a>5. Test if FTP service available</h3><h4 id="Local-machine"><a href="#Local-machine" class="headerlink" title="Local machine"></a>Local machine</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ftp localhost</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/23/Guidance/Install-FTP-Service-On-Ubuntu-20-04/1.png"></p>
<h4 id="Local-network"><a href="#Local-network" class="headerlink" title="Local network"></a>Local network</h4><p><img data-src="/2023/03/23/Guidance/Install-FTP-Service-On-Ubuntu-20-04/2.png"></p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="/2023/03/23/Guidance/Install-FTP-Service-On-Ubuntu-20-04/vsftpd.conf">vsftpd.conf download link</a></p>
<p>Thanks to the following articles guidance:</p>
<ul>
<li><a href="https://blog.csdn.net/soslinken/article/details/79304076">Ubuntu FTP Server</a></li>
</ul>
]]></content>
      <categories>
        <category>Make</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
      </tags>
  </entry>
  <entry>
    <title>Occational Network Disconnection Error On Ubuntu 20.04</title>
    <url>/2023/03/23/Quick-Check/Occational-Network-Disconnection-Error-On-Ubuntu-20-04/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Network Error</li>
<li>Ubuntu Error</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>When I installed my Ubuntu 20.04, it may meet some error because it could not use Wi-Fi module. Even <a href="https://simonczy.github.io/2023/03/15/Guidance/Install-Linux-By-BIOS-On-Window-Machine/#Turn-on-your-Wi-Fi-adapter-optional">I fixed it</a> at that time, my computer <strong>sometimes can not connect to Internet</strong> now.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Reset-the-network-service"><a href="#Reset-the-network-service" class="headerlink" title="Reset the network service"></a>Reset the network service</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service network-manager stop</span><br><span class="line">sudo <span class="built_in">rm</span> /var/lib/NetworkManager/NetworkManager.state</span><br><span class="line">sudo service network-manager start</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Make</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
      </tags>
  </entry>
  <entry>
    <title>Recommended Software On MacOS</title>
    <url>/2023/03/21/Share/Recommended-Software-On-MacOS/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>MacOS Software Recommendation</li>
</ul>
<span id="more"></span>

<h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><h3 id="Screenshot"><a href="#Screenshot" class="headerlink" title="Screenshot"></a>Screenshot</h3><p><a href="https://www.snipaste.com/">Snipaste</a> üåüüåüüåüüåüüåü</p>
<h3 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h3><p>ForkLift üåüüåüüåüüåüüåü</p>
<h2 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h2><h3 id="Markdown-Editor"><a href="#Markdown-Editor" class="headerlink" title="Markdown Editor"></a>Markdown Editor</h3><p>Typora (Free Version) üåüüåüüåüüåüüåü</p>
]]></content>
      <categories>
        <category>Undefined</category>
      </categories>
      <tags>
        <tag>Env/Config</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Recommended Software On Ubuntu 20.04</title>
    <url>/2023/03/21/Share/Recommended-Software-On-Ubuntu-20-04/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Linux Software Recommendation</li>
</ul>
<span id="more"></span>

<h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><h3 id="Screenshot"><a href="#Screenshot" class="headerlink" title="Screenshot"></a>Screenshot</h3><p><a href="https://github.com/flameshot-org/flameshot">Flameshot</a> ‚ùì</p>
<h3 id="Cloud-Storage"><a href="#Cloud-Storage" class="headerlink" title="Cloud Storage"></a>Cloud Storage</h3><p><a href="https://www.jianguoyun.com/">Nutstore</a></p>
<h2 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h2><h3 id="Markdown-Editor"><a href="#Markdown-Editor" class="headerlink" title="Markdown Editor"></a>Markdown Editor</h3><p>Typora (Free Version) üåüüåüüåüüåüüåü</p>
]]></content>
      <categories>
        <category>Undefined</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
      </tags>
  </entry>
  <entry>
    <title>A Web 502 Error Caused By A Docker Upgrade</title>
    <url>/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Handle Docker or DevOps Error</li>
<li>Server Down</li>
<li>Rookie DevOps</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>The docker image is upgraded. And I need to deal with the error it causes.</p>
<h3 id="Framework"><a href="#Framework" class="headerlink" title="Framework"></a>Framework</h3><ul>
<li>Amazon Cloud: EC2 Instance</li>
<li>Gitlab: Pipeline</li>
<li>Dockerhub</li>
</ul>
<h2 id="Operation-amp-Problem"><a href="#Operation-amp-Problem" class="headerlink" title="Operation &amp; Problem"></a>Operation &amp; Problem</h2><h3 id="1-Upgrade-the-docker-image"><a href="#1-Upgrade-the-docker-image" class="headerlink" title="1. Upgrade the docker image"></a>1. Upgrade the docker image</h3><p>Update the template in EC2 instance. Deploy a new environment by GitLab.</p>
<h3 id="2-502-Error"><a href="#2-502-Error" class="headerlink" title="2. 502 Error"></a>2. 502 Error</h3><p>Yeah‚Ä¶it causes 502 error obviously.</p>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/1.png"></p>
<h3 id="3-Check-the-docker-container"><a href="#3-Check-the-docker-container" class="headerlink" title="3. Check the docker container"></a>3. Check the docker container</h3><p>In fact, it took quite a bit of time to jump from the previous step to this one. </p>
<p>At first, I mistakenly thought it was due to a network configuration error, so I kept checking the template and also the configuration file. But in fact, the 502 error can be interpreted as a service provisioning failure, and therefore incoming requests cannot be accessed.</p>
<p>So the first step of troubleshooting should be to check whether the service is started properly, and then start the rest of the troubleshooting later.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check all the containers</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<p>As we can see from the following picture, the containers started and exited many times in about 3min. It means there are some error when waking up the image</p>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/2.png"></p>
<h3 id="4-Track-error-information-exitcode-126"><a href="#4-Track-error-information-exitcode-126" class="headerlink" title="4. Track error information - exitcode 126"></a>4. Track error information - exitcode 126</h3><p>Get the basic information from container.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect ContainerID</span><br></pre></td></tr></table></figure>

<p>There are some information we may be interested in.</p>
<ul>
<li>ExitCode: The reason why a container exit. You can check <a href="https://komodor.com/learn/exit-codes-in-containers-and-kubernetes-the-complete-guide/">this page</a> for more specific exitcode. It is always a error summary. For 126,  it means that a command used in the container specification could not be invoked.</li>
<li>LogPath: The location where docker containers save their log</li>
</ul>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/3.png"></p>
<p>Print out the log shown on the inspect, which is excatly a great example for <strong>exitcode-126</strong>.</p>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/4.png"></p>
<h3 id="5-Upgrade-docker-image-use-user-‚Äúodoo‚Äù-to-install-pyenv"><a href="#5-Upgrade-docker-image-use-user-‚Äúodoo‚Äù-to-install-pyenv" class="headerlink" title="5. Upgrade docker image - use user ‚Äúodoo‚Äù to install pyenv"></a>5. Upgrade docker image - use user ‚Äúodoo‚Äù to install pyenv</h3><p>As you can see from the <font color='red'>previous post</font>, the error is introduced at that time.</p>
<p>The following dockerfile sentence will install pyenv into &#x2F;root&#x2F;, which results in that user ‚Äúodoo‚Äù can not call python3.8.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment"># omit some sentences</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install pyenv, install python3.8.15 and make it global</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash &amp;&amp; <span class="built_in">printf</span> <span class="string">&quot;export PATH=\&quot;/root/.pyenv/bin:\$PATH\&quot;\neval \&quot;\$(pyenv init -)\&quot;\neval \&quot;\$(pyenv virtualenv-init -)\&quot;\n\nexport LC_ALL=C.UTF-8\nexport LANG=C.UTF-8&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="built_in">source</span> ~/.bashrc &amp;&amp; pyenv install 3.8.15 &amp;&amp; pyenv global 3.8.15</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># omit some sentences</span></span><br></pre></td></tr></table></figure>

<p>Therefore, after lots of unsuccessful trial, I choose to let odoo install the pyenv.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment"># omit some sentences</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use user &quot;odoo&quot; install pyenv, install python3.8.15 and make it global</span></span><br><span class="line"><span class="keyword">USER</span> odoo</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;export PYENV_ROOT=\&quot;\$HOME/.pyenv\&quot;\ncommand -v pyenv &gt;/dev/null || export PATH=\&quot;\$PYENV_ROOT/bin:\$PATH\&quot;\neval \&quot;\$(pyenv init -)\&quot;\neval \&quot;\$(pyenv virtualenv-init -)\&quot;\n&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="built_in">source</span> ~/.bashrc &amp;&amp; pyenv install 3.8.15 &amp;&amp; pyenv global 3.8.15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"><span class="comment"># omit some sentences</span></span><br></pre></td></tr></table></figure>

<h3 id="6-Upload-docker-image-to-docker-hub"><a href="#6-Upload-docker-image-to-docker-hub" class="headerlink" title="6. Upload docker image to docker hub"></a>6. Upload docker image to docker hub</h3><p>After downloading lots of third-party libraries, the size of image increased to almost 10GB.</p>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/5.png"></p>
<p>There‚Äôs not much more to say. In the future, I will only recommend using the command line for uploading docker images that are too large, which took me 5 hours to learn this lesson.</p>
<h3 id="7-502-Error"><a href="#7-502-Error" class="headerlink" title="7. 502 Error"></a>7. 502 Error</h3><p>üßò‚Äç‚ôÄÔ∏è Take it easy.</p>
<h3 id="8-Fail-to-download-docker-image-in-server"><a href="#8-Fail-to-download-docker-image-in-server" class="headerlink" title="8. Fail to download docker image in server"></a>8. Fail to download docker image in server</h3><p>Though I click the ‚ÄúRun‚Äù button in the pipeline, I still can not find any containers on the server.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check new version container</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># check new version image</span></span><br><span class="line">docker image <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>After waiting for a long time, I still can not see the new version image. At this time, you can download it by yourself.</p>
<p>BTW, The way for the server to download a docker image:</p>
<ul>
<li>docker hub first, local then</li>
<li>check the docker hub if the version updated (imageID)</li>
</ul>
<h3 id="9-502-Error"><a href="#9-502-Error" class="headerlink" title="9. 502 Error"></a>9. 502 Error</h3><p>üßò‚Äç‚ôÄÔ∏è</p>
<h3 id="10-Track-error-information-exitcode-127"><a href="#10-Track-error-information-exitcode-127" class="headerlink" title="10. Track error information - exitcode 127"></a>10. Track error information - exitcode 127</h3><p>Here is the log</p>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/6.png"></p>
<p>Here is some python feature. Some .py files will put ‚Äú#!&#x2F;usr&#x2F;bin&#x2F;env python3‚Äù in their first line. Therefore, the file can be run by system python3 parser.</p>
<p>According to the log, there seems to be no python in this image, which is completely different from my local environment.</p>
<p>As the docker is run by the command ‚Äú&#x2F;entrypoint.sh odoo‚Äù, I need to debug by putting some output in the entrypoint.sh to see what is going on.</p>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/7.png"></p>
<p>Here comes the result.</p>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/8.png"></p>
<p>Fxck, it takes me about 4 hours. And the reason is that the .yaml file of this image change the folder.</p>
<p><img data-src="/2023/03/16/Guidance/A-Web-502-Error-Caused-By-A-Docker-Upgrade/9.png"></p>
<p>Then just need to update the docker to change the pyenv location.</p>
<p>After reading the pyenv-installer script, I set up the env variable $PYENV_ROOT by dockerfile. And finally, everything works well!</p>
<h3 id="11-Winner-Winner-Chicken-Dinner"><a href="#11-Winner-Winner-Chicken-Dinner" class="headerlink" title="11. Winner Winner Chicken Dinner"></a>11. Winner Winner Chicken Dinner</h3><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul>
<li><a href="https://komodor.com/learn/exit-codes-in-containers-and-kubernetes-the-complete-guide/">Exit Codes In Containers &amp; Kubernetes ‚Äì The Complete Guide</a></li>
</ul>
]]></content>
      <categories>
        <category>Make</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Troubleshoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Linux By BIOS On Window Machine</title>
    <url>/2023/03/15/Guidance/Install-Linux-By-BIOS-On-Window-Machine/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Install System</li>
<li>Enter BIOS</li>
<li>Install Linux</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>The long term use of the virtual machine took up my macOS system resources, so I considered using the small server I purchased to install ubuntu (16+512). ü§îÔ∏è</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="0-Preparation"><a href="#0-Preparation" class="headerlink" title="0. Preparation"></a>0. Preparation</h3><p>Firstly, you should have a window machine.</p>
<p>Then, you should know <strong>the way to enter your machine BIOS</strong>. Generally speaking, different computers have very different ways of turning on the BIOS. Therefore, you‚Äôd better ask your computer provider or related technical support.</p>
<p>Last, you should have a USB flash drive (at least 8g).</p>
<h3 id="1-Intall-an-Ubuntu-image"><a href="#1-Intall-an-Ubuntu-image" class="headerlink" title="1. Intall an Ubuntu image"></a>1. Intall an Ubuntu image</h3><p>Click <a href="https://ubuntu.com/download/desktop">this page</a> to download the Ubuntu you want. As I want to download 20.04 LTS, I need to go to <a href="https://ubuntu.com/download/alternative-downloads">alternative page</a> to search.</p>
<p><img data-src="/2023/03/15/Guidance/Install-Linux-By-BIOS-On-Window-Machine/1.png"></p>
<h3 id="2-Create-a-bootable-USB-stick"><a href="#2-Create-a-bootable-USB-stick" class="headerlink" title="2. Create a bootable USB stick"></a>2. Create a bootable USB stick</h3><p>Use <a href="https://www.balena.io/etcher/">balenaEtcher</a> to create bootable USB stick. You should select your .iso file and your USB flash drive. It may take about 5mins.</p>
<h3 id="3-Enter-your-machine-BIOS"><a href="#3-Enter-your-machine-BIOS" class="headerlink" title="3. Enter your machine BIOS"></a>3. Enter your machine BIOS</h3><p>My computer is made from KNOKA.</p>
<p><img data-src="/2023/03/15/Guidance/Install-Linux-By-BIOS-On-Window-Machine/2.PNG"></p>
<p><img data-src="/2023/03/15/Guidance/Install-Linux-By-BIOS-On-Window-Machine/3.PNG"></p>
<p>The way to enter its BIOS is KEEP CLICKING ‚ÄúDelete‚Äù BUTTON UNTIL BIOS SHOW UP.</p>
<p>So, what you should do now is</p>
<ol>
<li>Turn off your machine</li>
<li>Insert your bootable USB stick</li>
<li>Enter BIOS</li>
</ol>
<p>When you finish it, you should see the BIOS (1980s style of GUI ü•∏).</p>
<p><img data-src="/2023/03/15/Guidance/Install-Linux-By-BIOS-On-Window-Machine/4.jpeg"></p>
<h3 id="4-Boot-from-your-USB-stick"><a href="#4-Boot-from-your-USB-stick" class="headerlink" title="4. Boot from your USB stick"></a>4. Boot from your USB stick</h3><p>Selete the USB stick and move to the highest option.</p>
<p><img data-src="/2023/03/15/Guidance/Install-Linux-By-BIOS-On-Window-Machine/5.jpeg"></p>
<h3 id="5-Install-your-Ubuntu"><a href="#5-Install-your-Ubuntu" class="headerlink" title="5. Install your Ubuntu"></a>5. Install your Ubuntu</h3><p>Just do what you want</p>
<h3 id="6-Turn-on-your-Wi-Fi-adapter-optional"><a href="#6-Turn-on-your-Wi-Fi-adapter-optional" class="headerlink" title="6. Turn on your Wi-Fi adapter (optional)"></a>6. Turn on your Wi-Fi adapter (optional)</h3><p>Some times you may find that you can‚Äôt use the Wi-Fi after successful installation ü§°, this may be due to the Wi-Fi driver or system first installation. I solved it by the following command.</p>
<p>(Sadly, you need to connect to the Internet first if you want to use Wi-Fi module, like wired connection or wireless network USB)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line"><span class="comment"># then restart your system</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if doesn&#x27;t work then run the following command</span></span><br><span class="line">sudo apt-get install bcmwl-kernel-source</span><br></pre></td></tr></table></figure>

<p>Then, restart your system.</p>
<h3 id="7-Turn-on-your-Ubuntu-Software-optional"><a href="#7-Turn-on-your-Ubuntu-Software-optional" class="headerlink" title="7. Turn on your Ubuntu Software (optional)"></a>7. Turn on your Ubuntu Software (optional)</h3><p>Some times you may find that your Ubuntu Software market is nearly empty ü§°. I solved it by the following command.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">sudo systemctl reboot</span><br></pre></td></tr></table></figure>

<h3 id="8-Ture-on-Chinese-language-optional"><a href="#8-Ture-on-Chinese-language-optional" class="headerlink" title="8. Ture on Chinese language (optional)"></a>8. Ture on Chinese language (optional)</h3><ol>
<li>Setting -&gt; Language and Region -&gt; Manage Installed Languages -&gt; Install &#x2F; Remove Language -&gt; Click Chinese (Simplified), then install whatever it needed</li>
<li>Setting -&gt; Language and Region -&gt; Input Sources -&gt; ‚Äú+‚Äù &gt; Chinses &gt; Chinses (Intelligent Pinyin)</li>
</ol>
<h3 id="9-Enjoy-your-new-Ubuntu-system"><a href="#9-Enjoy-your-new-Ubuntu-system" class="headerlink" title="9. Enjoy your new Ubuntu system!"></a>9. Enjoy your new Ubuntu system!</h3><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>Thanks to the following articles guidance:</p>
<ul>
<li><a href="https://ubuntu.com/tutorials/install-ubuntu-desktop#1-overview">Install Ubuntu desktop</a></li>
<li><a href="https://download.csdn.net/download/weixin_38724663/14048620?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-download-2~default~CTRLIST~Paid-1-14048620-blog-107869060.pc_relevant_3mothn_strategy_and_data_recovery&depth_1-utm_source=distribute.pc_relevant_t0.none-task-download-2~default~CTRLIST~Paid-1-14048620-blog-107869060.pc_relevant_3mothn_strategy_and_data_recovery&utm_relevant_index=1">Ubuntu 20.04 wireless connection</a></li>
<li><a href="https://blog.csdn.net/eidolon_foot/article/details/112942564">Ubuntu 20.04 software market error</a></li>
<li><a href="https://bbs.huaweicloud.com/blogs/283088">Add Chinese into Ubuntu 20.04</a></li>
</ul>
]]></content>
      <categories>
        <category>Make</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
        <tag>BIOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac SSH Amazon Using Pem</title>
    <url>/2023/03/09/Quick-Check/Mac-SSH-Amazon-Using-Pem/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Use .pem file to ssh</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>The title has said enough</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Put-pem-file-in-folder-XXX"><a href="#Put-pem-file-in-folder-XXX" class="headerlink" title="Put .pem file in folder XXX"></a>Put .pem file in folder XXX</h3><h3 id="Open-terminal-in-folder-XXX"><a href="#Open-terminal-in-folder-XXX" class="headerlink" title="Open terminal in folder XXX"></a>Open terminal in folder XXX</h3><h3 id="Run-SSH-command-to-connect"><a href="#Run-SSH-command-to-connect" class="headerlink" title="Run SSH command to connect"></a>Run SSH command to connect</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -i <span class="string">&quot;key.pem&quot;</span> username@ipaddress</span><br></pre></td></tr></table></figure>

<h3 id="Permission-error-probably"><a href="#Permission-error-probably" class="headerlink" title="Permission error (probably)"></a>Permission error (probably)</h3><p><img data-src="/2023/03/09/Quick-Check/Mac-SSH-Amazon-Using-Pem/1.png"></p>
<p>What you need to do is to set up a suitable file permission (0600).</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 0600 key.pem</span><br></pre></td></tr></table></figure>

<p>Then run the command given in step 3. And this time there is no error message.</p>
<h3 id="If-you-want-to-add-pem-file-into-your-system‚Ä¶"><a href="#If-you-want-to-add-pem-file-into-your-system‚Ä¶" class="headerlink" title="If you want to add .pem file into your system‚Ä¶"></a>If you want to add .pem file into your system‚Ä¶</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-add -K key.pem</span><br><span class="line">ssh username@ipaddress</span><br><span class="line"></span><br><span class="line"><span class="comment"># however, in this way you need to do it again when you turn off your machine</span></span><br></pre></td></tr></table></figure>

<p>So are there any ways that can elegantly solve this problem all at once.</p>
<p>Sure! Check <a href="https://simonczy.github.io/2023/03/27/Guidance/Turn-On-SSH-Service-On-Ubuntu/#Add-private-into-system-in-B">this</a>!</p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Env/Config</tag>
        <tag>SSH</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Odoo12 On Ubuntu20.04</title>
    <url>/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Odoo Installation</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>To avoid Odoo corrupting my noble macOS ü§´, I‚Äôve decided to install Odoo on Ubuntu.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h3><p>Of course, you need to have Ubuntu which is <strong>20.04</strong> (X86) and it need to be able to connect the Internet.</p>
<p>The system I use is build from <a href="https://simonczy.github.io/2023/03/15/Guidance/Install-Linux-By-BIOS-On-Window-Machine/">my previous post</a>.</p>
<h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y git</span><br></pre></td></tr></table></figure>

<h3 id="Install-PostgreSQL"><a href="#Install-PostgreSQL" class="headerlink" title="Install PostgreSQL"></a>Install PostgreSQL</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># the version I downloaded is postgresql12</span></span><br><span class="line">sudo apt-get install -y postgresql</span><br><span class="line"></span><br><span class="line"><span class="comment"># we can use the following command to check postgresql version</span></span><br><span class="line">psql --version</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/1.png"></p>
<h3 id="Create-PostgreSQL-user-and-database"><a href="#Create-PostgreSQL-user-and-database" class="headerlink" title="Create PostgreSQL user and database"></a>Create PostgreSQL user and database</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># start postgresql service</span></span><br><span class="line">sudo service postgresql start</span><br><span class="line"></span><br><span class="line"><span class="comment"># create postgresql user and database</span></span><br><span class="line">sudo -u postgres -i</span><br><span class="line"></span><br><span class="line"><span class="comment"># type your password and remember it</span></span><br><span class="line">createuser -P --superuser odoo</span><br><span class="line"></span><br><span class="line"><span class="comment"># may cause error</span></span><br><span class="line">createdb odoo -U odoo -W</span><br></pre></td></tr></table></figure>

<p>You may meet some error when you run the last command</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FATAL:  Peer authentication failed <span class="keyword">for</span> user <span class="string">&quot;odoo&quot;</span></span><br></pre></td></tr></table></figure>

<p>If so, you should change your pg_hba.conf configuration</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/postgresql/12/main/pg_hba.conf</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/2.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># then restare postgresql service</span></span><br><span class="line">sudo service postgresql restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># complete commands that were not fully executed before</span></span><br><span class="line">sudo -u postgres -i</span><br><span class="line">createdb odoo -U odoo -W</span><br></pre></td></tr></table></figure>

<h3 id="Install-curl"><a href="#Install-curl" class="headerlink" title="Install curl"></a>Install curl</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install curl</span><br></pre></td></tr></table></figure>

<h3 id="Install-node-js-and-less"><a href="#Install-node-js-and-less" class="headerlink" title="Install node.js and less"></a>Install node.js and less</h3><p>Install nodejs version manager </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L http://git.io/n-install | bash  </span><br></pre></td></tr></table></figure>

<p><strong>Reopen</strong> your terminal and check current version </p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/3.png"></p>
<p>Install less</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g less</span><br></pre></td></tr></table></figure>

<h3 id="Clone-Odoo-source-code"><a href="#Clone-Odoo-source-code" class="headerlink" title="Clone Odoo source code"></a>Clone Odoo source code</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/odoo/odoo.git -b 12.0 --depth=1 ./odoo12</span><br></pre></td></tr></table></figure>

<h3 id="Install-specific-python-version-optional"><a href="#Install-specific-python-version-optional" class="headerlink" title="Install specific python version (optional)"></a>Install specific python version (optional)</h3><p><strong>You could</strong></p>
<ol>
<li><u>Install pyenv to manage python version</u></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install pyenv</span></span><br><span class="line">curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># install python dependencies (optional, mostly depend on your perrsonal situation)</span></span><br><span class="line">sudo apt-get update &amp;&amp; apt-get install -y default-libmysqlclient-dev build-essential git gcc make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev libldap2-dev libsasl2-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># install python 3.8</span></span><br><span class="line">pyenv install 3.8 &amp;&amp; pyenv global 3.8</span><br></pre></td></tr></table></figure>

<p><strong>Or</strong></p>
<ol start="2">
<li><u>Use original python3 from ubunutu</u></li>
</ol>
<p>Here I use original python 3.8 from ubunutu (which not include pip3)</p>
<h3 id="Install-odoo-dependencies-by-pip3"><a href="#Install-odoo-dependencies-by-pip3" class="headerlink" title="Install odoo dependencies by pip3"></a>Install odoo dependencies by pip3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install pip3</span></span><br><span class="line">sudo apt-get install python3-pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># enter odoo folder (which is odoo12 as I wrote above)</span></span><br><span class="line"><span class="built_in">cd</span> odoo12</span><br><span class="line"></span><br><span class="line"><span class="comment"># install odoo dependencies provided by odoo</span></span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>

<p>You may meet some difficulties when you want to install the following package:</p>
<ul>
<li>lxml: install it without specific version.</li>
</ul>
<p>You need to modify requirements.txt</p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/4.png"></p>
<ul>
<li>Pillow: install it without specific version</li>
</ul>
<p>You need to modify requirements.txt</p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/5.png"></p>
<ul>
<li>psycopg2: lack of specific library</li>
</ul>
<p>You need to install some package. You don‚Äôt need to modify requirements.txt.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libpq-dev</span><br></pre></td></tr></table></figure>

<ul>
<li>pyldap: lack of specific library</li>
</ul>
<p>You need to install some package. You don‚Äôt need to modify requirements.txt.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># If you follow the approach &quot;Install pyenv to manage python version&quot; in this article, you may not meet this error because you already install these libraries before</span></span><br><span class="line">sudo apt-get install libldap2-dev libsasl2-dev</span><br></pre></td></tr></table></figure>

<h3 id="Start-odoo"><a href="#Start-odoo" class="headerlink" title="Start odoo"></a>Start odoo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># enter odoo folder (which is odoo12 as I wrote above)</span></span><br><span class="line"><span class="built_in">cd</span> odoo12</span><br><span class="line"></span><br><span class="line"><span class="comment"># install odoo dependencies provided by odoo</span></span><br><span class="line">./odoo-bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># press ctrl+c to quit</span></span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/7.png"></p>
<p>Then turn on your browser and go to this url -&gt; localhost:8069, and you may find some error now.</p>
<p>Front end:</p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/6.png"></p>
<p>Back end:</p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/9.png"></p>
<p>This is because you have not configure your odoo.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run this command and then exit it </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># this command mean save the configuration in the user folder</span></span><br><span class="line">./odoo-bin -s</span><br></pre></td></tr></table></figure>

<p>You can see there is odoo configuration now.</p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/8.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># modify your .odoorc configuration file</span></span><br><span class="line">vim /home/simon/.odoorc</span><br></pre></td></tr></table></figure>

<p>You should update these three configuration: ‚Äúdb_name‚Äù, ‚Äúdb_user‚Äù, ‚Äúdb_password‚Äù. </p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/14.png"></p>
<p>Start the odoo again, and it show the error message like these.</p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/12.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># well let&#x27;s initialize our database as there is nothing in the database</span></span><br><span class="line">./odoo-bin -i base</span><br></pre></td></tr></table></figure>

<p>And this time everything is fine.</p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Install-Odoo12-On-Ubuntu20-04/13.png"></p>
<h3 id="Enjoy-your-odoo-12"><a href="#Enjoy-your-odoo-12" class="headerlink" title="Enjoy your odoo 12"></a>Enjoy your odoo 12</h3><p>If you want to customize you odoo addon, maybe you can check this link.</p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://odoobook.tnk-studio.eu.org/Chapter-2/Odoo-Development-Environment.html">Build up your odoo environment</a></p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Odoo</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Env/Config</tag>
        <tag>Odoo</tag>
      </tags>
  </entry>
  <entry>
    <title>Upgrade Official Odoo12 Image From py3.5 To py3.8</title>
    <url>/2023/03/08/Guidance/Odoo/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/</url>
    <content><![CDATA[<p>üí° This post is insightful for the following scenarios.</p>
<ul>
<li>Python Upgrade</li>
<li>Docker Creation</li>
<li>Odoo Dependencies</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>Due to the updated project requirements, we need to use new third-party libraries that require a newer version of Python. However, the Python version provided in the <strong>official Odoo 12.0 Docker image</strong> is too outdated, so we need to upgrade the Python version from 3.5 to 3.8.</p>
<p>Here I will use pyenv to upgrade the python version. And the final dockerfile will be offered in the end.</p>
<p>Environment: odoo:12.0 (<a href="https://hub.docker.com/layers/library/odoo/12.0/images/sha256-6521005019c9f11e83f1c5419aab961f7e6a4f9757347df2ff0e103024e96b73?context=explore">link</a>)</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Install-the-dependencies-for-python-3-8"><a href="#Install-the-dependencies-for-python-3-8" class="headerlink" title="Install the dependencies for python 3.8"></a>Install the dependencies for python 3.8</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install the dependencies for python3.8</span></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y default-libmysqlclient-dev build-essential git gcc make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev libldap2-dev libsasl2-dev</span></span><br></pre></td></tr></table></figure>

<h3 id="Set-the-environment-variable-PYENV-ROOT-for-pyenv"><a href="#Set-the-environment-variable-PYENV-ROOT-for-pyenv" class="headerlink" title="Set the environment variable $PYENV_ROOT for pyenv"></a>Set the environment variable $PYENV_ROOT for pyenv</h3><p>Reason: the docker will be run by user ‚Äúodoo‚Äù. Therefore, we should set up a python path that can be accessed by user ‚Äúodoo‚Äù</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENV</span> PYENV_ROOT=/var/local/pyenv/</span><br></pre></td></tr></table></figure>

<h3 id="Install-python-3-8-by-pyenv"><a href="#Install-python-3-8-by-pyenv" class="headerlink" title="Install python 3.8 by pyenv"></a>Install python 3.8 by pyenv</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install python 3.8</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /var/local/pyenv/bin/pyenv install 3.8.15 &amp;&amp; /var/local/pyenv/bin/pyenv global 3.8.15</span></span><br></pre></td></tr></table></figure>

<h3 id="Change-python-3-5-gt-python-3-8-for-odoo-binary-file"><a href="#Change-python-3-5-gt-python-3-8-for-odoo-binary-file" class="headerlink" title="Change python 3.5 -&gt; python 3.8 for odoo binary file"></a>Change python 3.5 -&gt; python 3.8 for odoo binary file</h3><p>The way to test if the odoo can run in odoo offcial docker image, is to input ‚Äúodoo‚Äù and click ‚Äúenter‚Äù button.<br><img data-src="/2023/03/08/Guidance/Odoo/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/1.png"></p>
<p>How do you know which python it is using? Let try!</p>
<p><img data-src="/2023/03/08/Guidance/Odoo/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/2.png"></p>
<p>Well. Now is easy. Just create a soft link to current python3.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> /usr/bin/python3 &amp;&amp; <span class="built_in">ln</span> -s /var/local/pyenv/shims/python3 /usr/bin/python3</span></span><br></pre></td></tr></table></figure>

<h3 id="List-all-the-python-3-5-package-and-try-to-install-them-into-python-3-8-package"><a href="#List-all-the-python-3-5-package-and-try-to-install-them-into-python-3-8-package" class="headerlink" title="List all the python 3.5 package and try to install them into python 3.8 package"></a>List all the python 3.5 package and try to install them into python 3.8 package</h3><p>Use this command to see current package.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check current package</span></span><br><span class="line">pip3 list</span><br><span class="line"></span><br><span class="line"><span class="comment"># output current package as requirements.txt</span></span><br><span class="line">pip3 freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/08/Guidance/Odoo/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/3.png"></p>
<p>Here comes some principle that I follow:</p>
<ul>
<li>For some packages you can not download it by pip, like odoo,  you should completely move it from 3.5 package to 3.8 package, including package itself and its information (.egg-info file)</li>
<li>For some packages version you can directly download and use, you should download it to avoid unexpected error.</li>
<li>For some pacgage version you cannot download or cannot use, you should download the newest version.</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install odoo dependencies</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mv</span> /usr/lib/python3/dist-packages/odoo /var/local/pyenv/versions/3.8.15/lib/python3.8/site-packages/odoo &amp;&amp; <span class="built_in">mv</span> /usr/lib/python3/dist-packages/odoo-12.0.post20211006.egg-info/ /var/local/pyenv/versions/3.8.15/lib/python3.8/site-packages/odoo-12.0.post20211006.egg-info/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># you should put dockerfile and requirements.txt in the same folder</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./requirements.txt /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /var/local/pyenv/shims/pip install -r /requirements.txt</span></span><br></pre></td></tr></table></figure>

<h3 id="Change-to-user-‚Äúodoo‚Äù"><a href="#Change-to-user-‚Äúodoo‚Äù" class="headerlink" title="Change to user ‚Äúodoo‚Äù"></a>Change to user ‚Äúodoo‚Äù</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> odoo</span><br></pre></td></tr></table></figure>

<h3 id="Build-the-docker-image"><a href="#Build-the-docker-image" class="headerlink" title="Build the docker image"></a>Build the docker image</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t UserName/RepName:TagName .</span><br></pre></td></tr></table></figure>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="/2023/03/08/Guidance/Odoo/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/Dockerfile">Dockerfile download link</a></p>
<p><a href="/2023/03/08/Guidance/Odoo/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/requirements.txt">requirements.txt download link</a></p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Odoo</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Env/Config</tag>
        <tag>Odoo</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Dockerfile Command</title>
    <url>/2023/03/07/Quick-Check/Docker/Dockerfile-Command/</url>
    <content><![CDATA[<p>Frequently used dockerfile commands</p>
<span id="more"></span>

<h2 id="Dockerfile-Quick-Start"><a href="#Dockerfile-Quick-Start" class="headerlink" title="Dockerfile Quick Start"></a>Dockerfile Quick Start</h2><h3 id="Change-user"><a href="#Change-user" class="headerlink" title="Change user"></a>Change user</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> root</span><br></pre></td></tr></table></figure>

<h3 id="Run-bash-command"><a href="#Run-bash-command" class="headerlink" title="Run bash command"></a>Run bash command</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mv</span> /a/b/c.txt /aa/bb/cc.txt</span></span><br></pre></td></tr></table></figure>

<h3 id="Get-raw-docker-image"><a href="#Get-raw-docker-image" class="headerlink" title="Get raw docker image"></a>Get raw docker image</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> salarymaster/odoo:office_odoo12</span><br></pre></td></tr></table></figure>

<h3 id="Copy-local-file-into-docker-image"><a href="#Copy-local-file-into-docker-image" class="headerlink" title="Copy local file into docker image"></a>Copy local file into docker image</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./requirements.txt /</span></span><br></pre></td></tr></table></figure>

<h3 id="Set-some-environment-varible"><a href="#Set-some-environment-varible" class="headerlink" title="Set some environment varible"></a>Set some environment varible</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENV</span> PYENV_ROOT=/var/local/pyenv</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Make</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Command</title>
    <url>/2023/03/07/Quick-Check/Linux-Command/</url>
    <content><![CDATA[<p>Frequently used linux commands</p>
<span id="more"></span>

<h2 id="Linux-Quick-Start"><a href="#Linux-Quick-Start" class="headerlink" title="Linux Quick Start"></a>Linux Quick Start</h2><h3 id="grep-file-ignoring-case"><a href="#grep-file-ignoring-case" class="headerlink" title="grep file ignoring case"></a>grep file ignoring case</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -la | grep -i <span class="string">&quot;pypdf2&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="change-user-password"><a href="#change-user-password" class="headerlink" title="change user password"></a>change user password</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd username</span><br></pre></td></tr></table></figure>

<h3 id="remove-package"><a href="#remove-package" class="headerlink" title="remove package"></a>remove package</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge PackageName</span><br><span class="line"></span><br><span class="line"><span class="comment"># if your ubuntu have GUI, you can delete the gui by the following command, and reboot</span></span><br><span class="line">sudo apt-get purge lightdm</span><br><span class="line"></span><br><span class="line"><span class="comment"># if you want to recover your GUI, you can install it and reboot</span></span><br><span class="line">sudo apt-get install lightdm</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h3 id="ftp-common-command"><a href="#ftp-common-command" class="headerlink" title="ftp common command"></a>ftp common command</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check ftp service status</span></span><br><span class="line">service vsftpd status</span><br><span class="line"></span><br><span class="line"><span class="comment"># check ftp process</span></span><br><span class="line">ps ef | grep -i ftp</span><br><span class="line"></span><br><span class="line"><span class="comment"># display ftp auto-on process</span></span><br><span class="line">systemctl list-unit-files | grep ftp</span><br></pre></td></tr></table></figure>

<h3 id="system-service"><a href="#system-service" class="headerlink" title="system service"></a>system service</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># start ftp service</span></span><br><span class="line">systemctl start vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># stop ftp service</span></span><br><span class="line">systemctl stop vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># set ftp auto-on on</span></span><br><span class="line">systemctl <span class="built_in">enable</span> vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># set ftp auto-on off</span></span><br><span class="line">systemctl <span class="built_in">disable</span> vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="display-folder-size"><a href="#display-folder-size" class="headerlink" title="display folder size"></a>display folder size</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span></span><br></pre></td></tr></table></figure>

<h3 id="compressed-folder"><a href="#compressed-folder" class="headerlink" title="compressed folder"></a>compressed folder</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># SML_P1.tar.gz is the name of target compressed file</span></span><br><span class="line"><span class="comment"># SML_P1/ is the folder you want to compress</span></span><br><span class="line">tar -zcvf SML_P1.tar.gz SML_P1/</span><br></pre></td></tr></table></figure>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://blog.csdn.net/qq_16736531/article/details/80663023">Common FTP Command</a></p>
<p><a href="https://blog.csdn.net/qq_41985134/article/details/121182623">Ubuntu Auto-On Service</a></p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Pip Command</title>
    <url>/2023/03/07/Quick-Check/Python/Pip-Command/</url>
    <content><![CDATA[<p>Frequently used pip commands</p>
<span id="more"></span>

<h2 id="Pip-Quick-Start"><a href="#Pip-Quick-Start" class="headerlink" title="Pip Quick Start"></a>Pip Quick Start</h2><p>Take pip3 as an example.</p>
<h3 id="List-installed-package"><a href="#List-installed-package" class="headerlink" title="List installed package"></a>List installed package</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 list</span><br></pre></td></tr></table></figure>

<h3 id="Display-the-details-of-a-specific-package"><a href="#Display-the-details-of-a-specific-package" class="headerlink" title="Display the details of a specific package"></a>Display the details of a specific package</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Assume the package &quot;pdf2image&quot; has been installed</span></span><br><span class="line">pip3 show pdf2image</span><br></pre></td></tr></table></figure>

<h3 id="Create-a-requirement-file-by-using-current-installed-packages"><a href="#Create-a-requirement-file-by-using-current-installed-packages" class="headerlink" title="Create a requirement file by using current installed packages"></a>Create a requirement file by using current installed packages</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure>

<h3 id="Install-packages-by-using-the-requirement-file"><a href="#Install-packages-by-using-the-requirement-file" class="headerlink" title="Install packages by using the requirement file"></a>Install packages by using the requirement file</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>

<h3 id="Install-specific-version-packages"><a href="#Install-specific-version-packages" class="headerlink" title="Install specific version packages"></a>Install specific version packages</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install lxml=4.9.2</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Undefined</category>
      </categories>
      <tags>
        <tag>Quick Check</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Command</title>
    <url>/2023/02/15/Quick-Check/Docker/Docker-Command/</url>
    <content><![CDATA[<p>Frequently used docker commands</p>
<span id="more"></span>

<h2 id="Docker-Quick-Start"><a href="#Docker-Quick-Start" class="headerlink" title="Docker Quick Start"></a>Docker Quick Start</h2><h3 id="Create-docker-image-from-Dockerfile"><a href="#Create-docker-image-from-Dockerfile" class="headerlink" title="Create docker image from Dockerfile"></a>Create docker image from Dockerfile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run the command in the folder which contains Dockerfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># user@computer odoo_test % ls  -la</span></span><br><span class="line"><span class="comment"># total 8</span></span><br><span class="line"><span class="comment"># drwxr-xr-x@  3 user  staff    96 Mar  6 09:42 .</span></span><br><span class="line"><span class="comment"># drwx------@ 20 user  staff   640 Mar  7 01:42 ..</span></span><br><span class="line"><span class="comment"># -rw-r--r--@  1 user  staff  1546 Mar  6 09:42 Dockerfile</span></span><br><span class="line"></span><br><span class="line">docker build -t salarymaster/odoo:odoo_12 .</span><br></pre></td></tr></table></figure>

<h3 id="Download-docker-image"><a href="#Download-docker-image" class="headerlink" title="Download docker image"></a>Download docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># download from Docker Hub</span></span><br><span class="line">docker pull salarymaster/odoo:H_12.0</span><br></pre></td></tr></table></figure>

<h3 id="Upload-docker-image"><a href="#Upload-docker-image" class="headerlink" title="Upload docker image"></a>Upload docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># upload to Docker Hub</span></span><br><span class="line">docker push salarymaster/odoo:odoo_12</span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;salarymaster&quot; is the name of organization/user</span></span><br><span class="line"><span class="comment"># &quot;odoo&quot; is the repository name created by &quot;salarymaster&quot;</span></span><br><span class="line"><span class="comment"># &quot;odoo_12&quot; is the tag in &quot;odoo&quot; repository to distinguish different version of docker images</span></span><br></pre></td></tr></table></figure>

<h3 id="List-docker-image"><a href="#List-docker-image" class="headerlink" title="List docker image"></a>List docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker image <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<h3 id="Run-docker-image-x2F-Create-image-instance-container"><a href="#Run-docker-image-x2F-Create-image-instance-container" class="headerlink" title="Run docker image &#x2F; Create image instance (container)"></a>Run docker image &#x2F; Create image instance (container)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this command will maintain the container even exiting</span></span><br><span class="line">docker run -itu root salarymaster/odoo:basic /bin/bash</span><br></pre></td></tr></table></figure>

<h3 id="Tag-docker-image"><a href="#Tag-docker-image" class="headerlink" title="Tag docker image"></a>Tag docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ImageID comes from &quot;docker image ls&quot; command</span></span><br><span class="line">docker tag ImageID salarymaster/odoo:new_tagname</span><br></pre></td></tr></table></figure>

<h3 id="Remove-docker-image"><a href="#Remove-docker-image" class="headerlink" title="Remove docker image"></a>Remove docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if ImageID is unique, use ImageID to remove</span></span><br><span class="line">docker image <span class="built_in">rm</span> ImageID</span><br><span class="line"></span><br><span class="line"><span class="comment"># if ImageID is not unique, use unique combination tag to remove</span></span><br><span class="line">docker image <span class="built_in">rm</span> OrgName/RepName:TagName</span><br></pre></td></tr></table></figure>

<h3 id="List-docker-container"><a href="#List-docker-container" class="headerlink" title="List docker container"></a>List docker container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list using containers</span></span><br><span class="line">docker ps </span><br><span class="line"></span><br><span class="line"><span class="comment"># list all the containers</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<h3 id="Start-x2F-Stop-x2F-Restart-docker-container"><a href="#Start-x2F-Stop-x2F-Restart-docker-container" class="headerlink" title="Start&#x2F;Stop&#x2F;Restart docker container"></a>Start&#x2F;Stop&#x2F;Restart docker container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start ContainerID</span><br><span class="line">docker stop ContainerID</span><br><span class="line">docker restart ContainerID</span><br></pre></td></tr></table></figure>

<h3 id="Copy-file-using-docker-container"><a href="#Copy-file-using-docker-container" class="headerlink" title="Copy file using docker container"></a>Copy file using docker container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># copy file from container to local</span></span><br><span class="line">docker <span class="built_in">cp</span> ContainerID:/a/b/c.txt /aa/bb/</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy file from local to container</span></span><br><span class="line">docker <span class="built_in">cp</span> /aa/bb/ ContainerID:/a/b/c.txt</span><br></pre></td></tr></table></figure>

<h3 id="Enter-container"><a href="#Enter-container" class="headerlink" title="Enter container"></a>Enter container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -it use terminal to enter container</span></span><br><span class="line"><span class="comment"># -u use specific user to enter container</span></span><br><span class="line">docker <span class="built_in">exec</span> -itu root 1a9e7655efdc /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="Advanced"><a href="#Advanced" class="headerlink" title="Advanced"></a>Advanced</h2><h3 id="Inspect-container"><a href="#Inspect-container" class="headerlink" title="Inspect container"></a>Inspect container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check the container detail</span></span><br><span class="line">docker inspect ContainerID</span><br><span class="line"><span class="comment"># or use this command to check docker log</span></span><br><span class="line">docker inspect ContainerID | grep -i <span class="built_in">log</span></span><br></pre></td></tr></table></figure>

<h3 id="Debug-dead-container"><a href="#Debug-dead-container" class="headerlink" title="Debug dead container"></a>Debug dead container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># copy file from container to local</span></span><br><span class="line">docker <span class="built_in">cp</span> ContainerID:/a/b/c.txt /aa/bb/</span><br></pre></td></tr></table></figure>

<h3 id="Check-container-start-command"><a href="#Check-container-start-command" class="headerlink" title="Check container start command"></a>Check container start command</h3><p><img data-src="/2023/02/15/Quick-Check/Docker/Docker-Command/1.png"></p>
]]></content>
      <categories>
        <category>Make</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/12/09/Others/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Undefined</category>
      </categories>
  </entry>
</search>
