<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>The First Thing You Should Know</title>
    <url>/2023/02/15/The-First-Thing-You-Should-Know/</url>
    <content><![CDATA[<p>🥳 Welcome to Mind Game!!!</p>
<p>📑 As the first post on my personal website, it can show you the way my thought hidden behind all my posts. Please take your time and enjoy your trip! </p>
<span id="more"></span>

<h2 id="My-Game"><a href="#My-Game" class="headerlink" title="My Game"></a>My Game</h2><h3 id="1-Categories"><a href="#1-Categories" class="headerlink" title="1. Categories:"></a>1. Categories:</h3><p>Sort by alphabetical order.</p>
<ul>
<li><strong><u>Draft</u></strong></li>
</ul>
<h3 id="2-Tag"><a href="#2-Tag" class="headerlink" title="2. Tag"></a>2. Tag</h3><p>Sort by alphabetical order.</p>
<ul>
<li>Related to specific fields<ul>
<li><strong><u>BIOS</u></strong></li>
<li><strong><u>Bot</u></strong></li>
<li><strong><u>C++</u></strong></li>
<li><strong><u>DevOps</u></strong></li>
<li><strong><u>Interview</u></strong></li>
<li><strong><u>Linux</u></strong></li>
<li><strong><u>MacOS</u></strong></li>
<li><strong><u>网站开发</u></strong></li>
<li><strong><u>Odoo</u></strong></li>
<li><strong><u>Python</u></strong></li>
<li><strong><u>SSH</u></strong></li>
<li><strong><u>VR&#x2F;MR</u></strong></li>
</ul>
</li>
<li>Related to the purpose of posts<ul>
<li><strong><u>Env&#x2F;Config</u></strong>: To set up a new environment or make it easier to use.</li>
<li><u><strong>Introduction</strong></u>: The first thing you need to know about the new field or new shit (such as this post🤔).</li>
<li><strong><u>Quick Check</u></strong>: Mainly consists of commands, scripts, or code with a simple or no explanation.</li>
<li><strong><u>Record</u></strong>: Just record. 📝 To add a touch of color to ordinary life.</li>
<li><strong><u>Troubleshoot</u></strong>: The way to deal with unseen mistakes. It does more focus on the way I thought 💭 than the technology I used.</li>
</ul>
</li>
</ul>
<h3 id="1-Other"><a href="#1-Other" class="headerlink" title="-1. Other"></a>-1. Other</h3><ul>
<li>All blog content may be modified at some point in the future for some reason. (I will try to keep my change log, but human beings are lazy).</li>
</ul>
]]></content>
      <tags>
        <tag>Introduction</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/12/09/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Master Project: Unity MR Application</title>
    <url>/2024/01/26/%E5%A4%87%E4%B8%AA%E4%BB%BD/Master-Project-Unity-MR-Application/</url>
    <content><![CDATA[<p>💡 This post is used to archive my master project.</p>
<ul>
<li>It is a Unity VR Whiteboard with the function of multiplayer and Meta Avatar.</li>
<li>It relies on the following libraries: Oculus Integration, Meta Avatar, Photon Fusion.</li>
</ul>
<span id="more"></span>

<p>Here is the presentation video.</p>
<iframe width="560" height="360" src="https://www.youtube.com/embed/3Ok5VuJZO0s?si=UXb7-K6rovddiKkz" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<p>Here is the <a href="https://github.com/SimonCzy/Whiteboard-UnityXR">github repository</a>. Click to know more detail.</p>
]]></content>
  </entry>
  <entry>
    <title>Unity VR/MR 多人白板项目开发</title>
    <url>/2024/01/26/%E5%A4%87%E4%B8%AA%E4%BB%BD/Unity-VR-MR-%E5%A4%9A%E4%BA%BA%E7%99%BD%E6%9D%BF%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<p>💡 本文主要用作项目记录.</p>
<ul>
<li>本项目是基于Unity构建的VR&#x2F;MR多人白板协作引用，其能支持Meta Avatar的虚拟人像跟踪</li>
<li>本项目依赖于以下库：Oculus Integration, Meta Avatar, Photon Fusion</li>
</ul>
<span id="more"></span>

<p>展示视频如下</p>
<iframe width="560" height="360" src="//player.bilibili.com/player.html?aid=277063018&bvid=BV1Dw411A7Ee&cid=1297725829&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p>更多细节请查看对应的<a href="https://github.com/SimonCzy/Whiteboard-UnityXR">github项目</a>。</p>
]]></content>
      <tags>
        <tag>VR/MR</tag>
        <tag>Record</tag>
      </tags>
  </entry>
  <entry>
    <title>Develop Your Addon Based On Odoo 12</title>
    <url>/2023/03/27/odoo%E7%B3%BB%E5%88%97/Develop-Your-Addon-Based-On-Odoo-12/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Odoo Addon Customization</li>
<li>Develop Odoo Addon</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>I have already installed odoo 12 successfully on my Ubuntu  20.04, so the next step is to develop my personal addon module.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="0-Preparation"><a href="#0-Preparation" class="headerlink" title="0. Preparation"></a>0. Preparation</h3><p><a href="https://simonczy.github.io/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/">Install-Odoo12-On-Ubuntu20-04</a></p>
<h3 id="1-Clone-your-code-or-create-your-develop-folder"><a href="#1-Clone-your-code-or-create-your-develop-folder" class="headerlink" title="1. Clone your code or create your develop folder"></a>1. Clone your code or create your develop folder</h3><h3 id="2-Update-your-odoorc-file"><a href="#2-Update-your-odoorc-file" class="headerlink" title="2. Update your .odoorc file"></a>2. Update your .odoorc file</h3><p>Add your code folder into odoo configuration location and use “,” as separator.</p>
<p><img data-src="/2023/03/27/odoo%E7%B3%BB%E5%88%97/Develop-Your-Addon-Based-On-Odoo-12/1.png"></p>
<p>If you check the link from Preparation carefully, you will know where .odoorc is.</p>
<p>If you decide to <strong>write your addon from scratch</strong>, you <strong>don’t need to</strong> follow the rest of this post. You can just write your code on the folder you just created.</p>
<p>The rest of this post is for the people who want to <strong>use their previous code as foundation</strong>.</p>
<h3 id="3-Add-your-database-Optional"><a href="#3-Add-your-database-Optional" class="headerlink" title="3. Add your database (Optional)"></a>3. Add your database (Optional)</h3><p>If you already developed your addon before and had your database, you should move it from your original computer to your new compute.</p>
<h4 id="Go-to-the-odoo-database-manager"><a href="#Go-to-the-odoo-database-manager" class="headerlink" title="Go to the odoo database manager"></a>Go to the odoo database manager</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">http://localhost:8069/web/database/manager</span><br></pre></td></tr></table></figure>

<h4 id="Export-your-database"><a href="#Export-your-database" class="headerlink" title="Export your database"></a>Export your database</h4><p>Backup your database and save the .zip file.</p>
<p><img data-src="/2023/03/27/odoo%E7%B3%BB%E5%88%97/Develop-Your-Addon-Based-On-Odoo-12/2.png"></p>
<h4 id="Import-your-database"><a href="#Import-your-database" class="headerlink" title="Import your database"></a>Import your database</h4><p>Restore your database from downloaded .zip file</p>
<p><img data-src="/2023/03/27/odoo%E7%B3%BB%E5%88%97/Develop-Your-Addon-Based-On-Odoo-12/3.png"></p>
<p>Input the master password you set up before, chooes the .zip file and set up a new name.</p>
<p><img data-src="/2023/03/27/odoo%E7%B3%BB%E5%88%97/Develop-Your-Addon-Based-On-Odoo-12/4.png"></p>
<p>When it finishes, you may not find the database you just imported.</p>
<p><img data-src="/2023/03/27/odoo%E7%B3%BB%E5%88%97/Develop-Your-Addon-Based-On-Odoo-12/6.png"></p>
<p>Do not need to be panic, if you import again, it will show up this alert.</p>
<p><img data-src="/2023/03/27/odoo%E7%B3%BB%E5%88%97/Develop-Your-Addon-Based-On-Odoo-12/5.png"></p>
<h3 id="4-Update-your-odoorc-file-Optional"><a href="#4-Update-your-odoorc-file-Optional" class="headerlink" title="4. Update your .odoorc file (Optional)"></a>4. Update your .odoorc file (Optional)</h3><p>What you need to do is to update your database name in odoo configuration file.</p>
<p><img data-src="/2023/03/27/odoo%E7%B3%BB%E5%88%97/Develop-Your-Addon-Based-On-Odoo-12/7.png"></p>
<h3 id="5-Initialize-your-database-Optional"><a href="#5-Initialize-your-database-Optional" class="headerlink" title="5. Initialize your database (Optional)"></a>5. Initialize your database (Optional)</h3><p>In this time, when you run odoo, it may ask you to initial your database. You can run this command to initialize your database.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./odoo-bin -i base</span><br></pre></td></tr></table></figure>

<h3 id="6-Update-all-the-addon-module-Optional"><a href="#6-Update-all-the-addon-module-Optional" class="headerlink" title="6. Update all the addon module (Optional)"></a>6. Update all the addon module (Optional)</h3><p>Run the following code to update all your addon module, it may take a while.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./odoo-bin -u all</span><br></pre></td></tr></table></figure>

<h3 id="7-Enjoy-your-addon"><a href="#7-Enjoy-your-addon" class="headerlink" title="7. Enjoy your addon"></a>7. Enjoy your addon</h3>]]></content>
      <tags>
        <tag>Odoo</tag>
        <tag>Env/Config</tag>
      </tags>
  </entry>
  <entry>
    <title>Upgrade Official Odoo12 Image From py3.5 To py3.8</title>
    <url>/2023/03/08/odoo%E7%B3%BB%E5%88%97/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Python Upgrade</li>
<li>Docker Creation</li>
<li>Odoo Dependencies</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>Due to the updated project requirements, we need to use new third-party libraries that require a newer version of Python. However, the Python version provided in the <strong>official Odoo 12.0 Docker image</strong> is too outdated, so we need to upgrade the Python version from 3.5 to 3.8.</p>
<p>Here I will use pyenv to upgrade the python version. And the final dockerfile will be offered in the end.</p>
<p>Environment: odoo:12.0 (<a href="https://hub.docker.com/layers/library/odoo/12.0/images/sha256-6521005019c9f11e83f1c5419aab961f7e6a4f9757347df2ff0e103024e96b73?context=explore">link</a>)</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Install-the-dependencies-for-python-3-8"><a href="#1-Install-the-dependencies-for-python-3-8" class="headerlink" title="1. Install the dependencies for python 3.8"></a>1. Install the dependencies for python 3.8</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install the dependencies for python3.8</span></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y default-libmysqlclient-dev build-essential git gcc make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev libldap2-dev libsasl2-dev</span></span><br></pre></td></tr></table></figure>

<h3 id="2-Set-the-environment-variable-PYENV-ROOT-for-pyenv"><a href="#2-Set-the-environment-variable-PYENV-ROOT-for-pyenv" class="headerlink" title="2. Set the environment variable $PYENV_ROOT for pyenv"></a>2. Set the environment variable $PYENV_ROOT for pyenv</h3><p>Reason: the docker will be run by user “odoo”. Therefore, we should set up a python path that can be accessed by user “odoo”</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENV</span> PYENV_ROOT=/var/local/pyenv/</span><br></pre></td></tr></table></figure>

<h3 id="3-Install-python-3-8-by-pyenv"><a href="#3-Install-python-3-8-by-pyenv" class="headerlink" title="3. Install python 3.8 by pyenv"></a>3. Install python 3.8 by pyenv</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install python 3.8</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /var/local/pyenv/bin/pyenv install 3.8.15 &amp;&amp; /var/local/pyenv/bin/pyenv global 3.8.15</span></span><br></pre></td></tr></table></figure>

<h3 id="4-Change-python-3-5-gt-python-3-8-for-odoo-binary-file"><a href="#4-Change-python-3-5-gt-python-3-8-for-odoo-binary-file" class="headerlink" title="4. Change python 3.5 -&gt; python 3.8 for odoo binary file"></a>4. Change python 3.5 -&gt; python 3.8 for odoo binary file</h3><p>The way to test if the odoo can run in odoo offcial docker image, is to input “odoo” and click “enter” button.<br><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/1.png"></p>
<p>How do you know which python it is using? Let try!</p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/2.png"></p>
<p>Well. Now is easy. Just create a soft link to current python3.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> /usr/bin/python3 &amp;&amp; <span class="built_in">ln</span> -s /var/local/pyenv/shims/python3 /usr/bin/python3</span></span><br></pre></td></tr></table></figure>

<h3 id="5-List-all-the-python-3-5-package-and-try-to-install-them-into-python-3-8-package"><a href="#5-List-all-the-python-3-5-package-and-try-to-install-them-into-python-3-8-package" class="headerlink" title="5. List all the python 3.5 package and try to install them into python 3.8 package"></a>5. List all the python 3.5 package and try to install them into python 3.8 package</h3><p>Use this command to see current package.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check current package</span></span><br><span class="line">pip3 list</span><br><span class="line"></span><br><span class="line"><span class="comment"># output current package as requirements.txt</span></span><br><span class="line">pip3 freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/3.png"></p>
<p>Here comes some principle that I follow:</p>
<ul>
<li>For some packages you can not download it by pip, like odoo,  you should completely move it from 3.5 package to 3.8 package, including package itself and its information (.egg-info file)</li>
<li>For some packages version you can directly download and use, you should download it to avoid unexpected error.</li>
<li>For some pacgage version you cannot download or cannot use, you should download the newest version.</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install odoo dependencies</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mv</span> /usr/lib/python3/dist-packages/odoo /var/local/pyenv/versions/3.8.15/lib/python3.8/site-packages/odoo &amp;&amp; <span class="built_in">mv</span> /usr/lib/python3/dist-packages/odoo-12.0.post20211006.egg-info/ /var/local/pyenv/versions/3.8.15/lib/python3.8/site-packages/odoo-12.0.post20211006.egg-info/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># you should put dockerfile and requirements.txt in the same folder</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./requirements.txt /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /var/local/pyenv/shims/pip install -r /requirements.txt</span></span><br></pre></td></tr></table></figure>

<h3 id="6-Change-to-user-“odoo”"><a href="#6-Change-to-user-“odoo”" class="headerlink" title="6. Change to user “odoo”"></a>6. Change to user “odoo”</h3><p>If you forget to change current user, odoo will fail to start.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> odoo</span><br></pre></td></tr></table></figure>

<h3 id="7-Build-the-docker-image"><a href="#7-Build-the-docker-image" class="headerlink" title="7. Build the docker image"></a>7. Build the docker image</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t UserName/RepName:TagName .</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/Dockerfile">Dockerfile download link</a></p>
<p><a href="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/requirements.txt">requirements.txt download link</a></p>
]]></content>
      <tags>
        <tag>Odoo</tag>
        <tag>Env/Config</tag>
        <tag>Python</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>Anaconda Linux Command</title>
    <url>/2023/06/03/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Anaconda-Linux-Command/</url>
    <content><![CDATA[<p>Frequently used anaconda-related commands</p>
<span id="more"></span>

<h2 id="Anaconda-Linux-Command-Quick-Start"><a href="#Anaconda-Linux-Command-Quick-Start" class="headerlink" title="Anaconda Linux Command Quick Start"></a>Anaconda Linux Command Quick Start</h2><h3 id="Turn-off-the-default-startup-base-environment"><a href="#Turn-off-the-default-startup-base-environment" class="headerlink" title="Turn off the default startup base environment"></a>Turn off the default startup base environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda config --<span class="built_in">set</span> auto_activate_base <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="Turn-on-the-default-startup-base-environment"><a href="#Turn-on-the-default-startup-base-environment" class="headerlink" title="Turn on the default startup base environment"></a>Turn on the default startup base environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda config --<span class="built_in">set</span> auto_activate_base <span class="literal">true</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Linux</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Odoo12 On Ubuntu20.04</title>
    <url>/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Odoo Installation</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>To avoid Odoo corrupting my noble macOS 🤫, I’ve decided to install Odoo on Ubuntu.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="0-Preparation"><a href="#0-Preparation" class="headerlink" title="0. Preparation"></a>0. Preparation</h3><p>Of course, you need to have Ubuntu which is <strong>20.04</strong> (X86) and it need to be able to connect the Internet.</p>
<p>The system I use is build from <a href="https://simonczy.github.io/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/">my previous post</a>.</p>
<h3 id="1-Install-Git"><a href="#1-Install-Git" class="headerlink" title="1. Install Git"></a>1. Install Git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y git</span><br></pre></td></tr></table></figure>

<h3 id="2-Install-PostgreSQL"><a href="#2-Install-PostgreSQL" class="headerlink" title="2. Install PostgreSQL"></a>2. Install PostgreSQL</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># the version I downloaded is postgresql12</span></span><br><span class="line">sudo apt-get install -y postgresql</span><br><span class="line"></span><br><span class="line"><span class="comment"># we can use the following command to check postgresql version</span></span><br><span class="line">psql --version</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/1.png"></p>
<h3 id="3-Create-PostgreSQL-user-and-database"><a href="#3-Create-PostgreSQL-user-and-database" class="headerlink" title="3. Create PostgreSQL user and database"></a>3. Create PostgreSQL user and database</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># start postgresql service</span></span><br><span class="line">sudo service postgresql start</span><br><span class="line"></span><br><span class="line"><span class="comment"># create postgresql user and database</span></span><br><span class="line">sudo -u postgres -i</span><br><span class="line"></span><br><span class="line"><span class="comment"># type your password and remember it</span></span><br><span class="line">createuser -P --superuser odoo</span><br><span class="line"></span><br><span class="line"><span class="comment"># may cause error</span></span><br><span class="line">createdb odoo -U odoo -W</span><br></pre></td></tr></table></figure>

<p>You may meet some error when you run the last command</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FATAL:  Peer authentication failed <span class="keyword">for</span> user <span class="string">&quot;odoo&quot;</span></span><br></pre></td></tr></table></figure>

<p>If so, you should change your pg_hba.conf configuration</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/postgresql/12/main/pg_hba.conf</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/2.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># then restare postgresql service</span></span><br><span class="line">sudo service postgresql restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># complete commands that were not fully executed before</span></span><br><span class="line">sudo -u postgres -i</span><br><span class="line">createdb odoo -U odoo -W</span><br></pre></td></tr></table></figure>

<h3 id="4-Install-curl"><a href="#4-Install-curl" class="headerlink" title="4. Install curl"></a>4. Install curl</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install curl</span><br></pre></td></tr></table></figure>

<h3 id="5-Install-node-js-and-less"><a href="#5-Install-node-js-and-less" class="headerlink" title="5. Install node.js and less"></a>5. Install node.js and less</h3><p>Install nodejs version manager </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L http://git.io/n-install | bash  </span><br></pre></td></tr></table></figure>

<p><strong>Reopen</strong> your terminal and check current version </p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/3.png"></p>
<p>Install less</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g less</span><br></pre></td></tr></table></figure>

<h3 id="6-Clone-Odoo-source-code"><a href="#6-Clone-Odoo-source-code" class="headerlink" title="6. Clone Odoo source code"></a>6. Clone Odoo source code</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/odoo/odoo.git -b 12.0 --depth=1 ./odoo12</span><br></pre></td></tr></table></figure>

<h3 id="7-Install-specific-python-version-optional"><a href="#7-Install-specific-python-version-optional" class="headerlink" title="7. Install specific python version (optional)"></a>7. Install specific python version (optional)</h3><p>Choose one of these two options that you like</p>
<h4 id="7-1-Install-pyenv-to-manage-python-version"><a href="#7-1-Install-pyenv-to-manage-python-version" class="headerlink" title="7.1 Install pyenv to manage python version"></a>7.1 Install pyenv to manage python version</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install pyenv</span></span><br><span class="line">curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># install python dependencies (optional, mostly depend on your perrsonal situation)</span></span><br><span class="line">sudo apt-get update &amp;&amp; apt-get install -y default-libmysqlclient-dev build-essential git gcc make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev libldap2-dev libsasl2-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># install python 3.8</span></span><br><span class="line">pyenv install 3.8 &amp;&amp; pyenv global 3.8</span><br></pre></td></tr></table></figure>

<h4 id="7-2-Use-original-python3-from-ubunutu"><a href="#7-2-Use-original-python3-from-ubunutu" class="headerlink" title="7.2 Use original python3 from ubunutu"></a>7.2 Use original python3 from ubunutu</h4><p>Here I use original python 3.8 from ubunutu (which not include pip3)</p>
<h3 id="8-Install-odoo-dependencies-by-pip3"><a href="#8-Install-odoo-dependencies-by-pip3" class="headerlink" title="8. Install odoo dependencies by pip3"></a>8. Install odoo dependencies by pip3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install pip3</span></span><br><span class="line">sudo apt-get install python3-pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># enter odoo folder (which is odoo12 as I wrote above)</span></span><br><span class="line"><span class="built_in">cd</span> odoo12</span><br><span class="line"></span><br><span class="line"><span class="comment"># install odoo dependencies provided by odoo</span></span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>

<p>You may meet some difficulties when you want to install the following package:</p>
<h4 id="8-1-lxml-install-it-without-specific-version"><a href="#8-1-lxml-install-it-without-specific-version" class="headerlink" title="8.1 lxml: install it without specific version."></a>8.1 lxml: install it without specific version.</h4><p>You need to modify requirements.txt</p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/4.png"></p>
<h4 id="8-2-Pillow-install-it-without-specific-version"><a href="#8-2-Pillow-install-it-without-specific-version" class="headerlink" title="8.2 Pillow: install it without specific version"></a>8.2 Pillow: install it without specific version</h4><p>You need to modify requirements.txt</p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/5.png"></p>
<h4 id="8-3-psycopg2-lack-of-specific-library"><a href="#8-3-psycopg2-lack-of-specific-library" class="headerlink" title="8.3 psycopg2: lack of specific library"></a>8.3 psycopg2: lack of specific library</h4><p>You need to install some package. You don’t need to modify requirements.txt.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libpq-dev</span><br></pre></td></tr></table></figure>

<h4 id="8-4-pyldap-lack-of-specific-library"><a href="#8-4-pyldap-lack-of-specific-library" class="headerlink" title="8.4 pyldap: lack of specific library"></a>8.4 pyldap: lack of specific library</h4><p>You need to install some package. You don’t need to modify requirements.txt.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># If you follow the approach &quot;Install pyenv to manage python version&quot; in this article, you may not meet this error because you already install these libraries before</span></span><br><span class="line">sudo apt-get install libldap2-dev libsasl2-dev</span><br></pre></td></tr></table></figure>

<h3 id="9-Start-odoo"><a href="#9-Start-odoo" class="headerlink" title="9. Start odoo"></a>9. Start odoo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># enter odoo folder (which is odoo12 as I wrote above)</span></span><br><span class="line"><span class="built_in">cd</span> odoo12</span><br><span class="line"></span><br><span class="line"><span class="comment"># install odoo dependencies provided by odoo</span></span><br><span class="line">./odoo-bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># press ctrl+c to quit</span></span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/7.png"></p>
<p>Then turn on your browser and go to this url -&gt; localhost:8069, and you may find some error now.</p>
<p>Front end:</p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/6.png"></p>
<p>Back end:</p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/9.png"></p>
<p>This is because you have not configure your odoo.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run this command and then exit it </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># this command mean save the configuration in the user folder</span></span><br><span class="line">./odoo-bin -s</span><br></pre></td></tr></table></figure>

<p>You can see there is odoo configuration now.</p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/8.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># modify your .odoorc configuration file</span></span><br><span class="line">vim /home/simon/.odoorc</span><br></pre></td></tr></table></figure>

<p>You should update these three configuration: “db_name”, “db_user”, “db_password”. </p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/14.png"></p>
<p>Start the odoo again, and it show the error message like these.</p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/12.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># well let&#x27;s initialize our database as there is nothing in the database</span></span><br><span class="line">./odoo-bin -i base</span><br></pre></td></tr></table></figure>

<p>And this time everything is fine.</p>
<p><img data-src="/2023/03/08/odoo%E7%B3%BB%E5%88%97/Install-Odoo12-On-Ubuntu20-04/13.png"></p>
<h3 id="10-Enjoy-your-odoo-12"><a href="#10-Enjoy-your-odoo-12" class="headerlink" title="10. Enjoy your odoo 12"></a>10. Enjoy your odoo 12</h3><p>If you want to customize you odoo addon, maybe you can check this link.</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://odoobook.tnk-studio.eu.org/Chapter-2/Odoo-Development-Environment.html">Build up your odoo environment</a></p>
]]></content>
      <tags>
        <tag>Odoo</tag>
        <tag>Env/Config</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Command</title>
    <url>/2023/02/15/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Docker-Command/</url>
    <content><![CDATA[<p>Frequently used docker commands</p>
<span id="more"></span>

<h2 id="Docker-Quick-Start"><a href="#Docker-Quick-Start" class="headerlink" title="Docker Quick Start"></a>Docker Quick Start</h2><h3 id="Create-docker-image-from-Dockerfile"><a href="#Create-docker-image-from-Dockerfile" class="headerlink" title="Create docker image from Dockerfile"></a>Create docker image from Dockerfile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run the command in the folder which contains Dockerfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># user@computer odoo_test % ls  -la</span></span><br><span class="line"><span class="comment"># total 8</span></span><br><span class="line"><span class="comment"># drwxr-xr-x@  3 user  staff    96 Mar  6 09:42 .</span></span><br><span class="line"><span class="comment"># drwx------@ 20 user  staff   640 Mar  7 01:42 ..</span></span><br><span class="line"><span class="comment"># -rw-r--r--@  1 user  staff  1546 Mar  6 09:42 Dockerfile</span></span><br><span class="line"></span><br><span class="line">docker build -t salarymaster/odoo:odoo_12 .</span><br></pre></td></tr></table></figure>

<h3 id="Download-docker-image"><a href="#Download-docker-image" class="headerlink" title="Download docker image"></a>Download docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># download from Docker Hub</span></span><br><span class="line">docker pull salarymaster/odoo:H_12.0</span><br></pre></td></tr></table></figure>

<h3 id="Upload-docker-image"><a href="#Upload-docker-image" class="headerlink" title="Upload docker image"></a>Upload docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># upload to Docker Hub</span></span><br><span class="line">docker push salarymaster/odoo:odoo_12</span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;salarymaster&quot; is the name of organization/user</span></span><br><span class="line"><span class="comment"># &quot;odoo&quot; is the repository name created by &quot;salarymaster&quot;</span></span><br><span class="line"><span class="comment"># &quot;odoo_12&quot; is the tag in &quot;odoo&quot; repository to distinguish different version of docker images</span></span><br></pre></td></tr></table></figure>

<h3 id="List-docker-image"><a href="#List-docker-image" class="headerlink" title="List docker image"></a>List docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker image <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<h3 id="Run-docker-image-x2F-Create-image-instance-container"><a href="#Run-docker-image-x2F-Create-image-instance-container" class="headerlink" title="Run docker image &#x2F; Create image instance (container)"></a>Run docker image &#x2F; Create image instance (container)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this command will maintain the container even exiting</span></span><br><span class="line">docker run -itu root salarymaster/odoo:basic /bin/bash</span><br></pre></td></tr></table></figure>

<h3 id="Tag-docker-image"><a href="#Tag-docker-image" class="headerlink" title="Tag docker image"></a>Tag docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ImageID comes from &quot;docker image ls&quot; command</span></span><br><span class="line">docker tag ImageID salarymaster/odoo:new_tagname</span><br></pre></td></tr></table></figure>

<h3 id="Remove-docker-image"><a href="#Remove-docker-image" class="headerlink" title="Remove docker image"></a>Remove docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if ImageID is unique, use ImageID to remove</span></span><br><span class="line">docker image <span class="built_in">rm</span> ImageID</span><br><span class="line"></span><br><span class="line"><span class="comment"># if ImageID is not unique, use unique combination tag to remove</span></span><br><span class="line">docker image <span class="built_in">rm</span> OrgName/RepName:TagName</span><br></pre></td></tr></table></figure>

<h3 id="List-docker-container"><a href="#List-docker-container" class="headerlink" title="List docker container"></a>List docker container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list using containers</span></span><br><span class="line">docker ps </span><br><span class="line"></span><br><span class="line"><span class="comment"># list all the containers</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<h3 id="Start-x2F-Stop-x2F-Restart-docker-container"><a href="#Start-x2F-Stop-x2F-Restart-docker-container" class="headerlink" title="Start&#x2F;Stop&#x2F;Restart docker container"></a>Start&#x2F;Stop&#x2F;Restart docker container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start ContainerID</span><br><span class="line">docker stop ContainerID</span><br><span class="line">docker restart ContainerID</span><br></pre></td></tr></table></figure>

<h3 id="Copy-file-using-docker-container"><a href="#Copy-file-using-docker-container" class="headerlink" title="Copy file using docker container"></a>Copy file using docker container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># copy file from container to local</span></span><br><span class="line">docker <span class="built_in">cp</span> ContainerID:/a/b/c.txt /aa/bb/</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy file from local to container</span></span><br><span class="line">docker <span class="built_in">cp</span> /aa/bb/ ContainerID:/a/b/c.txt</span><br></pre></td></tr></table></figure>

<h3 id="Enter-container"><a href="#Enter-container" class="headerlink" title="Enter container"></a>Enter container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -it use terminal to enter container</span></span><br><span class="line"><span class="comment"># -u use specific user to enter container</span></span><br><span class="line">docker <span class="built_in">exec</span> -itu root 1a9e7655efdc /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="‼️-Advanced"><a href="#‼️-Advanced" class="headerlink" title="‼️ Advanced"></a>‼️ Advanced</h2><h3 id="Inspect-container"><a href="#Inspect-container" class="headerlink" title="Inspect container"></a>Inspect container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check the container detail</span></span><br><span class="line">docker inspect ContainerID</span><br><span class="line"><span class="comment"># or use this command to check docker log</span></span><br><span class="line">docker inspect ContainerID | grep -i <span class="built_in">log</span></span><br></pre></td></tr></table></figure>

<h3 id="Debug-dead-container"><a href="#Debug-dead-container" class="headerlink" title="Debug dead container"></a>Debug dead container</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># copy file from container to local</span></span><br><span class="line">docker <span class="built_in">cp</span> ContainerID:/a/b/c.txt /aa/bb/</span><br></pre></td></tr></table></figure>

<h3 id="Check-container-start-command"><a href="#Check-container-start-command" class="headerlink" title="Check container start command"></a>Check container start command</h3><p><img data-src="/2023/02/15/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Docker-Command/1.png"></p>
]]></content>
      <tags>
        <tag>DevOps</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Compose Command</title>
    <url>/2023/04/15/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Docker-Compose-Command/</url>
    <content><![CDATA[<p>Frequently used docker compose commands</p>
<span id="more"></span>

<h2 id="Docker-Compose-Start"><a href="#Docker-Compose-Start" class="headerlink" title="Docker Compose Start"></a>Docker Compose Start</h2><h3 id="Start-compose"><a href="#Start-compose" class="headerlink" title="Start compose"></a>Start compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure>

<h3 id="End-compose"><a href="#End-compose" class="headerlink" title="End compose"></a>End compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose down</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>DevOps</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Dockerfile Command</title>
    <url>/2023/03/07/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Dockerfile-Command/</url>
    <content><![CDATA[<p>Frequently used dockerfile commands</p>
<span id="more"></span>

<h2 id="Dockerfile-Quick-Start"><a href="#Dockerfile-Quick-Start" class="headerlink" title="Dockerfile Quick Start"></a>Dockerfile Quick Start</h2><h3 id="Change-user"><a href="#Change-user" class="headerlink" title="Change user"></a>Change user</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> root</span><br></pre></td></tr></table></figure>

<h3 id="Run-bash-command"><a href="#Run-bash-command" class="headerlink" title="Run bash command"></a>Run bash command</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mv</span> /a/b/c.txt /aa/bb/cc.txt</span></span><br></pre></td></tr></table></figure>

<h3 id="Get-raw-docker-image"><a href="#Get-raw-docker-image" class="headerlink" title="Get raw docker image"></a>Get raw docker image</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> salarymaster/odoo:office_odoo12</span><br></pre></td></tr></table></figure>

<h3 id="Copy-local-file-into-docker-image"><a href="#Copy-local-file-into-docker-image" class="headerlink" title="Copy local file into docker image"></a>Copy local file into docker image</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./requirements.txt /</span></span><br></pre></td></tr></table></figure>

<h3 id="Set-some-environment-varible"><a href="#Set-some-environment-varible" class="headerlink" title="Set some environment varible"></a>Set some environment varible</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENV</span> PYENV_ROOT=/var/local/pyenv</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>DevOps</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Command</title>
    <url>/2023/03/28/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Git-Command/</url>
    <content><![CDATA[<p>Frequently used git commands</p>
<span id="more"></span>

<h2 id="Git-Quick-Start"><a href="#Git-Quick-Start" class="headerlink" title="Git Quick Start"></a>Git Quick Start</h2><h3 id="version-fallback"><a href="#version-fallback" class="headerlink" title="version fallback"></a>version fallback</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># you need to be in the branch you want to fall back</span></span><br><span class="line"><span class="comment"># input &quot;q&quot; to quit</span></span><br><span class="line"><span class="comment"># write down the commit number, let us assume it it aa11bb22cc33dd44</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># you can fallback to the specific commit you want</span></span><br><span class="line"><span class="comment"># please remember to save your original or it will be erased</span></span><br><span class="line">git reset --hard aa11bb22cc33dd44</span><br></pre></td></tr></table></figure>

<h3 id="display-branch"><a href="#display-branch" class="headerlink" title="display branch"></a>display branch</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># output shown as following</span></span><br><span class="line"><span class="comment"># WI325-Simon-0413</span></span><br><span class="line"><span class="comment"># *develop (current branch with &quot;*&quot;)</span></span><br></pre></td></tr></table></figure>

<h3 id="delete-branch"><a href="#delete-branch" class="headerlink" title="delete branch"></a>delete branch</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d WI325-Simon-0413</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Command</title>
    <url>/2023/03/07/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Linux-Command/</url>
    <content><![CDATA[<p>Frequently used linux commands</p>
<span id="more"></span>

<h2 id="Linux-Quick-Start"><a href="#Linux-Quick-Start" class="headerlink" title="Linux Quick Start"></a>Linux Quick Start</h2><h3 id="grep-file-ignoring-case"><a href="#grep-file-ignoring-case" class="headerlink" title="grep file ignoring case"></a>grep file ignoring case</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -la | grep -i <span class="string">&quot;pypdf2&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="change-user-password"><a href="#change-user-password" class="headerlink" title="change user password"></a>change user password</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd username</span><br></pre></td></tr></table></figure>

<h3 id="remove-package"><a href="#remove-package" class="headerlink" title="remove package"></a>remove package</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge PackageName</span><br><span class="line"></span><br><span class="line"><span class="comment"># if your ubuntu have GUI, you can delete the gui by the following command, and reboot</span></span><br><span class="line">sudo apt-get purge lightdm</span><br><span class="line"></span><br><span class="line"><span class="comment"># if you want to recover your GUI, you can install it and reboot</span></span><br><span class="line">sudo apt-get install lightdm</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h3 id="ftp-common-command"><a href="#ftp-common-command" class="headerlink" title="ftp common command"></a>ftp common command</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check ftp service status</span></span><br><span class="line">service vsftpd status</span><br><span class="line"></span><br><span class="line"><span class="comment"># check ftp process</span></span><br><span class="line">ps ef | grep -i ftp</span><br><span class="line"></span><br><span class="line"><span class="comment"># display ftp auto-on process</span></span><br><span class="line">systemctl list-unit-files | grep ftp</span><br></pre></td></tr></table></figure>

<h3 id="system-service"><a href="#system-service" class="headerlink" title="system service"></a>system service</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># start ftp service</span></span><br><span class="line">systemctl start vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># stop ftp service</span></span><br><span class="line">systemctl stop vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># set ftp auto-on on</span></span><br><span class="line">systemctl <span class="built_in">enable</span> vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># set ftp auto-on off</span></span><br><span class="line">systemctl <span class="built_in">disable</span> vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="display-folder-size"><a href="#display-folder-size" class="headerlink" title="display folder size"></a>display folder size</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span></span><br></pre></td></tr></table></figure>

<h3 id="compressed-folder"><a href="#compressed-folder" class="headerlink" title="compressed folder"></a>compressed folder</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># SML_P1.tar.gz is the name of target compressed file</span></span><br><span class="line"><span class="comment"># SML_P1/ is the folder you want to compress</span></span><br><span class="line">tar -zcvf SML_P1.tar.gz SML_P1/</span><br></pre></td></tr></table></figure>

<h3 id="login-other-machine-by-ssh"><a href="#login-other-machine-by-ssh" class="headerlink" title="login other machine by ssh"></a>login other machine by ssh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># let us set ip as 192.168.1.1, port as 12345, user as root</span></span><br><span class="line">ssh root@192.168.1.1 -p 12345</span><br></pre></td></tr></table></figure>

<h3 id="ssh-other-machine-and-run-local-shell-script"><a href="#ssh-other-machine-and-run-local-shell-script" class="headerlink" title="ssh other machine and run local shell script"></a>ssh other machine and run local shell script</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># let us set ip as 192.168.1.1, port as 12345, user as root</span></span><br><span class="line"><span class="comment"># shell script as base.sh</span></span><br><span class="line">ssh -T root@192.168.1.1 -p 12345 &lt; bash.sh</span><br></pre></td></tr></table></figure>

<h3 id="copy-file-to-other-machine"><a href="#copy-file-to-other-machine" class="headerlink" title="copy file to other machine"></a>copy file to other machine</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># let us set ip as 192.168.1.1, port as 12345, user as root</span></span><br><span class="line"><span class="comment"># relative local file path ./FinalCode.txt</span></span><br><span class="line">scp -P 12345 ./FinalCode.txt root@192.168.1.1:~/Documents</span><br></pre></td></tr></table></figure>

<h3 id="copy-folder-to-other-machine"><a href="#copy-folder-to-other-machine" class="headerlink" title="copy folder to other machine"></a>copy folder to other machine</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># let us set ip as 192.168.1.1, port as 12345, user as root</span></span><br><span class="line"><span class="comment"># relative local folder path ./FinalCode/</span></span><br><span class="line">scp -P 12345 -r ./FinalCode/ root@192.168.1.1:~/Documents</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/qq_16736531/article/details/80663023">Common FTP Command</a></p>
<p><a href="https://blog.csdn.net/qq_41985134/article/details/121182623">Ubuntu Auto-On Service</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Pip Command</title>
    <url>/2023/03/07/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Pip-Command/</url>
    <content><![CDATA[<p>Frequently used pip commands</p>
<span id="more"></span>

<h2 id="Pip-Quick-Start"><a href="#Pip-Quick-Start" class="headerlink" title="Pip Quick Start"></a>Pip Quick Start</h2><p>Take pip3 as an example.</p>
<h3 id="List-installed-package"><a href="#List-installed-package" class="headerlink" title="List installed package"></a>List installed package</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 list</span><br></pre></td></tr></table></figure>

<h3 id="Display-the-details-of-a-specific-package"><a href="#Display-the-details-of-a-specific-package" class="headerlink" title="Display the details of a specific package"></a>Display the details of a specific package</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Assume the package &quot;pdf2image&quot; has been installed</span></span><br><span class="line">pip3 show pdf2image</span><br></pre></td></tr></table></figure>

<h3 id="Create-a-requirement-file-by-using-current-installed-packages"><a href="#Create-a-requirement-file-by-using-current-installed-packages" class="headerlink" title="Create a requirement file by using current installed packages"></a>Create a requirement file by using current installed packages</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure>

<h3 id="Install-packages-by-using-the-requirement-file"><a href="#Install-packages-by-using-the-requirement-file" class="headerlink" title="Install packages by using the requirement file"></a>Install packages by using the requirement file</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>

<h3 id="Install-specific-version-packages"><a href="#Install-specific-version-packages" class="headerlink" title="Install specific version packages"></a>Install specific version packages</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install lxml=4.9.2</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Common Code</title>
    <url>/2023/03/26/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Python-Common-Code/</url>
    <content><![CDATA[<p>Frequently used python code</p>
<span id="more"></span>

<h2 id="Python-Quick-Start"><a href="#Python-Quick-Start" class="headerlink" title="Python Quick Start"></a>Python Quick Start</h2><h3 id="Ternary-operator"><a href="#Ternary-operator" class="headerlink" title="Ternary operator"></a>Ternary operator</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p_max_count = <span class="built_in">len</span>(i[<span class="string">&#x27;prompt&#x27;</span>]) <span class="keyword">if</span> p_max_count &lt; <span class="built_in">len</span>(i[<span class="string">&#x27;prompt&#x27;</span>]) <span class="keyword">else</span> p_max_count</span><br></pre></td></tr></table></figure>

<h3 id="Calculate-time-spent"><a href="#Calculate-time-spent" class="headerlink" title="Calculate time spent"></a>Calculate time spent</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">start_time = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line"><span class="comment"># target function</span></span><br><span class="line"></span><br><span class="line">end_time = datetime.datetime.now()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;it takes &#123;&#125; seconds&quot;</span>.<span class="built_in">format</span>((end_time - start_time).seconds))</span><br></pre></td></tr></table></figure>

<h3 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h3><h4 id="Int"><a href="#Int" class="headerlink" title="Int"></a>Int</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate integer from 1 to 20</span></span><br><span class="line"><span class="built_in">print</span> (random.randint(<span class="number">1</span>, <span class="number">20</span>))</span><br></pre></td></tr></table></figure>

<h3 id="Sort"><a href="#Sort" class="headerlink" title="Sort"></a>Sort</h3><h4 id="Sort-2D-list"><a href="#Sort-2D-list" class="headerlink" title="Sort 2D list"></a>Sort 2D list</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">employees = [[<span class="number">10</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">1997</span>], [<span class="number">3</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">1998</span>], [<span class="number">8</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="number">2001</span>]]</span><br><span class="line"></span><br><span class="line">sorted_e_a = <span class="built_in">sorted</span>(employees, key=(<span class="keyword">lambda</span> x:x[<span class="number">0</span>]))</span><br><span class="line">sorted_e_b = <span class="built_in">sorted</span>(employees, key=(<span class="keyword">lambda</span> x:[x[<span class="number">2</span>], x[<span class="number">1</span>]]), reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(employees)</span><br><span class="line"><span class="built_in">print</span>(sorted_e_a)</span><br><span class="line"><span class="built_in">print</span>(sorted_e_b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="comment"># [[10, &#x27;Jack&#x27;, 1997], [3, &#x27;Jack&#x27;, 1998], [8, &#x27;Smith&#x27;, 2001]]</span></span><br><span class="line"><span class="comment"># [[3, &#x27;Jack&#x27;, 1998], [8, &#x27;Smith&#x27;, 2001], [10, &#x27;Jack&#x27;, 1997]]</span></span><br><span class="line"><span class="comment"># [[8, &#x27;Smith&#x27;, 2001], [3, &#x27;Jack&#x27;, 1998], [10, &#x27;Jack&#x27;, 1997]]</span></span><br></pre></td></tr></table></figure>

<h4 id="Sort-dictionary"><a href="#Sort-dictionary" class="headerlink" title="Sort dictionary"></a>Sort dictionary</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic = &#123;<span class="number">2</span>: <span class="number">56</span>, <span class="number">1</span>: <span class="number">2</span>, <span class="number">7</span>: <span class="number">12</span>, <span class="number">4</span>: <span class="number">24</span>, <span class="number">5</span>: <span class="number">12</span>, <span class="number">3</span>: <span class="number">323</span>&#125;</span><br><span class="line">sorted_dict_1 = <span class="built_in">sorted</span>(dic.items(), key = <span class="keyword">lambda</span> kv:(kv[<span class="number">0</span>]))</span><br><span class="line">sorted_dict_2 = <span class="built_in">sorted</span>(dic.items(), key = <span class="keyword">lambda</span> kv:(kv[<span class="number">1</span>]))</span><br><span class="line">sorted_dict_3 = <span class="built_in">sorted</span>(dic.items(), key = <span class="keyword">lambda</span> kv:(kv[<span class="number">1</span>], kv[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(sorted_dict_1)</span><br><span class="line"><span class="built_in">print</span>(sorted_dict_2)</span><br><span class="line"><span class="built_in">print</span>(sorted_dict_3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [(1, 2), (2, 56), (3, 323), (4, 24), (5, 12), (7, 12)]</span></span><br><span class="line"><span class="comment"># [(1, 2), (7, 12), (5, 12), (4, 24), (2, 56), (3, 323)]</span></span><br><span class="line"><span class="comment"># [(1, 2), (5, 12), (7, 12), (4, 24), (2, 56), (3, 323)]</span></span><br></pre></td></tr></table></figure>

<h4 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&quot;54321&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a[::-<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 12345</span></span><br></pre></td></tr></table></figure>

<h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><h4 id="List-generator"><a href="#List-generator" class="headerlink" title="List generator"></a>List generator</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">b = [i+<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> a]</span><br><span class="line"><span class="comment"># b = [2, 3, 4, 5, 6, 7]</span></span><br><span class="line"></span><br><span class="line">c = [i+<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> a <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line"><span class="comment"># c = [3, 5, 7]</span></span><br></pre></td></tr></table></figure>

<h3 id="For"><a href="#For" class="headerlink" title="For"></a>For</h3><h4 id="For-Else"><a href="#For-Else" class="headerlink" title="For-Else"></a>For-Else</h4><p>The only way that the code would run to “else”, is that there is no break in the for-loop.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> container:</span><br><span class="line">    <span class="keyword">if</span> search_something(item):</span><br><span class="line">        <span class="comment"># Found it!</span></span><br><span class="line">        process(item)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># Didn&#x27;t find anything..</span></span><br><span class="line">    not_found_in_container()</span><br></pre></td></tr></table></figure>

<h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><h4 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&quot;String&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a.lower())</span><br><span class="line"><span class="built_in">print</span>(a.upper())</span><br><span class="line"></span><br><span class="line"><span class="comment"># string</span></span><br><span class="line"><span class="comment"># STRING</span></span><br></pre></td></tr></table></figure>

<h4 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&quot;123asJIjg&quot;</span></span><br><span class="line">b = <span class="string">&quot;123&quot;</span></span><br><span class="line">c = <span class="string">&quot;asJIjg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a.isdigit(), a.isalpha(), a.isalnum())</span><br><span class="line"><span class="built_in">print</span>(b.isdigit(), b.isalpha(), b.isalnum())</span><br><span class="line"><span class="built_in">print</span>(c.isdigit(), c.isalpha(), c.isalnum())</span><br><span class="line"></span><br><span class="line"><span class="comment"># False False True</span></span><br><span class="line"><span class="comment"># True False True</span></span><br><span class="line"><span class="comment"># False True True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># isdigit(): if totally made of number</span></span><br><span class="line"><span class="comment"># isalpha(): if totally made of alpha</span></span><br><span class="line"><span class="comment"># isalnum(): if totally made of number or alpha</span></span><br></pre></td></tr></table></figure>

<h3 id="Initilization"><a href="#Initilization" class="headerlink" title="Initilization"></a>Initilization</h3><h4 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">dict</span>.fromkeys([<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>], <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(x)        </span><br><span class="line"><span class="comment"># &#123;&#x27;A&#x27;: 0, &#x27;B&#x27;: 0, &#x27;C&#x27;: 0&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Simplify"><a href="#Simplify" class="headerlink" title="Simplify"></a>Simplify</h3><h4 id="Dictionary-Count"><a href="#Dictionary-Count" class="headerlink" title="Dictionary Count"></a>Dictionary Count</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> char <span class="keyword">not</span> <span class="keyword">in</span> unigram_counts:</span><br><span class="line">    unigram_counts[char] = <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    unigram_counts[char] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># can be replace by    </span></span><br><span class="line">unigram_counts[char] = unigram_counts.get(char, <span class="number">0</span>) + <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="Visualization"><a href="#Visualization" class="headerlink" title="Visualization"></a>Visualization</h3><h4 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br></pre></td></tr></table></figure>

<h5 id="Draw-by-one-list"><a href="#Draw-by-one-list" class="headerlink" title="Draw by one list"></a>Draw by one list</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">a = [<span class="number">17</span>, <span class="number">15</span>, <span class="number">1479</span>, <span class="number">76</span>, <span class="number">1485</span>, <span class="number">68</span>, <span class="number">1493</span>, <span class="number">10</span>, <span class="number">1500</span>, <span class="number">1492</span>, <span class="number">1478</span>, <span class="number">86</span>, <span class="number">1515</span>, <span class="number">1518</span>, <span class="number">1520</span>, <span class="number">1502</span>, <span class="number">1519</span>, <span class="number">1497</span>, <span class="number">1525</span>, <span class="number">87</span>]</span><br><span class="line">plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.plot(a)</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/26/Python/Python-Common-Code/1.png"></p>
<h5 id="Draw-by-two-list"><a href="#Draw-by-two-list" class="headerlink" title="Draw by two list"></a>Draw by two list</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">a = [<span class="number">17</span>, <span class="number">15</span>, <span class="number">1479</span>, <span class="number">76</span>, <span class="number">1485</span>, <span class="number">68</span>, <span class="number">1493</span>, <span class="number">10</span>, <span class="number">1500</span>, <span class="number">1492</span>, <span class="number">1478</span>, <span class="number">86</span>, <span class="number">1515</span>, <span class="number">1518</span>, <span class="number">1520</span>, <span class="number">1502</span>, <span class="number">1519</span>, <span class="number">1497</span>, <span class="number">1525</span>, <span class="number">87</span>]</span><br><span class="line">b = a[::-<span class="number">1</span>]</span><br><span class="line">plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.plot(a, color=<span class="string">&quot;r&quot;</span>, marker=<span class="string">&quot;*&quot;</span>)</span><br><span class="line">plt.plot(b, color=<span class="string">&quot;b&quot;</span>, marker=<span class="string">&quot;o&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/26/Python/Python-Common-Code/2.png"></p>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Public Util Code</title>
    <url>/2023/05/21/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Python-Public-Util-Code/</url>
    <content><![CDATA[<p>Personal frequently used public python function code</p>
<span id="more"></span>

<h3 id="Time"><a href="#Time" class="headerlink" title="Time"></a>Time</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_day_time</span>():</span><br><span class="line">    <span class="keyword">return</span> time.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>, time.localtime())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_detail_time</span>():</span><br><span class="line">    <span class="keyword">return</span> time.strftime(<span class="string">&quot;%Y-%m-%d_%H:%M:%S&quot;</span>, time.localtime())</span><br></pre></td></tr></table></figure>

<h3 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_detail_time</span>():</span><br><span class="line">    <span class="keyword">return</span> time.strftime(<span class="string">&quot;%Y-%m-%d_%H:%M:%S&quot;</span>, time.localtime())</span><br><span class="line"></span><br><span class="line">log_level_dict = &#123;</span><br><span class="line">    <span class="string">&#x27;DEBUG&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;INFO&#x27;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&#x27;WARNING&#x27;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&#x27;ERROR&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">&#x27;CRITICAL&#x27;</span>: <span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_log</span>(<span class="params">log_info, log_level=<span class="string">&#x27;INFO&#x27;</span></span>):</span><br><span class="line">    os.makedirs(<span class="string">&#x27;./log&#x27;</span>, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    log_dir = <span class="string">&#x27;./log/nlp.log&#x27;</span></span><br><span class="line">    current_level = log_level_dict[<span class="string">&#x27;INFO&#x27;</span>]</span><br><span class="line">    log = <span class="string">&quot;[&#123;0&#125;] &#123;1&#125;: &#123;2&#125;\n&quot;</span>.<span class="built_in">format</span>(log_level, get_detail_time(), log_info)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> log_level_dict[log_level] &gt;= current_level:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(log_dir, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(log)</span><br></pre></td></tr></table></figure>

<h3 id="Write-x2F-Read-File"><a href="#Write-x2F-Read-File" class="headerlink" title="Write &#x2F; Read File"></a>Write &#x2F; Read File</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">write_file</span>(<span class="params">file_name, data</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params">file_name</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br></pre></td></tr></table></figure>

<h3 id="Write-x2F-Read-Json-File"><a href="#Write-x2F-Read-Json-File" class="headerlink" title="Write &#x2F; Read Json File"></a>Write &#x2F; Read Json File</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_file</span>(<span class="params">file_name, data</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params">file_name</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">json_to_dict</span>(<span class="params">json_data</span>):</span><br><span class="line">    <span class="keyword">return</span> json.loads(json_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dict_to_json</span>(<span class="params">dict_data</span>):</span><br><span class="line">    <span class="keyword">return</span> json.dumps(dict_data, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_json_file</span>(<span class="params">file_name, dic</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(dict_to_json(dic))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_json_file</span>(<span class="params">file_name</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> json.load(f)</span><br></pre></td></tr></table></figure>

<h3 id="Get-x2F-Post-Request"><a href="#Get-x2F-Post-Request" class="headerlink" title="Get &#x2F; Post Request"></a>Get &#x2F; Post Request</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_req_by_get</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">return</span> requests.get(url).text</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_req_by_post</span>(<span class="params">url, body</span>):</span><br><span class="line">    <span class="keyword">return</span> requests.post(</span><br><span class="line">        url,</span><br><span class="line">        data=body,</span><br><span class="line">        headers=&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">    ).text</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;Need some code shown above&#x27;&#x27;&#x27;</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_raw_data</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;code&#x27;</span> <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> data[<span class="string">&#x27;code&#x27;</span>] == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> data[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&#x27;Fail To Send Request! Error Message: &#123;0&#125; &#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(data[<span class="string">&#x27;code&#x27;</span>], data[<span class="string">&#x27;message&#x27;</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_rsp_data</span>(<span class="params">url, req_type, body=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">    <span class="keyword">if</span> req_type.upper() == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> get_raw_data(json_to_dict(send_req_by_get(url)))</span><br><span class="line">    <span class="keyword">elif</span> req_type.upper() == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> body == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;Empty body to post.&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> get_raw_data(json_to_dict(send_req_by_post(url, body)))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;Error reqType: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(req_type))</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu Safety Command</title>
    <url>/2023/06/03/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/Ubuntu-Safety-Command/</url>
    <content><![CDATA[<p>Frequently used ubuntu safety commands</p>
<span id="more"></span>

<h2 id="Ubuntu-Safety-Quick-Start"><a href="#Ubuntu-Safety-Quick-Start" class="headerlink" title="Ubuntu Safety Quick Start"></a>Ubuntu Safety Quick Start</h2><h3 id="display-current-user"><a href="#display-current-user" class="headerlink" title="display current user"></a>display current user</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">who</span></span><br></pre></td></tr></table></figure>

<h3 id="display-login-log"><a href="#display-login-log" class="headerlink" title="display login log"></a>display login log</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">last</span><br></pre></td></tr></table></figure>

<h3 id="display-user-login-log"><a href="#display-user-login-log" class="headerlink" title="display user login log"></a>display user login log</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lastlog</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Quick Check</tag>
      </tags>
  </entry>
  <entry>
    <title>iTerm2常用方法</title>
    <url>/2024/06/05/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/iTerm2%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>iTerm2常用方法</p>
<span id="more"></span>

<h2 id="快速浏览"><a href="#快速浏览" class="headerlink" title="快速浏览"></a>快速浏览</h2><h3 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h3><p>Setting -&gt; Profiles</p>
<p>在这里面能够自定义每个窗口的名称、启动脚本、图标等诸多信息。</p>
<p>可以在这里面来定义SSH的服务器</p>
<p>新建profiles的快捷键：cmd+o</p>
]]></content>
      <tags>
        <tag>Quick Check</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Create Your Own Discord Bot</title>
    <url>/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Create a discord bot</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>To set up a assisting robots to help me obtain information.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="0-Preparation"><a href="#0-Preparation" class="headerlink" title="0. Preparation"></a>0. Preparation</h3><p>You should:</p>
<ul>
<li>have a discord accound</li>
<li>have a python environment</li>
</ul>
<h3 id="1-Create-a-discord-bot"><a href="#1-Create-a-discord-bot" class="headerlink" title="1. Create a discord bot"></a>1. Create a discord bot</h3><h4 id="1-1-Enter-discord-application-page"><a href="#1-1-Enter-discord-application-page" class="headerlink" title="1.1 Enter discord application page"></a>1.1 Enter <a href="https://discord.com/developers/applications">discord application page</a></h4><h4 id="1-2-Click-“New-Application”"><a href="#1-2-Click-“New-Application”" class="headerlink" title="1.2 Click “New Application”"></a>1.2 Click “New Application”</h4><p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/1.png"></p>
<h4 id="1-3-Give-it-a-new-name"><a href="#1-3-Give-it-a-new-name" class="headerlink" title="1.3 Give it a new name"></a>1.3 Give it a new name</h4><p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/2.png"></p>
<h4 id="1-4-Get-your-discord-bot-token"><a href="#1-4-Get-your-discord-bot-token" class="headerlink" title="1.4 Get your discord bot token"></a>1.4 Get your discord bot token</h4><p>Enter Bot page</p>
<p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/4.png"></p>
<p>At the beginning, you need to click the “Reset Token” button to gain your first token. You should safely store it because anyone who owns this token can control its corresponding bot. We will use it in <strong><u>Step 4 Make the first move</u></strong>.</p>
<p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/3.png"></p>
<p>If you feel unncomfortable, you can reset your token at any time.</p>
<h3 id="2-Add-you-discord-server"><a href="#2-Add-you-discord-server" class="headerlink" title="2. Add you discord server"></a>2. Add you discord server</h3><p>This server is the place that you can put your dicord bot in.</p>
<h3 id="3-Add-your-bot-into-your-server"><a href="#3-Add-your-bot-into-your-server" class="headerlink" title="3. Add your bot into your server"></a>3. Add your bot into your server</h3><p>Set your application as a bot.</p>
<p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/5.png"></p>
<p>Assign it corresponding permissions. And copy the link.</p>
<p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/6.png"></p>
<p>Go to the link, select your server and authorize it.</p>
<p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/7.png"></p>
<p>Now you have your offline server bot.</p>
<p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/8.png"></p>
<h3 id="4-Make-the-first-move"><a href="#4-Make-the-first-move" class="headerlink" title="4. Make the first move"></a>4. Make the first move</h3><p>Your have already created a bot and assign it into your server. And you have your bot token saved in <strong><u>step 2</u></strong>. Now you can teach your bot to make the first move.</p>
<p>Create this python file and run it.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> discord</span><br><span class="line"></span><br><span class="line">client = discord.Client(intents=discord.Intents.default())</span><br><span class="line"></span><br><span class="line"><span class="meta">@client.event</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_ready</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;We have logged in as &#123;0.user&#125;&#x27;</span>.<span class="built_in">format</span>(client))</span><br><span class="line"></span><br><span class="line"><span class="meta">@client.event</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_message</span>(<span class="params">message</span>):</span><br><span class="line">    <span class="keyword">if</span> message.author == client.user:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> message.content.startswith(<span class="string">&#x27;$hello&#x27;</span>):</span><br><span class="line">        <span class="keyword">await</span> message.channel.send(<span class="string">&#x27;Hello!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Assume your token is &quot;abc456DEF&quot;.</span></span><br><span class="line">token = <span class="string">&quot;abc456DEF&quot;</span></span><br><span class="line"></span><br><span class="line">client.run(token)</span><br></pre></td></tr></table></figure>

<p>And now Jarvis is online.</p>
<p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/9.png"></p>
<p>Then the bot will reply you “Hello!” when you say “$hello” to it.</p>
<p><img data-src="/2023/04/17/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/Create-Your-Own-Discord-Bot/10.png"></p>
<h3 id="5-Improvement"><a href="#5-Improvement" class="headerlink" title="5. Improvement"></a>5. Improvement</h3><p>Now, you have create your bot. What you can do next is to create a new world!</p>
<p>For more information, you can check the <a href="https://discordpy.readthedocs.io/en/latest/index.html">discord official doc</a>.</p>
]]></content>
      <tags>
        <tag>Introduction</tag>
        <tag>Python</tag>
        <tag>Bot</tag>
      </tags>
  </entry>
  <entry>
    <title>网站前后端开发概念讲解</title>
    <url>/2024/05/15/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/%E7%BD%91%E7%AB%99%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%A6%82%E5%BF%B5%E8%AE%B2%E8%A7%A3/</url>
    <content><![CDATA[<p>💡 本文对以下场景有所帮助</p>
<ul>
<li>网站搭建的技术介绍</li>
</ul>
<span id="more"></span>

<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>最近要开发一个多角色的订单管理项目，借这个机会重新回顾下网站的前后端搭建流程，用文字记录一下，以后捡起来速度也快一点，不像现在手忙脚乱啥都给忘了。</p>
<p>为了方便大家理解，我将开发主体分为以下四个模块：前端、后端、接口和数据库。接下来的操作步骤并不严格按照以上顺序，而是根据实际的流程来进行开发，大家心里有个模块划分的概念就行。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1-前端"><a href="#1-前端" class="headerlink" title="1. 前端"></a>1. 前端</h3><p>其实就是用户界面，也就是用户能够看到或操作的界面。因此，按照这个角度来理解的话，它负责的功能不外乎就是信息展示和用户交互。</p>
<p>而又因为我们希望这个系统更加智能，那信息展示就需要具备实时性，我们就需要引入请求和相应模块：我们需要通过用户的某些行为（如点击按钮），来触发一个发到<strong>后端</strong>的请求（如查询当前在职人数），进而利用请求所返回的响应，刷新当前的界面，让用户能够看到最新的信息（如此时此刻的当前在此人数）。</p>
<p><img data-src="/2024/05/15/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/%E7%BD%91%E7%AB%99%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%A6%82%E5%BF%B5%E8%AE%B2%E8%A7%A3/1.png"></p>
<p>通常情况下，每一个用户相当于一个<strong>前端</strong>，而他们都需要将请求发到<strong>后端</strong>，可以近似理解成这是一个一对多的模型，后端的负荷较大。因此，为了减少后端的计算量，或者<strong>更好地分割业务代码和输入验证</strong>，我们通常会把一些不需要设计业务数据的逻辑操作前移到前端，如两次输入的密码是否一致，邮箱格式是否正确等。这些能力如今已经很好地被集成到诸多框架中。</p>
<h3 id="2-后端"><a href="#2-后端" class="headerlink" title="2. 后端"></a>2. 后端</h3><p>处理业务逻辑的模块。后端接收到前端发来的请求后，会结合业务逻辑和系统数据，返回适当的响应给前端。</p>
<p>后端的代码就比较像我们日常写的代码了，就是该干嘛干嘛，业务让怎么做就怎么做。不过呢，有以下四点需要注意：</p>
<ol>
<li>接口：既然存在请求和响应，那自然就存在着对应的数据格式和接口调用。具体细节我们后面聊，这里不做赘述。</li>
<li>权限管理：要考虑到不同用户身份的行为是否满足其当前的期望。（如我们肯定不希望某个普通用户有权限看到所有的用户信息）。</li>
<li>错误处理：需要涵盖所有的可能出现的错误情况，并把对应的错误情况也一并反馈到前端。</li>
<li>系统数据：其实就是数据持久化，一般系统的数据持久化的方式就是用的数据库。后端可以通过调用数据库接口来对数据进行增删改查。具体细节也是后面聊，不做赘述。</li>
</ol>
<h3 id="3-接口"><a href="#3-接口" class="headerlink" title="3. 接口"></a>3. 接口</h3><p>前后端走请求响应，其实就是通信的一种。既然是通信，那就是需要有通信格式（如网络通信中的tcp协议）。当前的前后端框架，基本支持了接口的优雅调用。可以理解成是通过一些简单的定义，让我们只需要关注信息的主体部分，而不需要关注协议，消息头等无关信息。</p>
<p>既然接口是自行定义的，那自然就有风格的说法（如python代码风格）。当前的API风格以RESTful为主。动宾格式的描述来作为接口名称，清晰明确地状态码作为本次响应的结果。</p>
<p><img data-src="/2024/05/15/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/%E7%BD%91%E7%AB%99%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%A6%82%E5%BF%B5%E8%AE%B2%E8%A7%A3/2.png"></p>
<h3 id="4-数据库"><a href="#4-数据库" class="headerlink" title="4. 数据库"></a>4. 数据库</h3><p>对系统数据进行持久化的模块，用来存储系统中的所有相关数据。从性能角度考虑的话，由于数据涉及的增删改查很多，因此在开发阶段，我们需要根据业务发展的情况，不断对表数据进行结构上的优化。并且，由于考虑到未来系统的扩展性，我们在表字段更新的时候需要认真规划，避免遗失重要信息。</p>
<p>之前提到，后端可以通过调用数据库接口来连接并操作数据库，通过定制化的sql语句对数据进行增删改查。其实，现在许多的后端框架已经支持了ORM的方式来操作数据库，每个数据库中的表其实就是代码中的一个类。通过这种方式，将sql语句的编写隐藏在框架中，开发人员只需要对类或者对象进行增删改查即可。</p>
<p><img data-src="/2024/05/15/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/%E7%BD%91%E7%AB%99%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%A6%82%E5%BF%B5%E8%AE%B2%E8%A7%A3/3.png"></p>
<h3 id="5-开发思路"><a href="#5-开发思路" class="headerlink" title="5. 开发思路"></a>5. 开发思路</h3><p>本网站前后端开发，所使用到的技术栈是：前端Amis，后端Django，数据库PostgreSQL。</p>
<p>前端通过json的方式进行页面的制作，并且在对应的地方添加上适当的接口。</p>
<p>后端利用Django框架来实现用户认证和数据操作，使用Django-ninja来进行API的编写。</p>
<h3 id="6-项目实战"><a href="#6-项目实战" class="headerlink" title="6. 项目实战"></a>6. 项目实战</h3><p>由于篇幅原因，将会另起一篇文章专门讲解项目代码和开发框架，敬请期待。</p>
]]></content>
      <tags>
        <tag>网站开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Linux By BIOS On Window Machine</title>
    <url>/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Install System</li>
<li>Enter BIOS</li>
<li>Install Linux</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>The long term use of the virtual machine took up my macOS system resources, so I considered using the small server I purchased to install ubuntu (16+512). 🤔️</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="0-Preparation"><a href="#0-Preparation" class="headerlink" title="0. Preparation"></a>0. Preparation</h3><p>Firstly, you should have a window machine.</p>
<p>Then, you should know <strong>the way to enter your machine BIOS</strong>. Generally speaking, different computers have very different ways of turning on the BIOS. Therefore, you’d better ask your computer provider or related technical support.</p>
<p>Last, you should have a USB flash drive (at least 8g).</p>
<h3 id="1-Intall-an-Ubuntu-image"><a href="#1-Intall-an-Ubuntu-image" class="headerlink" title="1. Intall an Ubuntu image"></a>1. Intall an Ubuntu image</h3><p>Click <a href="https://ubuntu.com/download/desktop">this page</a> to download the Ubuntu you want. As I want to download 20.04 LTS, I need to go to <a href="https://ubuntu.com/download/alternative-downloads">alternative page</a> to search.</p>
<p><img data-src="/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/1.png"></p>
<h3 id="2-Create-a-bootable-USB-stick"><a href="#2-Create-a-bootable-USB-stick" class="headerlink" title="2. Create a bootable USB stick"></a>2. Create a bootable USB stick</h3><p>Use <a href="https://www.balena.io/etcher/">balenaEtcher</a> to create bootable USB stick. You should select your .iso file and your USB flash drive. It may take about 5mins.</p>
<h3 id="3-Enter-your-machine-BIOS"><a href="#3-Enter-your-machine-BIOS" class="headerlink" title="3. Enter your machine BIOS"></a>3. Enter your machine BIOS</h3><p>My computer is made from KNOKA.</p>
<p><img data-src="/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/2.PNG"></p>
<p><img data-src="/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/3.PNG"></p>
<p>The way to enter its BIOS is to <strong>KEEP CLICKING “Delete” BUTTON UNTIL BIOS SHOW UP</strong>.</p>
<p>So, what you should do now is</p>
<ol>
<li>Turn off your machine</li>
<li>Insert your bootable USB stick</li>
<li>Enter BIOS</li>
</ol>
<p>When you finish it, you should see the BIOS (1980s style of GUI 🥸).</p>
<p><img data-src="/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/4.jpeg"></p>
<h3 id="4-Boot-from-your-USB-stick"><a href="#4-Boot-from-your-USB-stick" class="headerlink" title="4. Boot from your USB stick"></a>4. Boot from your USB stick</h3><p>Selete the USB stick and move to the highest priority (Boot Option #1).</p>
<p><img data-src="/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/5.jpeg"></p>
<h3 id="5-Install-your-Ubuntu"><a href="#5-Install-your-Ubuntu" class="headerlink" title="5. Install your Ubuntu"></a>5. Install your Ubuntu</h3><p>Just do what you want</p>
<h3 id="6-Turn-on-your-Wi-Fi-adapter-optional"><a href="#6-Turn-on-your-Wi-Fi-adapter-optional" class="headerlink" title="6. Turn on your Wi-Fi adapter (optional)"></a>6. Turn on your Wi-Fi adapter (optional)</h3><p>Some times you may find that you can’t use the Wi-Fi after successful installation 🤡, this may be due to the Wi-Fi driver or system first installation. I solved it by the following command.</p>
<p>(Sadly, you need to connect to the Internet first if you want to use Wi-Fi module, like wired connection or wireless network USB)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line"><span class="comment"># then restart your system</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if the script above doesn&#x27;t work then run the following command</span></span><br><span class="line">sudo apt-get install bcmwl-kernel-source</span><br></pre></td></tr></table></figure>

<p>Then, restart your system.</p>
<h3 id="7-Turn-on-your-Ubuntu-Software-optional"><a href="#7-Turn-on-your-Ubuntu-Software-optional" class="headerlink" title="7. Turn on your Ubuntu Software (optional)"></a>7. Turn on your Ubuntu Software (optional)</h3><p>Some times you may find that your Ubuntu Software market is nearly empty 🤡. I solved it by the following command.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">sudo systemctl reboot</span><br></pre></td></tr></table></figure>

<h3 id="8-Ture-on-Chinese-language-optional"><a href="#8-Ture-on-Chinese-language-optional" class="headerlink" title="8. Ture on Chinese language (optional)"></a>8. Ture on Chinese language (optional)</h3><ol>
<li>Setting -&gt; Language and Region -&gt; Manage Installed Languages -&gt; Install &#x2F; Remove Language -&gt; Click Chinese (Simplified), then install whatever it needed</li>
<li>Setting -&gt; Language and Region -&gt; Input Sources -&gt; “+” &gt; Chinses &gt; Chinses (Intelligent Pinyin)</li>
</ol>
<h3 id="9-Enjoy-your-new-Ubuntu-system"><a href="#9-Enjoy-your-new-Ubuntu-system" class="headerlink" title="9. Enjoy your new Ubuntu system!"></a>9. Enjoy your new Ubuntu system!</h3><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>Thanks to the following articles guidance:</p>
<ul>
<li><a href="https://ubuntu.com/tutorials/install-ubuntu-desktop#1-overview">Install Ubuntu desktop</a></li>
<li><a href="https://download.csdn.net/download/weixin_38724663/14048620?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-download-2~default~CTRLIST~Paid-1-14048620-blog-107869060.pc_relevant_3mothn_strategy_and_data_recovery&depth_1-utm_source=distribute.pc_relevant_t0.none-task-download-2~default~CTRLIST~Paid-1-14048620-blog-107869060.pc_relevant_3mothn_strategy_and_data_recovery&utm_relevant_index=1">Ubuntu 20.04 wireless connection</a></li>
<li><a href="https://blog.csdn.net/eidolon_foot/article/details/112942564">Ubuntu 20.04 software market error</a></li>
<li><a href="https://bbs.huaweicloud.com/blogs/283088">Add Chinese into Ubuntu 20.04</a></li>
</ul>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>Linux</tag>
        <tag>BIOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Set Up V2ray Environment On Oracle Free Tier</title>
    <url>/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Learn to use oracle cloud platform</li>
<li>Set up a v2ray environment on linux</li>
</ul>
<span id="more"></span>

<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Apply-for-an-Oracle-Free-Tier"><a href="#1-Apply-for-an-Oracle-Free-Tier" class="headerlink" title="1. Apply for an Oracle Free Tier"></a>1. Apply for an Oracle Free Tier</h3><p>Go to <a href="https://www.oracle.com/au/cloud/free/">the official website</a> to apply for your free cloud server.</p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/1.png"></p>
<p>In order to successfully apply for the free cloud server, you should have your credit card, billing address and your real IP location with you.</p>
<h3 id="2-Create-your-instance"><a href="#2-Create-your-instance" class="headerlink" title="2. Create your instance"></a>2. Create your instance</h3><p>Now you have already successfully applied for an free account and log in to the Oracle cloud interface.</p>
<h4 id="2-1-Click-the-instance"><a href="#2-1-Click-the-instance" class="headerlink" title="2.1 Click the instance"></a>2.1 Click the instance</h4><p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/2.png"></p>
<h4 id="2-2-Create-Instance"><a href="#2-2-Create-Instance" class="headerlink" title="2.2 Create Instance"></a>2.2 Create Instance</h4><p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/3.png"></p>
<p>After you create your instances, you can see them in this page.</p>
<h4 id="2-3-Custom-Initialization"><a href="#2-3-Custom-Initialization" class="headerlink" title="2.3 Custom Initialization"></a>2.3 Custom Initialization</h4><p>You should customize four things in this page.</p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/4.png"></p>
<h5 id="2-3-1-Image-and-shape"><a href="#2-3-1-Image-and-shape" class="headerlink" title="2.3.1 Image and shape"></a>2.3.1 Image and shape</h5><p>Set it as CentOS 7 image</p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/5.png"></p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/6.png"></p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/7.png"></p>
<h5 id="2-3-2-Networking"><a href="#2-3-2-Networking" class="headerlink" title="2.3.2 Networking"></a>2.3.2 Networking</h5><p>It should be your first time to create a network. So just create a new network.</p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/8.png"></p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/9.png"></p>
<h5 id="2-3-3-Add-SSH-keys"><a href="#2-3-3-Add-SSH-keys" class="headerlink" title="2.3.3 Add SSH keys"></a>2.3.3 Add SSH keys</h5><p>Save your private key, which you will use to login your machin by ssh.</p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/10.png"></p>
<p>You can check <a href="https://simonczy.github.io/2023/03/27/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Turn-On-SSH-Service-On-Ubuntu/#8-B-Use-private-key-to-ssh-A">here</a> to learn how to ssh a machine by private key.</p>
<h5 id="2-3-4-Boot-volume"><a href="#2-3-4-Boot-volume" class="headerlink" title="2.3.4 Boot volume"></a>2.3.4 Boot volume</h5><p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/11.png"></p>
<p>After completing the four steps above, you can now create your machine.</p>
<h3 id="3-Machine-detail"><a href="#3-Machine-detail" class="headerlink" title="3. Machine detail"></a>3. Machine detail</h3><p>When your machine is running, you should be able to get its public ip address and user name, which you will use to ssh your cloud server. </p>
<p>And then, you should click the subnet.</p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/12.png"></p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/13.png"></p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/14.png"></p>
<p><img data-src="/2023/04/17/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Set-Up-V2ray-Environment-On-Oracle-Free-Tier/15.png"></p>
<p>And now, you already create your ingress rules.</p>
<h3 id="4-Build-up-your-v2ray-configuration-on-server"><a href="#4-Build-up-your-v2ray-configuration-on-server" class="headerlink" title="4. Build up your v2ray configuration on server"></a>4. Build up your v2ray configuration on server</h3><h4 id="4-1-SSH-your-machine"><a href="#4-1-SSH-your-machine" class="headerlink" title="4.1 SSH your machine"></a>4.1 SSH your machine</h4><p>If you meet some trouble in this step, you can check my <a href="https://simonczy.github.io/tags/SSH/">previous posts</a> about SSH.</p>
<h4 id="4-2-Switch-to-root"><a href="#4-2-Switch-to-root" class="headerlink" title="4.2 Switch to root"></a>4.2 Switch to root</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure>

<h3 id="4-3-Configure-v2ray"><a href="#4-3-Configure-v2ray" class="headerlink" title="4.3 Configure v2ray"></a>4.3 Configure v2ray</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure>

<p>Chooes 1 at the first question, and then keep pressing “Enter”.</p>
<h4 id="4-4-Stop-firewall"><a href="#4-4-Stop-firewall" class="headerlink" title="4.4 Stop firewall"></a>4.4 Stop firewall</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>

<h4 id="4-5-Get-the-link"><a href="#4-5-Get-the-link" class="headerlink" title="4.5 Get the link"></a>4.5 Get the link</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for url</span></span><br><span class="line">v2ray url</span><br><span class="line"></span><br><span class="line"><span class="comment"># or for qr code</span></span><br><span class="line">v2ray qr</span><br></pre></td></tr></table></figure>

<p>Now, you have already finish your work on server.</p>
<h3 id="5-Client"><a href="#5-Client" class="headerlink" title="5. Client"></a>5. Client</h3><p>You should install different clients based on different systems and use the link from <strong><u>4.5</u></strong> you just obtained to use the v2ray service.</p>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>从零搭建Ubuntu 24.04 Server版本</title>
    <url>/2024/06/05/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAUbuntu-24-04-Server%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<p>💡 本文对以下场景有所帮助</p>
<ul>
<li>Ubuntu系统安装</li>
</ul>
<span id="more"></span>

<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>本来去年安装了个ubuntu 20.04 LTS desktop在小主机上，但最近实在越来越卡了，趁着最近有空，干脆给它重装下，重装成ubuntu 24.04 LTS Sever。基本流程都差不多，需要参考的话直接用<a href="/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/">之前的博客</a>就行了，这里就针对一些特殊情况来描述下。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="0-下载ubuntu启动文件"><a href="#0-下载ubuntu启动文件" class="headerlink" title="0. 下载ubuntu启动文件"></a>0. 下载ubuntu启动文件</h3><p>Ubuntu Server的下载链接<a href="https://ubuntu.com/download/server">在此</a>，我直接下载的最新的24.04 LTS</p>
<h3 id="1-相安无事的操作"><a href="#1-相安无事的操作" class="headerlink" title="1. 相安无事的操作"></a>1. 相安无事的操作</h3><p>接下来的操作无非就是</p>
<ul>
<li>iso文件烧录到u盘中</li>
<li>u盘插入主机</li>
<li>主机进入BIOS（不同设备的切换方式不一致，请咨询对应设备的官方客服或技术人员）</li>
<li>从u盘启动系统</li>
</ul>
<p>剩下的就是按照自己的习惯来配置ubuntu，基本可以全程采取默认配置，以下介绍一下需要注意的几个点</p>
<h3 id="2-设置Ubuntu的镜像地址"><a href="#2-设置Ubuntu的镜像地址" class="headerlink" title="2. 设置Ubuntu的镜像地址"></a>2. 设置Ubuntu的镜像地址</h3><p>设置成阿里云地址即可</p>
<p><img data-src="/2024/06/05/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAUbuntu-24-04-Server%E7%89%88%E6%9C%AC/1.png"></p>
<h3 id="3-SSH配置"><a href="#3-SSH配置" class="headerlink" title="3. SSH配置"></a>3. SSH配置</h3><p>默认会询问需不需要安装OpenSSH包，毕竟server版本基本都是用来远程登录的，这里直接选择安装即可。</p>
<p><img data-src="/2024/06/05/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAUbuntu-24-04-Server%E7%89%88%E6%9C%AC/2.png"></p>
<p>由于没有提供任何密钥信息，此时ssh的认证方式则是通过用户名和密码进行验证。</p>
<p>如果你想关闭ssh的密码登录功能，那只需要修改Import SSH identity为Yes，然后选择Github或者Launchpad账户。这个操作会将账户上记录的公钥作为本机的认证手段，因此只有持有与账户上的公钥对应的私钥的设备才能连接上本机。</p>
<h3 id="4-相安无事的操作"><a href="#4-相安无事的操作" class="headerlink" title="4. 相安无事的操作"></a>4. 相安无事的操作</h3><p>剩下就一路点点点过去，最后重启的时候，显示屏会提醒让拔出来u盘，拔出来之后就可以正常运行了。</p>
<p>由于我们配置的是server版本，因此本机只要通电，系统直接就允许远程ssh登陆了。</p>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>Linux</tag>
        <tag>BIOS</tag>
      </tags>
  </entry>
  <entry>
    <title>A Web 502 Error Caused By A Docker Upgrade</title>
    <url>/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Handle Docker or DevOps Error</li>
<li>Server Down</li>
<li>Rookie DevOps</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>The docker image is upgraded. And I need to deal with the error it causes.</p>
<h3 id="Framework"><a href="#Framework" class="headerlink" title="Framework"></a>Framework</h3><ul>
<li>Amazon Cloud: EC2 Instance</li>
<li>Gitlab: Pipeline</li>
<li>Dockerhub</li>
</ul>
<h2 id="Operation-amp-Problem"><a href="#Operation-amp-Problem" class="headerlink" title="Operation &amp; Problem"></a>Operation &amp; Problem</h2><h3 id="1-Upgrade-the-docker-image"><a href="#1-Upgrade-the-docker-image" class="headerlink" title="1. Upgrade the docker image"></a>1. Upgrade the docker image</h3><p>Update the template in EC2 instance. Deploy a new environment by GitLab.</p>
<h3 id="2-502-Error"><a href="#2-502-Error" class="headerlink" title="2. 502 Error"></a>2. 502 Error</h3><p>Yeah…it causes 502 error obviously.</p>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/1.png"></p>
<h3 id="3-Check-the-docker-container"><a href="#3-Check-the-docker-container" class="headerlink" title="3. Check the docker container"></a>3. Check the docker container</h3><p>In fact, it took quite a bit of time to jump from the previous step to this one. </p>
<p>At first, I mistakenly thought it was due to a network configuration error, so I kept checking the template and also the configuration file. But in fact, the 502 error can be interpreted as a service provisioning failure, and therefore incoming requests cannot be accessed.</p>
<p>So the first step of troubleshooting should be to check whether the service is started properly, and then start the rest of the troubleshooting later.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check all the containers</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<p>As we can see from the following picture, the containers started and exited many times in about 3min. It means there are some error when waking up the image</p>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/2.png"></p>
<h3 id="4-Track-error-information-exitcode-126"><a href="#4-Track-error-information-exitcode-126" class="headerlink" title="4. Track error information - exitcode 126"></a>4. Track error information - exitcode 126</h3><p>Get the basic information from container.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect ContainerID</span><br></pre></td></tr></table></figure>

<p>There are some information we may be interested in.</p>
<ul>
<li>ExitCode: The reason why a container exit. You can check <a href="https://komodor.com/learn/exit-codes-in-containers-and-kubernetes-the-complete-guide/">this page</a> for more specific exitcode. It is always a error summary. For 126,  it means that a command used in the container specification could not be invoked.</li>
<li>LogPath: The location where docker containers save their log</li>
</ul>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/3.png"></p>
<p>Print out the log shown on the inspect, which is excatly a great example for <strong>exitcode-126</strong>.</p>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/4.png"></p>
<h3 id="5-Upgrade-docker-image-to-use-user-“odoo”-to-install-pyenv"><a href="#5-Upgrade-docker-image-to-use-user-“odoo”-to-install-pyenv" class="headerlink" title="5. Upgrade docker image - to use user “odoo” to install pyenv"></a>5. Upgrade docker image - to use user “odoo” to install pyenv</h3><p>As you can see from the <a href="https://simonczy.github.io/2023/03/08/odoo%E7%B3%BB%E5%88%97/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/#6-Change-to-user-%22odoo%22">previous post</a>, the error is introduced at that time.</p>
<p>The following dockerfile sentence will install pyenv into &#x2F;root&#x2F;, which results in that user “odoo” can not call python3.8.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment"># omit some sentences</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install pyenv, install python3.8.15 and make it global</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash &amp;&amp; <span class="built_in">printf</span> <span class="string">&quot;export PATH=\&quot;/root/.pyenv/bin:\$PATH\&quot;\neval \&quot;\$(pyenv init -)\&quot;\neval \&quot;\$(pyenv virtualenv-init -)\&quot;\n\nexport LC_ALL=C.UTF-8\nexport LANG=C.UTF-8&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="built_in">source</span> ~/.bashrc &amp;&amp; pyenv install 3.8.15 &amp;&amp; pyenv global 3.8.15</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># omit some sentences</span></span><br></pre></td></tr></table></figure>

<p>Therefore, after lots of unsuccessful trial, I choose to let odoo install the pyenv.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment"># omit some sentences</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use user &quot;odoo&quot; install pyenv, install python3.8.15 and make it global</span></span><br><span class="line"><span class="keyword">USER</span> odoo</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;export PYENV_ROOT=\&quot;\$HOME/.pyenv\&quot;\ncommand -v pyenv &gt;/dev/null || export PATH=\&quot;\$PYENV_ROOT/bin:\$PATH\&quot;\neval \&quot;\$(pyenv init -)\&quot;\neval \&quot;\$(pyenv virtualenv-init -)\&quot;\n&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="built_in">source</span> ~/.bashrc &amp;&amp; pyenv install 3.8.15 &amp;&amp; pyenv global 3.8.15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"><span class="comment"># omit some sentences</span></span><br></pre></td></tr></table></figure>

<h3 id="6-Upload-docker-image-to-docker-hub"><a href="#6-Upload-docker-image-to-docker-hub" class="headerlink" title="6. Upload docker image to docker hub"></a>6. Upload docker image to docker hub</h3><p>After downloading lots of third-party libraries, the size of image increased to almost 10GB.</p>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/5.png"></p>
<p>There’s not much more to say. In the future, I will only recommend using the command line for uploading docker images that are too large, which took me 5 hours to learn this lesson.</p>
<h3 id="7-502-Error"><a href="#7-502-Error" class="headerlink" title="7. 502 Error"></a>7. 502 Error</h3><p>🧘‍♀️ Take it easy.</p>
<h3 id="8-Fail-to-download-docker-image-in-server"><a href="#8-Fail-to-download-docker-image-in-server" class="headerlink" title="8. Fail to download docker image in server"></a>8. Fail to download docker image in server</h3><p>Though I click the “Run” button in the pipeline, I still can not find any containers on the server.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check new version container</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># check new version image</span></span><br><span class="line">docker image <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>After waiting for a long time, I still can not see the new version image. At this time, you can download it by yourself.</p>
<p>BTW, The way for the server to download a docker image:</p>
<ul>
<li>check if the docker image exist locally<ul>
<li>if exist, check the docker hub if the version updated (imageID)<ul>
<li>if updated, pull the new version into local</li>
<li>if not updated, just use current one</li>
</ul>
</li>
<li>if not exist, pull the new version into local</li>
</ul>
</li>
</ul>
<h3 id="9-502-Error"><a href="#9-502-Error" class="headerlink" title="9. 502 Error"></a>9. 502 Error</h3><p>🧘‍♀️</p>
<h3 id="10-Track-error-information-exitcode-127"><a href="#10-Track-error-information-exitcode-127" class="headerlink" title="10. Track error information - exitcode 127"></a>10. Track error information - exitcode 127</h3><p>Here is the log</p>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/6.png"></p>
<p>Here is some python feature. Some .py files will put “#!&#x2F;usr&#x2F;bin&#x2F;env python3” in their first line. Therefore, the file can be run by system python3 parser.</p>
<p>According to the log, there seems to be no python in this image, which is completely different from my local environment.</p>
<p>As the docker is run by the command “&#x2F;entrypoint.sh odoo”, I need to debug by putting some output in the entrypoint.sh to see what is going on.</p>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/7.png"></p>
<p>Here comes the result.</p>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/8.png"></p>
<p>Fxck, it takes me about 4 hours. And the reason is that the .yaml file of this image change the folder.</p>
<p><img data-src="/2023/03/16/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/A-Web-502-Error-Caused-By-A-Docker-Upgrade/9.png"></p>
<p>Then just need to update the docker to change the pyenv location.</p>
<p>After reading the pyenv-installer script, I set up the env variable $PYENV_ROOT by dockerfile. And finally, everything works well!</p>
<h3 id="11-Winner-Winner-Chicken-Dinner"><a href="#11-Winner-Winner-Chicken-Dinner" class="headerlink" title="11. Winner Winner Chicken Dinner"></a>11. Winner Winner Chicken Dinner</h3><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://komodor.com/learn/exit-codes-in-containers-and-kubernetes-the-complete-guide/">Exit Codes In Containers &amp; Kubernetes – The Complete Guide</a></li>
</ul>
]]></content>
      <tags>
        <tag>DevOps</tag>
        <tag>Troubleshoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Steam Needs to Be Online to Update</title>
    <url>/2023/05/22/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/Steam-Needs-to-Be-Online-to-Update/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Handle Steam Update Problem</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>One day after I reinstalled my steam on my Mac, my steam couldn’t be opened anymore 😭. Every time I try to start my steam, it will show that it need to update and after a few minutes it pop up the error message like this.</p>
<p><img data-src="/2023/05/22/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/Steam-Needs-to-Be-Online-to-Update/1.png"></p>
<p>You may want to know my version information:</p>
<ul>
<li><p>MacOS 13.1.1</p>
</li>
<li><p>Steam (downloaded from official website on 2023&#x2F;05&#x2F;21)</p>
</li>
</ul>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="0-Preparation"><a href="#0-Preparation" class="headerlink" title="0. Preparation"></a>0. Preparation</h3><p>Before delving into my personal solution, I’d like to introduce some general troubleshooting approaches. This will help you identify any basic errors that might be causing the update failure before diving deeper into the issue.</p>
<ul>
<li><p>Check &#x2F; change your internet connection (wired, wireless, mobile hotspot)</p>
</li>
<li><p>Check &#x2F; change DNS configuration</p>
</li>
<li><p>Enable &#x2F; disable any VPN or proxy</p>
</li>
<li><p>Verify <a href="https://steamcommunity.com/">Steam server</a> status</p>
</li>
<li><p>Restart Steam &#x2F; computer</p>
</li>
<li><p>Reinstall Steam</p>
</li>
</ul>
<p>If you have already tried the above-mentioned methods and none of them have resolved your issue, then it is essential for you to go through the following content.</p>
<h3 id="1-My-solution"><a href="#1-My-solution" class="headerlink" title="1. My solution"></a>1. My solution</h3><p>Just like any other software, Steam relies on running a local update script to update itself. My solution will be to first locate this update script, then manually execute the update function to see what is going wrong, and finally resolve the issue.</p>
<h3 id="2-Find-out-the-steam-update-script"><a href="#2-Find-out-the-steam-update-script" class="headerlink" title="2. Find out the steam update script"></a>2. Find out the steam update script</h3><p>When our approach is correct, we usually see results quickly. Let’s explore the executable files in the Steam package content (There won’t be too many files in this folder because you just install it but haven’t updated yet).</p>
<p>Here is the update file I found.</p>
<p><code>Application -&gt; Steam -&gt; Contents -&gt; MacOS -&gt; steam_osx</code></p>
<h3 id="3-Run-the-update-script-manually"><a href="#3-Run-the-update-script-manually" class="headerlink" title="3. Run the update script manually"></a>3. Run the update script manually</h3><p>You just need to double click the steam_osx file, which is a unix executable file.</p>
<p><img data-src="/2023/05/22/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/Steam-Needs-to-Be-Online-to-Update/2.png"></p>
<p>Here come the output message.</p>
<p><img data-src="/2023/05/22/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/Steam-Needs-to-Be-Online-to-Update/3.png"></p>
<p>As you can see, it shows that steam can not download something from <a href="http://media.steampowered.com/client/steam_client_osx">http://media.steampowered.com/client/steam_client_osx</a></p>
<p>Then I tried accessing the link in my browser, and indeed, my computer couldn’t access that link, but my mobile phone could.</p>
<p>Well, the we have identified the issue, and now the remaining task is to determine how to resolve it.</p>
<h3 id="4-Resolve-the-network-connection-issue"><a href="#4-Resolve-the-network-connection-issue" class="headerlink" title="4. Resolve the network connection issue"></a>4. Resolve the network connection issue</h3><p>It should be noted that my phones can be connected, but my computers cannot, which means there should be some configuration error in my computer.</p>
<p>Because I had already checked DNS configuration in step 0 before. Therefore, I am now inclined towards the incorrect configuration of the host file. </p>
<p>Before I move on, please let me introduce some details about host file.</p>
<h4 id="What-is-host"><a href="#What-is-host" class="headerlink" title="What is host"></a>What is host</h4><p><em>A system’s hosts file maps hostnames to IP addresses. Users can override default DNS information for a given domain and specify their IP addresses.</em></p>
<p>Let us use vim to edit the host file. The host file path in my mac is:</p>
<p><code>/etc/hosts</code></p>
<p>Here comes the problem (I have already add “# “ at the beginning of each line here to fix the problem, so what you see is a problem-fixed version. You can just remove the “# “ at the beginning of each line to reproduce the problem).</p>
<p><img data-src="/2023/05/22/%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/Steam-Needs-to-Be-Online-to-Update/4.png"></p>
<h3 id="5-Conclusion"><a href="#5-Conclusion" class="headerlink" title="5. Conclusion"></a>5. Conclusion</h3><p>On a previous day, for some reason, I added this batch of strategies to modify the host for Steam. But at a certain point in time, these strategies no longer apply, and I forgot to make adjustments to the host file. Therefore, after reinstalling the Steam, every time the program tries to perform the “Update Steam” operation, it will be redirected to an unavailable IP (74.126.135.131), which leads to the failure of “Update Steam” operation.</p>
]]></content>
      <tags>
        <tag>MacOS</tag>
        <tag>Troubleshoot</tag>
        <tag>Nerwork</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Docker On Ubuntu</title>
    <url>/2023/04/15/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Install-Docker-On-Ubuntu/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Install docker  on your ubuntu</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>OS: Ubuntu 20.04</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Install-docker-and-docker-compose"><a href="#1-Install-docker-and-docker-compose" class="headerlink" title="1. Install docker and docker-compose"></a>1. Install <a href="https://docs.docker.com/get-docker/">docker</a> and <a href="https://docs.docker.com/compose/install/">docker-compose</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.docker.com | sh</span><br></pre></td></tr></table></figure>

<h3 id="2-Add-current-user-to-docker-group"><a href="#2-Add-current-user-to-docker-group" class="headerlink" title="2. Add current user to docker group"></a>2. Add current user to docker group</h3><p>and you will not need to add sudo when you use docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://docs.rocket.chat/deploy/prepare-for-your-deployment/rapid-deployment-methods/docker-and-docker-compose">Docker &amp; Docker Compose</a></p>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Install FTP Service On Ubuntu 20.04</title>
    <url>/2023/03/23/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Install-FTP-Service-On-Ubuntu-20-04/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>FTP</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>To set up a local FTP server.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Install-FTP"><a href="#1-Install-FTP" class="headerlink" title="1. Install FTP"></a>1. Install FTP</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="2-Configure-FTP"><a href="#2-Configure-FTP" class="headerlink" title="2. Configure FTP"></a>2. Configure FTP</h3><p>Keep a good habit: backup every file that you may destory</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/vsftpd.conf /etc/vsftpd.conf.bak</span><br></pre></td></tr></table></figure>

<p>Edit FTP configuration</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/vsftpd.conf</span><br></pre></td></tr></table></figure>

<p>Here is my configuration</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Example config file /etc/vsftpd.conf</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The default compiled in settings are fairly paranoid. This sample file</span></span><br><span class="line"><span class="comment"># loosens things up a bit, to make the ftp daemon more usable.</span></span><br><span class="line"><span class="comment"># Please see vsftpd.conf.5 for all compiled in defaults.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</span></span><br><span class="line"><span class="comment"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd&#x27;s</span></span><br><span class="line"><span class="comment"># capabilities.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Run standalone?  vsftpd can run either from an inetd or as a standalone</span></span><br><span class="line"><span class="comment"># daemon started from an initscript.</span></span><br><span class="line">listen=NO</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This directive enables listening on IPv6 sockets. By default, listening</span></span><br><span class="line"><span class="comment"># on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6</span></span><br><span class="line"><span class="comment"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span></span><br><span class="line"><span class="comment"># sockets. If you want that (perhaps because you want to listen on specific</span></span><br><span class="line"><span class="comment"># addresses) then you must run two copies of vsftpd with two configuration</span></span><br><span class="line"><span class="comment"># files.</span></span><br><span class="line">listen_ipv6=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Allow anonymous FTP? (Disabled by default).</span></span><br><span class="line">anonymous_enable=NO</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this to allow local users to log in.</span></span><br><span class="line">local_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this to enable any form of FTP write command.</span></span><br><span class="line">write_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Default umask for local users is 077. You may wish to change this to 022,</span></span><br><span class="line"><span class="comment"># if your users expect that (022 is used by most other ftpd&#x27;s)</span></span><br><span class="line">local_umask=022</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this to allow the anonymous FTP user to upload files. This only</span></span><br><span class="line"><span class="comment"># has an effect if the above global write enable is activated. Also, you will</span></span><br><span class="line"><span class="comment"># obviously need to create a directory writable by the FTP user.</span></span><br><span class="line"><span class="comment">#anon_upload_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this if you want the anonymous FTP user to be able to create</span></span><br><span class="line"><span class="comment"># new directories.</span></span><br><span class="line"><span class="comment">#anon_mkdir_write_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Activate directory messages - messages given to remote users when they</span></span><br><span class="line"><span class="comment"># go into a certain directory.</span></span><br><span class="line">dirmessage_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If enabled, vsftpd will display directory listings with the time</span></span><br><span class="line"><span class="comment"># in  your  local  time  zone.  The default is to display GMT. The</span></span><br><span class="line"><span class="comment"># times returned by the MDTM FTP command are also affected by this</span></span><br><span class="line"><span class="comment"># option.</span></span><br><span class="line">use_localtime=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Activate logging of uploads/downloads.</span></span><br><span class="line">xferlog_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Make sure PORT transfer connections originate from port 20 (ftp-data).</span></span><br><span class="line">connect_from_port_20=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you want, you can arrange for uploaded anonymous files to be owned by</span></span><br><span class="line"><span class="comment"># a different user. Note! Using &quot;root&quot; for uploaded files is not</span></span><br><span class="line"><span class="comment"># recommended!</span></span><br><span class="line"><span class="comment">#chown_uploads=YES</span></span><br><span class="line"><span class="comment">#chown_username=whoever</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may override where the log file goes if you like. The default is shown</span></span><br><span class="line"><span class="comment"># below.</span></span><br><span class="line">xferlog_file=/var/log/vsftpd.log</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you want, you can have your log file in standard ftpd xferlog format.</span></span><br><span class="line"><span class="comment"># Note that the default log file location is /var/log/xferlog in this case.</span></span><br><span class="line">xferlog_std_format=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may change the default value for timing out an idle session.</span></span><br><span class="line"><span class="comment">#idle_session_timeout=600</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may change the default value for timing out a data connection.</span></span><br><span class="line"><span class="comment">#data_connection_timeout=120</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is recommended that you define on your system a unique user which the</span></span><br><span class="line"><span class="comment"># ftp server can use as a totally isolated and unprivileged user.</span></span><br><span class="line"><span class="comment">#nopriv_user=ftpsecure</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Enable this and the server will recognise asynchronous ABOR requests. Not</span></span><br><span class="line"><span class="comment"># recommended for security (the code is non-trivial). Not enabling it,</span></span><br><span class="line"><span class="comment"># however, may confuse older FTP clients.</span></span><br><span class="line"><span class="comment">#async_abor_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default the server will pretend to allow ASCII mode but in fact ignore</span></span><br><span class="line"><span class="comment"># the request. Turn on the below options to have the server actually do ASCII</span></span><br><span class="line"><span class="comment"># mangling on files when in ASCII mode.</span></span><br><span class="line"><span class="comment"># Beware that on some FTP servers, ASCII support allows a denial of service</span></span><br><span class="line"><span class="comment"># attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd</span></span><br><span class="line"><span class="comment"># predicted this attack and has always been safe, reporting the size of the</span></span><br><span class="line"><span class="comment"># raw file.</span></span><br><span class="line"><span class="comment"># ASCII mangling is a horrible feature of the protocol.</span></span><br><span class="line"><span class="comment">#ascii_upload_enable=YES</span></span><br><span class="line"><span class="comment">#ascii_download_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may fully customise the login banner string:</span></span><br><span class="line">ftpd_banner=Welcome to Simon Ubuntu FTP service.</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</span></span><br><span class="line"><span class="comment"># useful for combatting certain DoS attacks.</span></span><br><span class="line"><span class="comment">#deny_email_enable=YES</span></span><br><span class="line"><span class="comment"># (default follows)</span></span><br><span class="line"><span class="comment">#banned_email_file=/etc/vsftpd.banned_emails</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may restrict local users to their home directories.  See the FAQ for</span></span><br><span class="line"><span class="comment"># the possible risks in this before using chroot_local_user or</span></span><br><span class="line"><span class="comment"># chroot_list_enable below.</span></span><br><span class="line"><span class="comment">#chroot_local_user=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may specify an explicit list of local users to chroot() to their home</span></span><br><span class="line"><span class="comment"># directory. If chroot_local_user is YES, then this list becomes a list of</span></span><br><span class="line"><span class="comment"># users to NOT chroot().</span></span><br><span class="line"><span class="comment"># (Warning! chroot&#x27;ing can be very dangerous. If using chroot, make sure that</span></span><br><span class="line"><span class="comment"># the user does not have write access to the top level directory within the</span></span><br><span class="line"><span class="comment"># chroot)</span></span><br><span class="line"><span class="comment"># chroot_local_user=YES</span></span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"><span class="comment"># (default follows)</span></span><br><span class="line">chroot_list_file=/etc/vsftpd.chroot_list</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by</span></span><br><span class="line"><span class="comment"># default to avoid remote users being able to cause excessive I/O on large</span></span><br><span class="line"><span class="comment"># sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume</span></span><br><span class="line"><span class="comment"># the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.</span></span><br><span class="line"><span class="comment">#ls_recurse_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Customization</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Some of vsftpd&#x27;s settings don&#x27;t fit the filesystem layout by</span></span><br><span class="line"><span class="comment"># default.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This option should be the name of a directory which is empty.  Also, the</span></span><br><span class="line"><span class="comment"># directory should not be writable by the ftp user. This directory is used</span></span><br><span class="line"><span class="comment"># as a secure chroot() jail at times vsftpd does not require filesystem</span></span><br><span class="line"><span class="comment"># access.</span></span><br><span class="line">secure_chroot_dir=/var/run/vsftpd/empty</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This string is the name of the PAM service vsftpd will use.</span></span><br><span class="line">pam_service_name=ftp</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This option specifies the location of the RSA certificate to use for SSL</span></span><br><span class="line"><span class="comment"># encrypted connections.</span></span><br><span class="line">rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem</span><br><span class="line">rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key</span><br><span class="line">ssl_enable=NO</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Uncomment this to indicate that vsftpd use a utf8 filesystem.</span></span><br><span class="line">utf8_filesystem=YES</span><br><span class="line">userlist_enable=YES</span><br><span class="line">userlist_deny=NO</span><br><span class="line">userlist_file=/etc/vsftpd.user_list</span><br><span class="line">allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure>

<h3 id="3-Add-FTP-login-user"><a href="#3-Add-FTP-login-user" class="headerlink" title="3. Add FTP login user"></a>3. Add FTP login user</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add ftp folder</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> /home/ftpdir</span><br><span class="line"></span><br><span class="line"><span class="comment"># add ftp user (to bind user folder and login way)</span></span><br><span class="line">sudo useradd -d /home/ftpdir -s /bin/bash ftpuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># set user password</span></span><br><span class="line">sudo passwd ftpuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># set ftp folder user group</span></span><br><span class="line">sudo <span class="built_in">chown</span> ftpuser:ftpuser /home/ftpdir</span><br><span class="line"></span><br><span class="line"><span class="comment"># add ftpuser into user list</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ftpuser&quot;</span> &gt;&gt; /etc/vsftpd.user_list</span><br><span class="line"></span><br><span class="line"><span class="comment"># add ftpuser into chroot list</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ftpuser&quot;</span> &gt;&gt; /etc/vsftpd.chroot_list</span><br></pre></td></tr></table></figure>

<h3 id="4-Restart-FTP-server"><a href="#4-Restart-FTP-server" class="headerlink" title="4. Restart FTP server"></a>4. Restart FTP server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service vsftpd restart</span><br></pre></td></tr></table></figure>

<h3 id="5-Test-if-FTP-service-available"><a href="#5-Test-if-FTP-service-available" class="headerlink" title="5. Test if FTP service available"></a>5. Test if FTP service available</h3><h4 id="Local-machine"><a href="#Local-machine" class="headerlink" title="Local machine"></a>Local machine</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ftp localhost</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/23/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Install-FTP-Service-On-Ubuntu-20-04/1.png"></p>
<h4 id="Local-network"><a href="#Local-network" class="headerlink" title="Local network"></a>Local network</h4><p><img data-src="/2023/03/23/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Install-FTP-Service-On-Ubuntu-20-04/2.png"></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="/(2023/03/23/Install-FTP-Service-On-Ubuntu-20-04/vsftpd.conf">vsftpd.conf download link</a></p>
<p>Thanks to the following articles guidance:</p>
<ul>
<li><a href="https://blog.csdn.net/soslinken/article/details/79304076">Ubuntu FTP Server</a></li>
</ul>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac SSH Amazon Using Pem</title>
    <url>/2023/03/09/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Mac-SSH-Amazon-Using-Pem/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Use .pem file to ssh</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>The title has said enough</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Put-pem-file-in-folder-XXX"><a href="#1-Put-pem-file-in-folder-XXX" class="headerlink" title="1. Put .pem file in folder XXX"></a>1. Put .pem file in folder XXX</h3><h3 id="2-Open-terminal-in-folder-XXX"><a href="#2-Open-terminal-in-folder-XXX" class="headerlink" title="2. Open terminal in folder XXX"></a>2. Open terminal in folder XXX</h3><h3 id="3-Run-SSH-command-to-connect"><a href="#3-Run-SSH-command-to-connect" class="headerlink" title="3. Run SSH command to connect"></a>3. Run SSH command to connect</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -i <span class="string">&quot;key.pem&quot;</span> username@ipaddress</span><br></pre></td></tr></table></figure>

<h3 id="4-Permission-error-probably"><a href="#4-Permission-error-probably" class="headerlink" title="4. Permission error (probably)"></a>4. Permission error (probably)</h3><p><img data-src="/2023/03/09/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Mac-SSH-Amazon-Using-Pem/1.png"></p>
<p>What you need to do is to set up a suitable file permission (0600).</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 0600 key.pem</span><br></pre></td></tr></table></figure>

<p>Then run the command given in step 3. And this time there is no error message.</p>
<h3 id="5-If-you-want-to-add-pem-file-into-your-system…"><a href="#5-If-you-want-to-add-pem-file-into-your-system…" class="headerlink" title="5. If you want to add .pem file into your system…"></a>5. If you want to add .pem file into your system…</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-add -K key.pem</span><br><span class="line">ssh username@ipaddress</span><br><span class="line"></span><br><span class="line"><span class="comment"># however, in this way you need to do it again when you turn off your machine</span></span><br></pre></td></tr></table></figure>

<p>So, are there any ways that can elegantly <strong>solve this problem all at once</strong>?</p>
<p>Sure! <strong>Check <a href="https://simonczy.github.io/2023/03/27/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Turn-On-SSH-Service-On-Ubuntu/#9-Add-private-into-system-in-B">here</a>!</strong></p>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>MacOS</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>NEXT主题博客图片引用的通用解决方案</title>
    <url>/2024/06/05/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/NEXT%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E7%9A%84%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p>💡 本文对以下场景有所帮助</p>
<ul>
<li>适用于NEXT主题的博客图片引用方式</li>
</ul>
<span id="more"></span>

<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>写博客的时候，图片引用这里踩了不少坑，现在总结一下。</p>
<h2 id="时间顺序"><a href="#时间顺序" class="headerlink" title="时间顺序"></a>时间顺序</h2><h3 id="1-最基本的引用"><a href="#1-最基本的引用" class="headerlink" title="1. 最基本的引用"></a>1. 最基本的引用</h3><p>在博客中使用以下方式可以对图片进行引用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](/2024/06/05/维修报告/NEXT主题博客图片引用的通用解决方案/1.png)</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<p><img data-src="/2024/06/05/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/NEXT%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E7%9A%84%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/1.png"></p>
<p>推荐使用Typora+Snipaste，直接在markdown复制过来即可将图片复制到对应的文件夹，不需要修改任何的文本内容。</p>
<p>如果你在hexo new “博客名称”的时候没有创建对应的文件夹，那你需要要将_config.yml中的post_asset_folder设置成true</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>

<h3 id="2-博客展示"><a href="#2-博客展示" class="headerlink" title="2. 博客展示"></a>2. 博客展示</h3><p>这种展示方式虽然能够在本地展示图片，但是在执行hexo s或者hexo d运行的时候，会导致显示图片加载失败。这是因为在最终部署网站的时候，博客是根据创建时间进行去对每一篇post进行分类。</p>
<p>因此，如果你希望能够在网站界面上显示的话，以当前的博客为例，这篇博客的创建日期是2024年6月5号，并且它的路径在”&#x2F;项目名称&#x2F;source&#x2F;_posts”下面，那你的图片路径应该修改成以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](/2024/06/05/NEXT主题博客图片引用的通用解决方案/1.png)</span><br></pre></td></tr></table></figure>

<h3 id="3-层级结构"><a href="#3-层级结构" class="headerlink" title="3. 层级结构"></a>3. 层级结构</h3><p>由于文章越来越多，我们需要对文件的路径进行管理。为了保证图片能够正常引用，我们需要将博客本身（md文件）和其对应的文件夹放在同一个路径下面。</p>
<p>一个合理的层级结构如下所示，这里覆盖了所有的层次结构，分别是不嵌套、一层嵌套和多层嵌套。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜  test tree</span><br><span class="line">.</span><br><span class="line">└── source</span><br><span class="line">    └── _posts</span><br><span class="line">        ├── 在MacOS删除Word中的Mendeley</span><br><span class="line">        │   ├── 1.png</span><br><span class="line">        │   ├── 2.png</span><br><span class="line">        │   ├── 3.png</span><br><span class="line">        │   ├── 4.png</span><br><span class="line">        │   └── 5.png</span><br><span class="line">        ├── 在MacOS删除Word中的Mendeley.md</span><br><span class="line">        └── 小玩具</span><br><span class="line">            ├── Create-Your-Own-Discord-Bot</span><br><span class="line">            │   ├── 1.png</span><br><span class="line">            │   ├── 10.png</span><br><span class="line">            │   ├── 2.png</span><br><span class="line">            │   ├── 3.png</span><br><span class="line">            │   ├── 4.png</span><br><span class="line">            │   ├── 5.png</span><br><span class="line">            │   ├── 6.png</span><br><span class="line">            │   ├── 7.png</span><br><span class="line">            │   ├── 8.png</span><br><span class="line">            │   └── 9.png</span><br><span class="line">            ├── Create-Your-Own-Discord-Bot.md</span><br><span class="line">            ├── Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8</span><br><span class="line">            │   ├── 1.png</span><br><span class="line">            │   ├── 2.png</span><br><span class="line">            │   ├── 3.png</span><br><span class="line">            │   ├── Dockerfile</span><br><span class="line">            │   └── requirements.txt</span><br><span class="line">            ├── Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8.md</span><br><span class="line">            └── 大乐趣</span><br><span class="line">                ├── A-Web-502-Error-Caused-By-A-Docker-Upgrade</span><br><span class="line">                │   ├── 1.png</span><br><span class="line">                │   ├── 2.png</span><br><span class="line">                │   ├── 3.png</span><br><span class="line">                │   ├── 4.png</span><br><span class="line">                │   ├── 5.png</span><br><span class="line">                │   ├── 6.png</span><br><span class="line">                │   ├── 7.png</span><br><span class="line">                │   ├── 8.png</span><br><span class="line">                │   └── 9.png</span><br><span class="line">                └── A-Web-502-Error-Caused-By-A-Docker-Upgrade.md</span><br><span class="line"></span><br><span class="line">9 directories, 33 files</span><br><span class="line">➜  test </span><br></pre></td></tr></table></figure>

<p>不同嵌套结构下的图片引用的路径也需要做相应的修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">File: ./source/_posts/在MacOS删除Word中的Mendeley.md</span><br><span class="line">![](/2024/01/26/在MacOS删除Word中的Mendeley/1.png)</span><br><span class="line"></span><br><span class="line">File: ./source/_posts/小玩具/Create-Your-Own-Discord-Bot.md</span><br><span class="line">![](/2023/04/17/小玩具/Create-Your-Own-Discord-Bot/1.png)</span><br><span class="line"></span><br><span class="line">File: ./source/_posts/小玩具/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8.md</span><br><span class="line">![](/2023/03/08/小玩具/Upgrade-Official-Odoo12-Image-From-py3-5-To-py3-8/1.png)</span><br><span class="line"></span><br><span class="line">File: ./source/_posts/小玩具/大乐趣/A-Web-502-Error-Caused-By-A-Docker-Upgrade.md</span><br><span class="line">![](/2023/03/16/小玩具/大乐趣/A-Web-502-Error-Caused-By-A-Docker-Upgrade/1.png)</span><br></pre></td></tr></table></figure>

<h3 id="4-图片本地引用地址和部署地址的切换"><a href="#4-图片本地引用地址和部署地址的切换" class="headerlink" title="4. 图片本地引用地址和部署地址的切换"></a>4. 图片本地引用地址和部署地址的切换</h3><p>我们需要在本地写博客的时候显示图片，又需要在部署的时候显示图片，这就涉及到不同场景下图片引用地址之间的转变。</p>
<p>在这里，我编写了一个python的转变脚本，通过制定不同场景的参数，就能够实现图片引用地址的转变。转变效果如下所示。</p>
<p><img data-src="/2024/06/05/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/NEXT%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E7%9A%84%E9%80%9A%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/2.png"></p>
<p>代码如下所示</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Author: Simon</span></span><br><span class="line"><span class="string">Date: 2024-01-26 01:27:57</span></span><br><span class="line"><span class="string">LastEditors: Simon</span></span><br><span class="line"><span class="string">LastEditTime: 2024-06-05 23:24:57</span></span><br><span class="line"><span class="string">Description: update blog picture address according to the situation</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_and_replace_images</span>(<span class="params">directory, action</span>):</span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(directory):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> file.endswith(<span class="string">&quot;.md&quot;</span>):</span><br><span class="line">                file_path = os.path.join(root, file)</span><br><span class="line">                process_file(file_path, action)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_file</span>(<span class="params">file_path, action</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        content = file.readlines()</span><br><span class="line"></span><br><span class="line">    relative_dir = os.path.dirname(os.path.relpath(file_path, start=<span class="string">&#x27;./source/_posts&#x27;</span>))</span><br><span class="line">    blog_name = os.path.splitext(os.path.basename(file_path))[<span class="number">0</span>]</span><br><span class="line">    date_line = <span class="built_in">next</span>((line <span class="keyword">for</span> line <span class="keyword">in</span> content <span class="keyword">if</span> line.startswith(<span class="string">&#x27;date: &#x27;</span>)), <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">if</span> date_line:</span><br><span class="line">        creation_date = extract_date(date_line)</span><br><span class="line">        modified_content, changes_made, changes_detail = modify_content(content, action, blog_name, creation_date, relative_dir)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> changes_made:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">                file.writelines(modified_content)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Updated file: <span class="subst">&#123;file_path&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> detail <span class="keyword">in</span> changes_detail:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;   Line <span class="subst">&#123;detail[<span class="string">&#x27;line&#x27;</span>]&#125;</span>: <span class="subst">&#123;detail[<span class="string">&#x27;original&#x27;</span>]&#125;</span> -&gt; <span class="subst">&#123;detail[<span class="string">&#x27;modified&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>( <span class="string">&quot;   ...\n&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(f&quot;No changes made to: &#123;file_path&#125;&quot;)</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># print(f&quot;No date line found in: &#123;file_path&#125;&quot;)</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_date</span>(<span class="params">date_line</span>):</span><br><span class="line">    <span class="keyword">match</span> = re.search(<span class="string">r&#x27;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;&#x27;</span>, date_line)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">match</span>.group().replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">modify_content</span>(<span class="params">content, action, blog_name, creation_date, relative_dir</span>):</span><br><span class="line">    changes_made = <span class="literal">False</span></span><br><span class="line">    changes_detail = []</span><br><span class="line"></span><br><span class="line">    image_pattern = re.<span class="built_in">compile</span>(<span class="string">r&quot;!\[\]\(&quot;</span> + re.escape(blog_name) + <span class="string">r&quot;/([^)]+)\)&quot;</span>)</span><br><span class="line">    link_pattern = re.<span class="built_in">compile</span>(<span class="string">r&quot;\]\(&quot;</span> + re.escape(blog_name) + <span class="string">r&quot;/([^)]+)\)&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(content):</span><br><span class="line">        original_line = line</span><br><span class="line">        <span class="keyword">if</span> action == <span class="string">&quot;--upload&quot;</span> <span class="keyword">and</span> creation_date:</span><br><span class="line">            <span class="keyword">if</span> relative_dir:</span><br><span class="line">                line = image_pattern.sub(<span class="string">f&quot;![](/<span class="subst">&#123;creation_date&#125;</span>/<span class="subst">&#123;relative_dir&#125;</span>/<span class="subst">&#123;blog_name&#125;</span>/\\1)&quot;</span>, line)</span><br><span class="line">                line = link_pattern.sub(<span class="string">f&quot;](/<span class="subst">&#123;creation_date&#125;</span>/<span class="subst">&#123;relative_dir&#125;</span>/<span class="subst">&#123;blog_name&#125;</span>/\\1)&quot;</span>, line)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                line = image_pattern.sub(<span class="string">f&quot;![](/<span class="subst">&#123;creation_date&#125;</span>/<span class="subst">&#123;blog_name&#125;</span>/\\1)&quot;</span>, line)</span><br><span class="line">                line = link_pattern.sub(<span class="string">f&quot;](/<span class="subst">&#123;creation_date&#125;</span>/<span class="subst">&#123;blog_name&#125;</span>/\\1)&quot;</span>, line)</span><br><span class="line">        <span class="keyword">elif</span> action == <span class="string">&quot;--local&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> creation_date:</span><br><span class="line">                <span class="keyword">if</span> relative_dir:</span><br><span class="line">                    line = re.sub(<span class="string">r&quot;!\[\]\(/&quot;</span> + re.escape(creation_date) + <span class="string">&quot;/&quot;</span> + re.escape(relative_dir) + <span class="string">&quot;/&quot;</span> + re.escape(blog_name) + <span class="string">r&quot;/([^)]+)\)&quot;</span>, <span class="string">f&quot;![](<span class="subst">&#123;blog_name&#125;</span>/\\1)&quot;</span>, line)</span><br><span class="line">                    line = re.sub(<span class="string">r&quot;\]\(/&quot;</span> + re.escape(creation_date) + <span class="string">&quot;/&quot;</span> + re.escape(relative_dir)  + <span class="string">&quot;/&quot;</span> + re.escape(blog_name) + <span class="string">r&quot;/([^)]+)\)&quot;</span>, <span class="string">f&quot;](<span class="subst">&#123;blog_name&#125;</span>/\\1)&quot;</span>, line)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    line = re.sub(<span class="string">r&quot;!\[\]\(/&quot;</span> + re.escape(creation_date)+ <span class="string">&quot;/&quot;</span> + re.escape(blog_name) + <span class="string">r&quot;/([^)]+)\)&quot;</span>, <span class="string">f&quot;![](<span class="subst">&#123;blog_name&#125;</span>/\\1)&quot;</span>, line)</span><br><span class="line">                    line = re.sub(<span class="string">r&quot;\]\(/&quot;</span> + re.escape(creation_date) + <span class="string">&quot;/&quot;</span> + re.escape(blog_name) + <span class="string">r&quot;/([^)]+)\)&quot;</span>, <span class="string">f&quot;](<span class="subst">&#123;blog_name&#125;</span>/\\1)&quot;</span>, line)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> line != original_line:</span><br><span class="line">            changes_made = <span class="literal">True</span></span><br><span class="line">            changes_detail.append(&#123;<span class="string">&#x27;line&#x27;</span>: i+<span class="number">1</span>, <span class="string">&#x27;original&#x27;</span>: original_line.strip(), <span class="string">&#x27;modified&#x27;</span>: line.strip()&#125;)</span><br><span class="line">            content[i] = line</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> content, changes_made, changes_detail</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    directory = <span class="string">&#x27;./source/_posts&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">2</span> <span class="keyword">or</span> sys.argv[<span class="number">1</span>] <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&quot;--local&quot;</span>, <span class="string">&quot;--upload&quot;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Usage: python script.py --local | --upload&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    action = sys.argv[<span class="number">1</span>]</span><br><span class="line">    find_and_replace_images(directory, action)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Occational Network Disconnection Error On Ubuntu 20.04</title>
    <url>/2023/03/23/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Occational-Network-Disconnection-Error-On-Ubuntu-20-04/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Network Error</li>
<li>Ubuntu Error</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>When I installed my Ubuntu 20.04, it may meet some error because it could not use Wi-Fi module. Even <a href="https://simonczy.github.io/2023/03/15/%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/Install-Linux-By-BIOS-On-Window-Machine/#6-Turn-on-your-Wi-Fi-adapter-optional">I fixed it</a> at that time, my computer <strong>sometimes can not connect to Internet</strong> now.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Reset-the-network-service"><a href="#Reset-the-network-service" class="headerlink" title="Reset the network service"></a>Reset the network service</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service network-manager stop</span><br><span class="line">sudo <span class="built_in">rm</span> /var/lib/NetworkManager/NetworkManager.state</span><br><span class="line">sudo service network-manager start</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Virtual Environment On Ubuntu</title>
    <url>/2023/04/07/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Python-Virtual-Environment-On-Ubuntu/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Python Virtual Environment</li>
</ul>
<span id="more"></span>

<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Install-virtualenv"><a href="#Install-virtualenv" class="headerlink" title="Install virtualenv"></a>Install virtualenv</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-virtualenv</span><br></pre></td></tr></table></figure>

<h3 id="Intialize-the-virtual-environment"><a href="#Intialize-the-virtual-environment" class="headerlink" title="Intialize the virtual environment"></a>Intialize the virtual environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> a_folder</span><br><span class="line"></span><br><span class="line"><span class="comment"># it will create a folder named &quot;venv&quot; which stores virtual environment</span></span><br><span class="line">virtual venv</span><br></pre></td></tr></table></figure>

<h3 id="Activate-the-virtual-environment"><a href="#Activate-the-virtual-environment" class="headerlink" title="Activate the virtual environment"></a>Activate the virtual environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ven/bin/activate</span><br></pre></td></tr></table></figure>

<h3 id="Deactivate-the-virtual-environment"><a href="#Deactivate-the-virtual-environment" class="headerlink" title="Deactivate the virtual environment"></a>Deactivate the virtual environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>Python</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Reactivate Ubuntu Software Store</title>
    <url>/2023/05/21/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Reactivate-Ubuntu-Software-Store/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Can not open your Ubuntu Software Store</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>Suddenly, I couldn’t open my Ubuntu Software Store anymore. (Ubuntu 20.04)</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-The-command-I-already-run-but-may-most-likely-be-unnecessary"><a href="#1-The-command-I-already-run-but-may-most-likely-be-unnecessary" class="headerlink" title="1. The command I already run but may most likely be unnecessary"></a>1. The command I already run but may most likely be unnecessary</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo snap remove snap-store</span><br><span class="line">sudo apt purge snapd</span><br><span class="line">sudo apt install snapd</span><br><span class="line">sudo snap install snap-store</span><br></pre></td></tr></table></figure>

<h3 id="2-The-command-I-already-which-may-be-the-key-to-solve-the-problem-but-havent-been-verified"><a href="#2-The-command-I-already-which-may-be-the-key-to-solve-the-problem-but-havent-been-verified" class="headerlink" title="2. The command I already, which may be the key to solve the problem but havent been verified"></a>2. The command I already, which may be the key to solve the problem but havent been verified</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this following commands may delete the software you install</span></span><br><span class="line"><span class="comment"># via Ubuntu Software Store. Please be careful.</span></span><br><span class="line">sudo <span class="built_in">rm</span> -rvf /var/lib/apt/lists/*</span><br><span class="line">sudp apt-get update</span><br><span class="line">sudo shutdown -r now</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Troubleshoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Turn On SSH Service On Ubuntu</title>
    <url>/2023/03/27/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Turn-On-SSH-Service-On-Ubuntu/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Turn On Ubuntu SSL Service</li>
<li>Connect Ubuntu From Public Network</li>
</ul>
<span id="more"></span>

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>I would like to control my server when I am not at home. Let set target server is A, and the laptop is B.</p>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="1-Get-the-local-IP-of-A"><a href="#1-Get-the-local-IP-of-A" class="headerlink" title="1. Get the local IP of A"></a>1. Get the local IP of A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run on A</span></span><br><span class="line">ifconfig</span><br><span class="line"><span class="comment"># let assume this IP is 192.168.1.1</span></span><br></pre></td></tr></table></figure>

<h3 id="2-SSH-from-B-in-the-same-WI-FI-Fail"><a href="#2-SSH-from-B-in-the-same-WI-FI-Fail" class="headerlink" title="2. SSH from B in the same WI-FI  - Fail"></a>2. SSH from B in the same WI-FI  - Fail</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run on B</span></span><br><span class="line">ssh user@192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh: connect to host user@192.168.1.1 port 22: Connection refused</span></span><br></pre></td></tr></table></figure>

<h3 id="3-Install-OpenSSH-in-A"><a href="#3-Install-OpenSSH-in-A" class="headerlink" title="3. Install OpenSSH  in A"></a>3. Install OpenSSH  in A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y openssh-server</span><br></pre></td></tr></table></figure>

<h3 id="4-SSH-from-B-in-the-same-WI-FI-Success"><a href="#4-SSH-from-B-in-the-same-WI-FI-Success" class="headerlink" title="4. SSH from B in the same WI-FI - Success"></a>4. SSH from B in the same WI-FI - Success</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run on B</span></span><br><span class="line">ssh user@192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># connect successfully</span></span><br><span class="line"><span class="comment"># but not secure enough</span></span><br></pre></td></tr></table></figure>

<h3 id="5-Generate-key-in-A"><a href="#5-Generate-key-in-A" class="headerlink" title="5. Generate key in A"></a>5. Generate key in A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># keep clicking enter</span></span><br><span class="line">ssh-keygen</span><br><span class="line"></span><br><span class="line"><span class="comment"># enter ssh folder to see public key and private key</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy the private key to B</span></span><br></pre></td></tr></table></figure>

<h3 id="6-Change-SSH-configuration-in-A"><a href="#6-Change-SSH-configuration-in-A" class="headerlink" title="6. Change SSH configuration in A"></a>6. Change SSH configuration in A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable:</span></span><br><span class="line"><span class="comment"># use public key to login</span></span><br><span class="line"><span class="comment">#     &quot;PubkeyAuthentication yes&quot;</span></span><br><span class="line"><span class="comment"># people can not use password to login</span></span><br><span class="line"><span class="comment">#     &quot;PasswordAuthentication no&quot;</span></span><br><span class="line"><span class="comment"># change SSL port:</span></span><br><span class="line"><span class="comment">#     &quot;Port 33333&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="7-Restart-SSH-service-in-A"><a href="#7-Restart-SSH-service-in-A" class="headerlink" title="7. Restart SSH service in A"></a>7. Restart SSH service in A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>

<h3 id="8-B-Use-private-key-to-ssh-A"><a href="#8-B-Use-private-key-to-ssh-A" class="headerlink" title="8. B Use private key to ssh A"></a>8. B Use private key to ssh A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh user@192.168.1.1 -p 33333</span><br><span class="line"><span class="comment"># user@192.168.1.1: Permission denied (publickey).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># enter the folder that contains private key</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="comment"># id_rsa</span></span><br><span class="line"><span class="built_in">chmod</span> 0600 id_rsa</span><br><span class="line"></span><br><span class="line">ssh user@192.168.1.1 -p 33333 -i id_rsa</span><br><span class="line"><span class="comment"># login successfully</span></span><br></pre></td></tr></table></figure>

<h3 id="9-Add-private-into-system-in-B"><a href="#9-Add-private-into-system-in-B" class="headerlink" title="9. Add private into system in B"></a>9. Add private into system in B</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># login successfully now even without linking private key, however, it needs to run this command every time you poweroff B</span></span><br><span class="line">ssh-add -K id_rsa</span><br><span class="line">ssh user@192.168.1.1 -p 33333</span><br><span class="line"></span><br><span class="line"><span class="comment"># or you can set up the ssh configuration on B, which is macOS system</span></span><br><span class="line">vim ~/.ssh/config</span><br></pre></td></tr></table></figure>

<p><img data-src="/2023/03/27/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Turn-On-SSH-Service-On-Ubuntu/3.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># and you can ssh A like that now, without setting username, port and identify file</span></span><br><span class="line">ssh ubuntu</span><br></pre></td></tr></table></figure>

<h3 id="10-Connect-to-A-from-public-IP"><a href="#10-Connect-to-A-from-public-IP" class="headerlink" title="10. Connect to A from public IP"></a>10. Connect to A from public IP</h3><p>You need to enter your router to configure NAT Forwarding.</p>
<p><img data-src="/2023/03/27/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Turn-On-SSH-Service-On-Ubuntu/1.png"></p>
<p><img data-src="/2023/03/27/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Turn-On-SSH-Service-On-Ubuntu/2.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># you can now ssh to your server in outside by public IP address just like you did in your local network</span></span><br><span class="line">ssh user@142.251.165.100 -p 33333 -i id_rsa</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://simonczy.github.io/2023/03/09/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/Mac-SSH-Amazon-Using-Pem/">Mac SSH Amazon Using Pem</a></p>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>Linux</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>git commit的模版定义</title>
    <url>/2024/06/05/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/git-commit%E7%9A%84%E6%A8%A1%E7%89%88%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[<p>💡 本文对以下场景有所帮助</p>
<ul>
<li>定义commit的模版</li>
</ul>
<span id="more"></span>

<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>每次都要写commit message太麻烦，干脆定义一个通用的模板</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1-定义模板文件"><a href="#1-定义模板文件" class="headerlink" title="1. 定义模板文件"></a>1. 定义模板文件</h3><p><img data-src="/2024/06/05/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/git-commit%E7%9A%84%E6%A8%A1%E7%89%88%E5%AE%9A%E4%B9%89/1.png"></p>
<h3 id="2-在git-config中指定模版信息"><a href="#2-在git-config中指定模版信息" class="headerlink" title="2. 在git config中指定模版信息"></a>2. 在git config中指定模版信息</h3><p><img data-src="/2024/06/05/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/git-commit%E7%9A%84%E6%A8%A1%E7%89%88%E5%AE%9A%E4%B9%89/2.png"></p>
<p>记得区分作用范围，system、global和local三个不同的范围</p>
<h3 id="3-效果展示"><a href="#3-效果展示" class="headerlink" title="3. 效果展示"></a>3. 效果展示</h3><p>从此以后，你的commit窗口会自带你所配置的commit信息</p>
<p><img data-src="/2024/06/05/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/git-commit%E7%9A%84%E6%A8%A1%E7%89%88%E5%AE%9A%E4%B9%89/3.png"></p>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>在MacOS删除Word中的Mendeley</title>
    <url>/2024/01/26/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/%E5%9C%A8MacOS%E5%88%A0%E9%99%A4Word%E4%B8%AD%E7%9A%84Mendeley/</url>
    <content><![CDATA[<p>💡 本文对以下场景有所帮助</p>
<ul>
<li>在macOS删除Mendeley并消除其影响</li>
<li>管理Word中的加载项</li>
</ul>
<span id="more"></span>

<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>这是个很久没用的软件了，想着直接删除就好了，没想到还影响了Word的使用。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1-直接删除Mendeley"><a href="#1-直接删除Mendeley" class="headerlink" title="1. 直接删除Mendeley"></a>1. 直接删除Mendeley</h3><p>我这里使用的是<a href="http://freemacsoft.net/appcleaner/">AppCleaner</a>直接删除的Mendeley，想着删除完就好了，没想到删除了之后word一直在报各种异常（如下），因此才有后续的步骤。</p>
<p><img data-src="/2024/01/26/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/%E5%9C%A8MacOS%E5%88%A0%E9%99%A4Word%E4%B8%AD%E7%9A%84Mendeley/1.png"></p>
<p><img data-src="/2024/01/26/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/%E5%9C%A8MacOS%E5%88%A0%E9%99%A4Word%E4%B8%AD%E7%9A%84Mendeley/2.png"></p>
<h3 id="2-打开Word加载项"><a href="#2-打开Word加载项" class="headerlink" title="2. 打开Word加载项"></a>2. 打开Word加载项</h3><p><img data-src="/2024/01/26/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/%E5%9C%A8MacOS%E5%88%A0%E9%99%A4Word%E4%B8%AD%E7%9A%84Mendeley/3.png"></p>
<h3 id="3-定位到Word启动时调用的Mendeley模版路径"><a href="#3-定位到Word启动时调用的Mendeley模版路径" class="headerlink" title="3. 定位到Word启动时调用的Mendeley模版路径"></a>3. 定位到Word启动时调用的Mendeley模版路径</h3><p><img data-src="/2024/01/26/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/%E5%9C%A8MacOS%E5%88%A0%E9%99%A4Word%E4%B8%AD%E7%9A%84Mendeley/4.png"></p>
<h3 id="4-删除该模版即可"><a href="#4-删除该模版即可" class="headerlink" title="4. 删除该模版即可"></a>4. 删除该模版即可</h3><p>在完全退出Word后，删除目标路径下Mendeley的dotm文件。此时重新打开Word，问题已解决。</p>
<p><img data-src="/2024/01/26/%E7%BB%B4%E4%BF%AE%E6%8A%A5%E5%91%8A/%E5%9C%A8MacOS%E5%88%A0%E9%99%A4Word%E4%B8%AD%E7%9A%84Mendeley/5.png"></p>
]]></content>
      <tags>
        <tag>MacOS</tag>
        <tag>Troubleshoot</tag>
      </tags>
  </entry>
  <entry>
    <title>C++代码知识整理</title>
    <url>/2023/08/24/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/cpp/Cpp%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>💡 面向就业的C++代码知识整理</p>
<span id="more"></span>

<h1 id="C-代码知识"><a href="#C-代码知识" class="headerlink" title="C++代码知识"></a>C++代码知识</h1><h3 id="For"><a href="#For" class="headerlink" title="For"></a>For</h3><h4 id="for-each"><a href="#for-each" class="headerlink" title="for-each"></a>for-each</h4><h4 id="for-specific-value"><a href="#for-specific-value" class="headerlink" title="for specific value"></a>for specific value</h4><h3 id="Reference-amp"><a href="#Reference-amp" class="headerlink" title="Reference (&amp;)"></a>Reference (&amp;)</h3><h4 id="Use-Reference-in-Function-Parameter"><a href="#Use-Reference-in-Function-Parameter" class="headerlink" title="Use Reference in Function Parameter"></a>Use Reference in Function Parameter</h4><h3 id="Iterator"><a href="#Iterator" class="headerlink" title="Iterator"></a>Iterator</h3><p>The magical way to use trravelsal in STL (vector, map, list).</p>
<h4 id="Forward-amp-Backward"><a href="#Forward-amp-Backward" class="headerlink" title="Forward &amp; Backward"></a>Forward &amp; Backward</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># forward</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span> ,<span class="number">8</span>&#125;;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator i;</span><br><span class="line"><span class="keyword">for</span> (i = v.<span class="built_in">begin</span>(); i != v.<span class="built_in">end</span>(); ++i) &#123;</span><br><span class="line">    count &lt;&lt; *i; <span class="meta"># use *i to show the item</span></span><br><span class="line">&#125; # <span class="number">13578</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># backward</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span> ,<span class="number">8</span>&#125;;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::reverse_iterator i;</span><br><span class="line"><span class="keyword">for</span> (i = v.<span class="built_in">rbegin</span>(); i != v.<span class="built_in">rend</span>(); ++i) &#123;</span><br><span class="line">    count &lt;&lt; *i; <span class="meta"># use *i to show the item</span></span><br><span class="line">&#125; # <span class="number">87531</span></span><br></pre></td></tr></table></figure>

<h2 id="C-11"><a href="#C-11" class="headerlink" title="C++ 11"></a>C++ 11</h2><h3 id="Emplace"><a href="#Emplace" class="headerlink" title="Emplace"></a>Emplace</h3><h4 id="why-emplace-function-have-a-better-efficiency"><a href="#why-emplace-function-have-a-better-efficiency" class="headerlink" title="why emplace function have a better efficiency"></a>why emplace function have a better efficiency</h4><p>Emplace can just create the data at the suitable location. But insert need to create first and then move to the suitable.</p>
<h3 id="Auto"><a href="#Auto" class="headerlink" title="Auto"></a>Auto</h3><p>Before c++11, auto exists but is useless.</p>
<p>On c++11, auto is used to infer data type. For example, if you have a very long data type name, you can use auto to replace it.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># you have a unorder_map name umap and you want to create a iterator</span></span><br><span class="line">std::unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;::iterator iter = umap.<span class="built_in">begin</span>();</span><br><span class="line"><span class="meta"># now you can replace as</span></span><br><span class="line"><span class="keyword">auto</span> iter = umap.<span class="built_in">begin</span>();</span><br></pre></td></tr></table></figure>

<h2 id="Data-Structure"><a href="#Data-Structure" class="headerlink" title="Data Structure"></a>Data Structure</h2><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><h4 id="hashmap"><a href="#hashmap" class="headerlink" title="hashmap"></a>hashmap</h4><p>There is no standard hashmap before c++11. So c++11 adds hashmap into its standard library and names ‘unorder_map’</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"># Initialization</span><br><span class="line">std::unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; umap;</span><br><span class="line"></span><br><span class="line"><span class="meta"># add item</span></span><br><span class="line">umap.<span class="built_in">emplace</span>(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">umap.<span class="built_in">emplace</span>(<span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Draft</category>
      </categories>
      <tags>
        <tag>Quick Check</tag>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>C++概念知识整理</title>
    <url>/2023/08/24/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/cpp/Cpp%E6%A6%82%E5%BF%B5%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>💡 面向就业的C++概念知识整理</p>
<span id="more"></span>

<h1 id="C-概念知识"><a href="#C-概念知识" class="headerlink" title="C++概念知识"></a>C++概念知识</h1><h2 id="内存存储机制"><a href="#内存存储机制" class="headerlink" title="内存存储机制"></a>内存存储机制</h2><p>根据数据类型的不同，C++会将数据会存储在内存的不同位置。请分别介绍内存位置及其对应数据类型。</p>
<details>
<summary>答案</summary>

<ul>
<li><strong>堆</strong><ul>
<li>存放程序所申请的内存，如malloc和new申请的内存</li>
<li>生命周期取决于程序员的申请和释放，free和delete</li>
</ul>
</li>
<li><strong>栈</strong><ul>
<li>存放函数参数，函数中的局部变量和临时变量。</li>
<li>生命周期从函数调用开始到函数调用结束。因此都是用栈来存储，后进先出，用完就丢。</li>
<li>爆栈的说法，其实也就是函数调用的次数太深。</li>
</ul>
</li>
<li><strong>全局&#x2F;静态存储区</strong><ul>
<li>用来存放全局变量、静态变量和常量</li>
<li>生命周期从程序开始到程序结束</li>
</ul>
</li>
<li><strong>常量字符串存储区</strong><ul>
<li>常量字符串和其他文字常量</li>
<li>属于只读类型</li>
</ul>
</li>
<li><strong>代码区</strong><ul>
<li>程序运行的机器码</li>
<li>属于只读类型</li>
</ul>
</li>
</ul>
</details>

<h2 id="malloc和new的区别"><a href="#malloc和new的区别" class="headerlink" title="malloc和new的区别"></a>malloc和new的区别</h2><details>
<summary>答案</summary>

<ul>
<li><strong>来源与用途</strong>：<ul>
<li><code>malloc</code>: 来自C语言的标准库。用于分配指定大小的连续内存块。</li>
<li><code>new</code>: 是C++中的运算符。除了分配内存外，还会调用对象的构造函数。</li>
</ul>
</li>
<li><strong>返回类型</strong>：<ul>
<li><code>malloc</code>: 返回<code>void*</code>，这意味着返回的指针需要强制转换为适当的类型。</li>
<li><code>new</code>: 返回分配的数据类型的正确指针，不需要任何类型转换。</li>
</ul>
</li>
<li><strong>错误处理</strong><ul>
<li><code>malloc</code>: 如果分配失败，返回<code>NULL</code>。</li>
<li><code>new</code>: 如果分配失败，会抛出<code>std::bad_alloc</code>异常（除非使用<code>new(std::nothrow)</code>，这种情况下如果分配失败会返回<code>NULL</code>）。</li>
</ul>
</li>
<li><strong>初始化</strong><ul>
<li><code>malloc</code>: 仅仅分配内存，不初始化。也有对应的<code>calloc</code>函数，可以初始化分配的内存为零。</li>
<li><code>new</code>: 对于非内建类型，会调用相应的构造函数进行初始化。</li>
</ul>
</li>
<li><strong>大小参数</strong><ul>
<li><code>malloc</code>: 需要提供要分配的字节大小，例如<code>malloc(5 * sizeof(int))</code>。</li>
<li><code>new</code>: 根据数据类型自动确定大小，例如<code>new int[5]</code>。</li>
</ul>
</li>
<li><strong>配对的释放操作</strong>：<ul>
<li><code>malloc</code>: 使用<code>free</code>来释放内存。</li>
<li><code>new</code>: 使用<code>delete</code>或<code>delete[]</code>来释放内存。</li>
</ul>
</li>
<li><strong>灵活性与重载</strong><ul>
<li><code>malloc</code>: 不能被重载。</li>
<li><code>new</code>: 在C++中可以被重载，为用户提供更多的灵活性。</li>
</ul>
</li>
</ul>
</details>

<p>构造函数和析构函数</p>
<p>智能指针</p>
<p>类的特殊成员函数</p>
<h2 id="C-11如何保证代码只运行了一次"><a href="#C-11如何保证代码只运行了一次" class="headerlink" title="C++11如何保证代码只运行了一次"></a>C++11如何保证代码只运行了一次</h2><details>
<summary>答案</summary>

<p>都是使用预处理指令，不过有两种方法：</p>
<p>1.依赖于不冲突的宏名称</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设这是个test.h的文件，即头文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在文件开始</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _TEST_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _TEST_H_</span></span><br><span class="line"></span><br><span class="line">... <span class="comment">// 头文件中的实际内容</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">// 在文件最后</span></span><br></pre></td></tr></table></figure>

<p>2.依赖于编译器：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在头文件中使用</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br></pre></td></tr></table></figure>

</details>

<h2 id="四种C-11引入的cast方式"><a href="#四种C-11引入的cast方式" class="headerlink" title="四种C++11引入的cast方式"></a>四种C++11引入的cast方式</h2><details>
<summary>答案</summary>

<ul>
<li>const_cast：设置或者移除对象的const</li>
<li>reinterpret_cast：可以做任意转换，不进行检查</li>
<li>static_cast：类似原有的括号转换，可以upcast或downcast，不进行检查</li>
<li>dynamic_cast：可以upcast或downcast，会进行检查，对性能有损耗</li>
</ul>
</details>

<h2 id="struct和class的区别"><a href="#struct和class的区别" class="headerlink" title="struct和class的区别"></a>struct和class的区别</h2><details>
<summary>答案</summary>



</details>

<p>new的操作符重载</p>
<p>std::memset</p>
<p>继承与多态</p>
<p>类中的this</p>
<p>静态变量和常量</p>
<p>inline和extern</p>
<p>c++初始化顺序</p>
<p>c++新特性</p>
<p>虚函数和纯虚函数</p>
<p>宏</p>
<p>cmake</p>
<p>GDB</p>
]]></content>
      <categories>
        <category>Draft</category>
      </categories>
      <tags>
        <tag>Quick Check</tag>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode-Q1-Cpp</title>
    <url>/2023/08/09/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/leetcode/Leetcode-Q1-Cpp/</url>
    <content><![CDATA[<p>💡 记录刷题过程 Leetcode 第1题 c++</p>
<span id="more"></span>

<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a><a href="https://leetcode.cn/problems/two-sum/">问题描述</a></h2><p><img data-src="/2023/08/09/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/leetcode/Leetcode-Q1-Cpp/1.png"></p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>首先暴力求解，时间复杂度是n^2。</p>
<p>然后开始思考优化过程，这是个搜索任务，原始的搜索复杂度为n。我们可以改用哈希表，使搜索复杂度降低到O(1)。</p>
<h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p>O(n)</p>
<h2 id="价值"><a href="#价值" class="headerlink" title="价值"></a><strong>价值</strong></h2><ul>
<li>熟悉unorder_map的使用</li>
<li>构建查找与哈希的关联，构建查找为O(1)与哈希的关联</li>
</ul>
<h2 id="对应的c-代码如下"><a href="#对应的c-代码如下" class="headerlink" title="对应的c++代码如下"></a>对应的c++代码如下</h2>]]></content>
      <categories>
        <category>Draft</category>
      </categories>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode Q64 Cpp</title>
    <url>/2023/08/25/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/leetcode/Leetcode-Q64-Cpp/</url>
    <content><![CDATA[<p>💡 记录刷题过程 Leetcode 第64题 c++</p>
<span id="more"></span>

<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a><a href="https://leetcode.cn/problems/minimum-path-sum/">问题描述</a></h2><p><img data-src="/2023/08/25/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/leetcode/Leetcode-Q64-Cpp/1.png"></p>
<h2 id="错误回顾"><a href="#错误回顾" class="headerlink" title="错误回顾"></a>错误回顾</h2><p>当时我第一反应其实没想到dp，反而是往dfs+贪心的方向上去想。</p>
<p>也说不准为啥这里要用dp，但是思维上接受dp之后，就觉得这道题目用dp写就真的很优雅，也就想不到别的思路了</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>对于每个点而言，它只能通过<code>上边</code>或<code>左边</code>的点抵达。因此，如果现在要求抵达某个点的<code>最短路径长度</code>，则是<code>上边</code>或者<code>左边</code>的<code>较小值</code>，与本身路径的长度之和。满足最优子结构。</p>
<p>在此DP任务中，我们需要用到的是和原二维表一样大小的二维表来存储数据。</p>
<h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p>全部点都遍历且只遍历一遍，因此时间复杂度是O(m*n)</p>
<h2 id="价值"><a href="#价值" class="headerlink" title="价值"></a>价值</h2><ul>
<li>熟悉二维vector的使用</li>
<li>作为dp的入门题目，感受了dp的魅力。</li>
</ul>
<h2 id="对应的c-代码如下"><a href="#对应的c-代码如下" class="headerlink" title="对应的c++代码如下"></a>对应的c++代码如下</h2>]]></content>
      <categories>
        <category>Draft</category>
      </categories>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>Recommended Software On MacOS</title>
    <url>/2023/03/21/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/%E7%BA%AF%E6%89%93%E5%8D%A1/Recommended-Software-On-MacOS/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>MacOS Software Recommendation</li>
</ul>
<span id="more"></span>

<h2 id="Screenshot"><a href="#Screenshot" class="headerlink" title="Screenshot"></a>Screenshot</h2><p><a href="https://www.snipaste.com/">Snipaste</a> 🌟🌟🌟🌟🌟</p>
<h2 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h2><p>ForkLift 🌟🌟🌟🌟🌟</p>
<h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><p>Typora (Free Version) 🌟🌟🌟🌟🌟</p>
<p><a href="https://github.com/marktext/marktext">MarkText</a> 🌟🌟🌟🌟</p>
<h2 id="Terminal"><a href="#Terminal" class="headerlink" title="Terminal"></a>Terminal</h2><p><a href="https://iterm2.com/">iTerm</a>🌟🌟🌟🌟🌟</p>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Recommended Software On Ubuntu 20.04</title>
    <url>/2023/03/21/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/%E7%BA%AF%E6%89%93%E5%8D%A1/Recommended-Software-On-Ubuntu-20-04/</url>
    <content><![CDATA[<p>💡 This post is insightful for the following scenarios.</p>
<ul>
<li>Linux Software Recommendation</li>
</ul>
<span id="more"></span>

<h2 id="Screenshot"><a href="#Screenshot" class="headerlink" title="Screenshot"></a>Screenshot</h2><p><a href="https://github.com/flameshot-org/flameshot">Flameshot</a> ❓</p>
<h2 id="Cloud-Storage"><a href="#Cloud-Storage" class="headerlink" title="Cloud Storage"></a>Cloud Storage</h2><p><a href="https://www.jianguoyun.com/">Nutstore</a></p>
<h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><p>Typora (Free Version) 🌟🌟🌟🌟🌟</p>
]]></content>
      <tags>
        <tag>Env/Config</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>技术栈整理</title>
    <url>/2024/05/14/%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/%E7%BA%AF%E6%89%93%E5%8D%A1/%E6%8A%80%E6%9C%AF%E6%A0%88%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>💡 本文对以下场景有所帮助</p>
<ul>
<li>梳理不同技术场景下的常用技术栈</li>
</ul>
<span id="more"></span>

<h2 id="网页开发"><a href="#网页开发" class="headerlink" title="网页开发"></a>网页开发</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>streamlit：不需要前后端知识，只关注信息呈现，用类似markdown的写法来表现数据内容</p>
<p>amis：百度前端低代码框架，通过json和拖拉拽的方式实现前端，能覆盖大部分前端场景</p>
]]></content>
      <categories>
        <category>Draft</category>
      </categories>
      <tags>
        <tag>Quick Check</tag>
      </tags>
  </entry>
</search>
